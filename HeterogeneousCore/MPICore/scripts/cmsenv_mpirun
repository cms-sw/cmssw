#! /bin/bash


function usage() {
    echo "Usage: $0 [-v, --verbose] [-h, --help] <mpirun options>"
    echo
    echo "Options:"
    echo "  -v, --verbose   Make this script verbose"
    echo "  -h, --help      Show this help message"

    exit 0
}

VERBOSE=false


# See if help or verbose options were passed
CANDIDATE_EXTRA_OPTS="$1 $2"
if [[ "$CANDIDATE_EXTRA_OPTS" == *"-h "* || "$CANDIDATE_EXTRA_OPTS" == *"--help "* ]]; then
    usage
fi
if [[ "$CANDIDATE_EXTRA_OPTS" == *"-v "* || "$CANDIDATE_EXTRA_OPTS" == *"--verbose "* ]]; then
    VERBOSE=true
    shift
fi

MPIRUN_PREDICATE="${@:1}"

# Get MPI implementation and major version number
MPIRUN_VERSION="$(mpirun --version)"

SSH_WRAPPER_OPTION=""
if [[ "$MPIRUN_VERSION" == *"Open MPI"* ]]; then
    MAJOR_VERSION="$(echo "$MPIRUN_VERSION" | awk '/Open MPI/ {print substr($4,1,1)}')"

    if [[ "$MAJOR_VERSION" == 5 ]]; then
        SSH_WRAPPER_OPTION="--prtemca plm_ssh_agent"

    elif [[ "$MAJOR_VERSION" == 4 ]]; then
        SSH_WRAPPER_OPTION="--mca plm_rsh_agent"
    fi
    
elif [[ "$MPIRUN_VERSION" == *"HYDRA"* ]]; then
    SSH_WRAPPER_OPTION="-launcher-exec"
fi

if [[ -z "$SSH_WRAPPER_OPTION" ]]; then
    echo "Error: could not determine MPI implementation from 'mpirun --version' output:"
    echo "$MPIRUN_VERSION"
    exit 1
fi

# full path to cmsenv_ssh
# RELEASE_BASE=
# for VAR in CMSSW_BASE CMSSW_RELEASE_BASE CMSSW_FULL_RELEASE_BASE; do
#   TEST_PATH=${!VAR}
#   if [ -x $TEST_PATH/bin/$SCRAM_ARCH/cmsenv_ssh ]; then
#     RELEASE_BASE=$TEST_PATH
#     break
#   fi
# done
# if [ -z "$RELEASE_BASE" ]; then
#   echo "Error: cannot find cmsenv_ssh in the \$PATH."
#   exit 1
# fi

MPI_CMD="mpirun $SSH_WRAPPER_OPTION /data/user/apolova/dev1/CMSSW_15_1_0_pre4/src/HeterogeneousCore/MPICore/scripts/cmsenv_ssh $MPIRUN_PREDICATE"

if [[ "$VERBOSE" == true ]]; then
    echo "--------------------------------------------------------------------------------"
    echo "MPI command: $MPI_CMD"
    echo "--------------------------------------------------------------------------------"
fi

exec $MPI_CMD
