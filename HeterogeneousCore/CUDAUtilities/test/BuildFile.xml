<use name="HeterogeneousCore/CUDAUtilities"/>

<bin file="assert_t.cu" name="cudaAssert_t">
</bin>

<bin file="assert_t.cu"    name="cudaAssert_debug">
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="test_GPUSimpleVector.cu" name="test_GPUSimpleVector">
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="cudastdAlgorithm_t.cpp">
</bin>

<bin file="cudastdAlgorithm_t.cu" name="gpuCudastdAlgorithm_t">
  <use name="cuda-api-wrappers"/>
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="radixSort_t.cu" name="gpuRadixSort_t">
  <use name="cuda-api-wrappers"/>
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="radixSort_t.cu" name="gpuRadixSort_debug">
  <use name="cuda-api-wrappers"/>
  <flags CUDA_FLAGS="-g -G -DGPU_DEBUG"/>
  <flags REM_CUDA_FLAGS="--generate-line-info -lineinfo"/>
</bin>

<bin file="HistoContainer_t.cpp">
  <flags CXXFLAGS="-g"/>
</bin>

<bin file="HistoContainer_t.cu" name="gpuHistoContainer_t">
  <use name="cuda-api-wrappers"/>
  <use name="cub"/>
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="HistoContainer_t.cu" name="gpuHistoContainer_debug">
  <use name="cuda-api-wrappers"/>
  <use name="cub"/>
  <flags CUDA_FLAGS="-g -G -DGPU_DEBUG"/>
  <flags REM_CUDA_FLAGS="--generate-line-info -lineinfo"/>
</bin>

<bin file="OneHistoContainer_t.cu" name="gpuOneHistoContainer_t">
  <use name="cuda-api-wrappers"/>
  <use name="cub"/>
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="AtomicPairCounter_t.cu" name="gpuAtomicPairCounter_t">
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="OneToManyAssoc_t.cu" name="gpuOneToManyAssoc_t">
  <use name="cuda-api-wrappers"/>
  <use name="cub"/>
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="OneToManyAssoc_t.cpp" name="cpuOneToManyAssoc_t">
  <flags CXXFLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="prefixScan_t.cu" name="gpuPrefixScan_t">
  <use name="cub"/>
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="testCatch2Main.cpp,copyAsync_t.cpp,memsetAsync_t.cpp,host_noncached_unique_ptr_t.cpp" name="cudaMemUtils_t">
  <use name="HeterogeneousCore/CUDAServices"/>
  <use name="catch2"/>
</bin>


<bin file="eigenSoA_t.cpp" name="cpuEigenSoA_t">
  <use name="eigen"/>
  <flags CXXFLAGS="-g -DGPU_DEBUG"/>
</bin>

<bin file="eigenSoA_t.cu" name="gpuEigenSoA_t">
  <use name="eigen"/>
  <flags CUDA_FLAGS="-g -DGPU_DEBUG"/>
  <flags CXXFLAGS="-g -DGPU_DEBUG"/>
</bin>

