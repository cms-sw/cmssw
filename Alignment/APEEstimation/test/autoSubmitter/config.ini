# define data sets like this
[dataset:exampleDataset]
# directory where to look, probably starting with /eos/cms/store/caf/user/<username>
baseDirectory=/some/directory
# define input files, separate files with " ", use ranges for multiple files. [1-6,8,10] will be replaced by files with 1,2,3,4,5,6,8, and 10 in its place
fileNames=filename.root otherFile_[1-6,8,10]_[1-2].root
# optional, events per file, not total maxEvents
maxEvents=-1
# optional, set to True for MC samples, False by default
isMC=False

#define alignments like this
[alignment:alignmentObject]
# if you want to use a custom GT you can add it here or simply define it 
# in apeEstimation_cfg.py. If it is not defined or None, it will not overwrite
# anything defined in apeEstimation_cfg.py
globalTag=None
# name as defined in apeEstimation_cfg.py, optional if alignment is loaded by condition
alignmentName=alignmentObjectName
# name of baseline folder. Only used if isDesign is False, elsewise the 
# name of the APE measurement is used, Design by default
baselineDir=Design
# is this a baseline measurement? False by default
isDesign=False
# You can add your conditions here. If a TrackerAlignmentRcd is defined, 
# it will override the one defined by alignmentName
condition TrackerAlignmentRcd=sqlite_file:/afs/asdf.db Alignments
condition TrackerSurfaceDeformationRcd=sqlite_file:/afs/asdf.db Deformations
# another way to load these is:
condition Alignments+Deformations:sqlite_file:/afs/asdf.db
# in this case, the Rcd name has to be guessed by the autoSubmitter, 
# so functionality is limited

# define measurements like this
[measurements]
# name: dataset alignment
# unique names are important as this name will be used as a folder name
# where all relevant files are stored
# additional arguments are added with spaces in the structure option=value
exampleName: exampleDataset alignmentObject 
# Additional arguments can be (default arguments in brackets):
# firstIteration (0)
# maxIterations (15) 
# maxEvents (-1 or from dataset)
# 
# for automatic result plot:
# resultPlotDo (False) 
# resultPlotTitle() 
# resultPlotOutPath(path of measurement)


[resultplot:Name]
# wait for these measurements to finish (have to be run in same instance)
wait label:exampleName
# load APE from these files (in labels ~ is replaced with whitespaces)
load label~with~empty~spaces:/path/to/allData_iterationApe.root
# optional attributes
load label~with~empty~spaces2:/path/to/allData_iterationApe.root color=ROOT.kRed+2 marker=0
# output path. If not defined, store in hists/Name
outPath=/asdf/
# title to the plot, optional
title=Whatever title you want
