process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(7500)
)

import RecoTracker.TrackProducer.TrackRefitters_cff
process.TrackRefitter1 = RecoTracker.TrackProducer.TrackRefitter_cfi.TrackRefitter.clone()
#process.TrackRefitter1.src = '<SKIM>'
process.TrackRefitter1.src = 'initialAlignmentTrackSelector'


#initial track selector ( new )
import Alignment.CommonAlignmentProducer.AlignmentTrackSelector_cfi
process.initialAlignmentTrackSelector = Alignment.CommonAlignmentProducer.AlignmentTrackSelector_cfi.AlignmentTrackSelector.clone()
process.initialAlignmentTrackSelector.src = '<SKIM>'
process.initialAlignmentTrackSelector.filter = True
process.initialAlignmentTrackSelector.applyBasicCuts = True

process.initialAlignmentTrackSelector.pMin    = 4.0
process.initialAlignmentTrackSelector.ptMin   = 0.0
process.initialAlignmentTrackSelector.etaMin  = -999.
process.initialAlignmentTrackSelector.etaMax  = 999.
process.initialAlignmentTrackSelector.nHitMin = 0
process.initialAlignmentTrackSelector.nHitMin2D = 0
process.initialAlignmentTrackSelector.chi2nMax = 1000.0
process.initialAlignmentTrackSelector.applyMultiplicityFilter = True
process.initialAlignmentTrackSelector.maxMultiplicity = 1000
process.initialAlignmentTrackSelector.applyNHighestPt = False

# parameters for alignmentHitFilter
process.TrackerTrackHitFilter.src = 'TrackRefitter1'
process.TrackerTrackHitFilter.commands = cms.vstring("keep PXB","keep PXE","keep TIB","keep TID","keep TOB","keep TEC")
process.TrackerTrackHitFilter.minimumHits = 5
process.TrackerTrackHitFilter.replaceWithInactiveHits = True
process.TrackerTrackHitFilter.stripAllInvalidHits = False
process.TrackerTrackHitFilter.rejectBadStoNHits = True
process.TrackerTrackHitFilter.StoNcommands = cms.vstring("ALL 12.0")
process.TrackerTrackHitFilter.useTrajectories= True
process.TrackerTrackHitFilter.rejectLowAngleHits= True
process.TrackerTrackHitFilter.TrackAngleCut= 0.17 #~10 degrees
process.TrackerTrackHitFilter.usePixelQualityFlag= True
# process.TrackerTrackHitFilter.PxlCorrClusterChargeCut=10000.0


# track producer to be run after the alignment hit filter
import RecoTracker.TrackProducer.CTFFinalFitWithMaterial_cff
process.ctfProducerCustomised = RecoTracker.TrackProducer.CTFFinalFitWithMaterial_cff.ctfWithMaterialTracks.clone()
process.ctfProducerCustomised.src = 'TrackerTrackHitFilter'
##process.ctfProducerCustomised.beamspot='offlineBeamSpot'
process.ctfProducerCustomised.TTRHBuilder = 'WithAngleAndTemplate'
process.ctfProducerCustomised.TrajectoryInEvent = True
process.ctfProducerCustomised.NavigationSchool = ''

# parameters for TrackSelector
###process.AlignmentTrackSelector.src = '<SKIM>'
process.AlignmentTrackSelector.src = 'ctfProducerCustomised'

# track selection for sample in filename...
process.AlignmentTrackSelector.filter = True
process.AlignmentTrackSelector.applyBasicCuts = True
process.AlignmentTrackSelector.pMin    = 6.0
process.AlignmentTrackSelector.ptMin   = 0.0
process.AlignmentTrackSelector.etaMin  = -999.
process.AlignmentTrackSelector.etaMax  = 999.
process.AlignmentTrackSelector.nHitMin = 8
process.AlignmentTrackSelector.nHitMin2D = 2
process.AlignmentTrackSelector.chi2nMax = 9999.
process.AlignmentTrackSelector.applyMultiplicityFilter = True
process.AlignmentTrackSelector.maxMultiplicity = 30
process.AlignmentTrackSelector.applyNHighestPt = False

process.TrackRefitter2 = process.TrackRefitter1.clone()
process.TrackRefitter2.src = 'AlignmentTrackSelector'
