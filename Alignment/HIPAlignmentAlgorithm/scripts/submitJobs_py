#!/bin/tcsh

# get working dir to set environment
source /afs/cern.ch/cms/caf/setup.csh
set workdir = `cd ../../; pwd`

set iter = $1                          # final iteration number
set odir = `cd $2; pwd`                # get full output path
set name = `basename $odir`            # for job name
set jobs = `ls -d $odir/job*/ | wc -l` # number of jobs
set queue = cmscaf1nd                   # pick queue to run on
set startdir = `pwd`
## Submit jobs and iterate

@ i = `cat $odir/main/IOIteration.root` + 1

while (`bjobs -d -w |& grep $name/requeue$i` != "") # check if job name exists
  set name = $name/ # make job name unique to avoid name clash
end

echo Starting iteration = $i, final iteration = $iter, number of jobs = $jobs

@ COLLECT_ERROR = 0
while ($i <= $iter)

  echo Running iteration $i

  if ($jobs > 0) then
    @ j = 0 # job index
    echo "submit parallel jobs..."
	bsub -q $queue -C 0 -J $name/align$i\[1-$jobs\] \
         -oo $odir/job%I/align$i.out $odir/job\$LSB_JOBINDEX/runScript.csh $workdir

    sleep 15
    set id = `bjobs -J $name/align$i | tail -n1 | awk '{print $1}'`
    echo "ID=$id"
    echo "submit collect..."
    bsub -q $queue -C 0 -J $name/collect$i -w "done($id)" \
         -oo $odir/main/collect$i.out $odir/main/runScript.csh $workdir

	 echo "submit stoprequeue"
    bsub -q $queue -C 0 -J $name/stopreq$i -w "ended($name/collect$i)" \
         -o /dev/null bkill -J $name/requeue$i

    #new
	 echo "Submit runcontrol"
	bsub -q $queue -C 0 -oo $odir/main/runControl$i.txt $odir/main/runControl.csh $odir $i
## When <collect> job ends, <requeue> job is killed and gets an EXIT status.
## And we can stop requeuing failed <align> jobs.

    while (`bjobs -d -J $name/requeue$i |& grep EXIT` == "")
    echo "Submitting requeue"
      bsub -q cmsinter -C 0 -J $name/requeue$i -w "numexit($id, > 0)" \
           -I brequeue -e $id
      sleep 60
    end

  else
    bsub -q $queue -C 0 -J $name/collect$i -K \
         -oo $odir/main/collect$i.out $odir/main/runScript.csh $workdir
  endif

  sleep 5
  if (`bjobs -d -J $name/collect$i | tail -n1 | grep EXIT` != "") exit 1
#check if something went wrong, in case warn the owner of the job
#create a db every 10 iters as a backup
  cd $odir/main/
    ./checkError.sh $USER
    @ errstatus = $?
    if ($errstatus == 0) then
    @ mod =  $i % 1 
   # echo "Modulus is $mod"
	if ( $mod == 0 && $COLLECT_ERROR == 0 )	then
	cd ${CMSSW_BASE}/src/
	eval `scramv1 runtime -csh`
	cd $odir
	cp $odir/main/IOIteration.root $odir/
	cp $odir/main/IOAlignedPositions.root $odir/
	cmsRun upload_cfg.py > upload_iter${i}.out
	mv alignments.db alignments_iter${i}.db
	rm -f $odir/*.root
	cd -
    endif 
 else
   @ COLLECT_ERROR++
 endif
 cd $startdir

## Clean up after collector has finished successfully.

  rm -rf $odir/job*/IOUserVariables.root
  rm -rf $odir/job*/DONE1
  rm -rf $odir/main/runControl*.txt
  gzip $odir/job*/*.out
  gzip $odir/main/*.out

  @ i++
end
