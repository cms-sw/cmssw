
/*!

\page Alignment_LaserAlignment Package Alignment/LaserAlignment

<center>
<small>

<!-- @CVS_TAG@ will be substituted at build time, no need to touch -->
<a href=http://cmssw.cvs.cern.ch/cgi-bin/cmssw.cgi/CMSSW/Alignment/LaserAlignment/?cvsroot=CMSSW&only_with_tag=@CVS_TAG@>Source code (CVS tag: @CVS_TAG@)</a> - 
<a href=http://cmssw.cvs.cern.ch/cgi-bin/cmssw.cgi/CMSSW/Alignment/LaserAlignment/.admin/developers?rev=HEAD&cvsroot=CMSSW&content-type=text/vnd.viewcvs-markup>Administrative privileges</a>
</small>
</center>

\section desc Description
<!-- Short description of what this package is supposed to provide -->

This package contains the reconstruction code for the Laser Alignment System in the Tracker. 

\subsection interface Public interface
<!-- List the classes that are provided for use in other packages (if any) -->

- AlignmentAlgorithmBW: alignment algorithm developed by Bruno Wittmer. Used to calculate the alignment parameters using the data from the Laser Alignment System.
- BeamProfileFitter: fit a gaussian to the laser beam profiles.
- LaserAlignmentAlgorithmNegTEC: interface to the alignment algorithm for TEC-.
- LaserAlignmentAlgorithmPosTEC: interface to the alignment algorithm for TEC+.
- LaserAlignmentAlgorithmTEC2TEC: interface to the alignment algorithm to align TIB, TOB and both TEC's relative to each other.
- LaserAlignmentNegTEC: pass the reconstructed beam positions to the alignment algorithm for TEC-.
- LaserAlignmentPosTEC: pass the reconstructed beam positions to the alignment algorithm for TEC+.
- LaserAlignmentTEC2TEC: pass the reconstructed beam positions to the alignment algorithm for TIB, TOB and TEC alignment.
- LaserBeamClusterizer: clusterize the laser signals.
- LaserClusterizerAlgorithm: algorithm to clusterize the laser signals (based on the result of the beam profile fit).
- LaserHitPairGeneratorFromLayerPair: search for hit pairs on consecutive layers (used by the seed finder).
- LaserHitPairGenerator: create hit pairs (used by the seed finder).
- LaserLayerPairs: create pairs of layers (used by the seed finder).
- LASvec: vector algebra needed by AlignmentAlgorithmBW.
- LASvec2D: vector and matrix algebra needed by AlignmentAlgorithmBW.
- LayerWithHits: look for layers with hits (used by the seed finder).
- Millepede: algorithm used for alignment.
- OrderedLaserHitPair: ordered pair of laser hits (used by the seed finder).
- OrderedLaserHitPairs: collection of OrderedLaserHitPairs (used by the seed finder).
- SeedGeneratorForLaserBeams: seed finder; seeds are used to create reconstructed tracks out of the laser beams in the endcaps.
- SeedLayerPairs: base class for LaserLayerPairs (used by the seed finder).

\subsection modules Modules
<!-- Describe modules implemented in this package and their parameter set -->

- LaserAlignment: main reconstruction module of the Laser Alignment System.

<pre>
\htmlinclude LaserAlignment.cfi
</pre>

- LaserClusterizer: build clusters from the laser signals.

<pre>
\htmlinclude LaserClusterizer.cfi
</pre>

- LaserSeedGenerator: create seeds for the track reconstruction of the laser beams.

<pre>
\htmlinclude LaserSeedGenerator.cfi
</pre>

\subsection tests Unit tests and examples
<!-- Describe cppunit tests and example configuration files -->
- ExpectedCorrectionsCalculator: calculate the expected alignment corrections from the applied misalignment (you have to provide the applied misalignments in the configuration file!).
- ReadLaserRecHit: analyzer for printing information about reconstructed hits from the laser beams.
- RecoAnalyzer: small analyzer to fill some histograms with information about the reconstruction of the laser beams.

<pre>
\htmlinclude RecoAnalyzer.cfi
</pre>

- runP.cfg: run the reconstruction code of the Laser Alignment System, clusterize the beams, convert the clusters to RecHits, create seeds and do the track reconstruction of the laser beams.
- iguana.cfg: configuration file to visualize lasertracks with IGUANA

\section status Status and planned development
<!-- e.g. completed, stable, missing features -->
Almost completed; finish storage of alignment corrections in the DB, implement algorithm to automatically select the layer for which the intensity of the laser beam is currently optimized.

<hr>
Last updated:
@DATE@  Author: Maarten Thomas.
*/

-- dummy change --
