
# The main purpose of this cfi is test that the validation will insert
# missing parameters that are required by the ParameterSetDescription.

# It also tests many other things that cannot be tested in an
# autogenerated cfi file that are related to the ParameterSetDescription
# infrastructure.

import FWCore.ParameterSet.Config as cms

testProducerWithPsetDesc = cms.EDProducer('ProducerWithPSetDesc',
  testingAutoGeneratedCfi = cms.untracked.bool(False),
  p_int_opt_nd = cms.int32(11),
  p_int_optuntracked_nd = cms.untracked.int32(12),
  wildcardPset = cms.PSet(
    a = cms.int32(1)
    , b = cms.untracked.double(1.0)
  ),
  switchPset = cms.PSet(
    iswitch = cms.int32(2),
    ivalue = cms.string('102'),
    addTeVRefits = cms.bool(False)
  ),
  xorPset = cms.PSet(
    name = cms.uint32(11)
  ),
  orPset = cms.PSet(
    x2 = cms.uint32(11),
    y1 = cms.string('11'),
    y2 = cms.uint32(11)
  ),
  andPset = cms.PSet(
    x1 = cms.string('11'),
    y2 = cms.uint32(11),
    a2 = cms.uint32(11),
    b3 = cms.uint32(11)
  ),
  ifExistsPset = cms.PSet(
    x1 = cms.uint32(11),
    y1 = cms.uint32(11),
    z2 = cms.string('11')
  ),
  allowedLabelsPset = cms.PSet(
    testAllowedLabels = cms.vstring('i1', 'i2', 'i3'),
    i1 = cms.int32(1),
    i2 = cms.int32(2),
    i3 = cms.int32(3),
    testAllowedLabelsUntracked = cms.untracked.vstring('u1', 'u2', 'u3'),
    u1 = cms.untracked.uint32(1),
    u3 = cms.untracked.uint32(3),
    testOptAllowedLabels = cms.vstring('oi1', 'oi2', 'oi3'),
    oi1 = cms.int32(1),
    oi2 = cms.int32(2),
    oi3 = cms.int32(3),
    testOptAllowedLabelsUntracked = cms.untracked.vstring('ou1', 'ou2', 'ou3'),
    ou1 = cms.untracked.uint32(1),
    ou2 = cms.untracked.uint32(2)
  )
  #, bars = cms.VPSet(
  #  cms.PSet(
  #    ndouDrinks = cms.untracked.uint32(5)
  #  ),
  #  cms.PSet(
  #  )
  #)
)
