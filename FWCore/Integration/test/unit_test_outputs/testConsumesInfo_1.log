Process name = PROD1
paths:
  p
  p2
  p11
end paths:
  e
  p1ep2
modules on path p:
  intProducer
  a1
  a2
  a3
  test
  testView1
  testStreamingProducer
  testStreamingAnalyzer
modules on path p2:
  intProducer
  a1
  a2
  a3
modules on path p11:
modules on end path e:
  testManyConsumingProducer
  out
modules on end path p1ep2:
All modules and modules in the current process whose products they consume:
(This does not include modules from previous processes or the source)
  IntProducer/'intProducerA'
  IntProducer/'intProducerU'
  IntVectorProducer/'intVectorProducer'
  IntProducer/'intProducer'
  TestFindProduct/'a1'
  TestFindProduct/'a2' consumes products from these modules:
    IntProducer/'intProducerA'
  TestFindProduct/'a3' consumes products from these modules:
    IntProducer/'intProducerA'
  TestContextAnalyzer/'test'
  TestFindProduct/'testView1' consumes products from these modules:
    IntVectorProducer/'intVectorProducer'
  IntProducer/'testStreamingProducer'
  ConsumingStreamAnalyzer/'testStreamingAnalyzer' consumes products from these modules:
    IntProducer/'testStreamingProducer'
  ConsumingIntProducer/'testManyConsumingProducer' consumes products from these modules:
    TriggerResultInserter/'TriggerResults'
  PoolOutputModule/'out' consumes products from these modules:
    TriggerResultInserter/'TriggerResults'
    IntProducer/'intProducerA'
    IntProducer/'intProducer'
    IntProducer/'intProducerU'
    ConsumingIntProducer/'testManyConsumingProducer'
    IntProducer/'testStreamingProducer'
    IntVectorProducer/'intVectorProducer'
  TriggerResultInserter/'TriggerResults'
All modules (listed by class and label) and all their consumed products.
Consumed products are listed by type, label, instance, process.
For products not in the event, 'run' or 'lumi' is added to indicate the TTree they are from.
For products that are declared with mayConsume, 'may consume' is added.
For products consumed for Views, 'element type' is added
For products only read from previous processes, 'skip current process' is added
  IntProducer/'intProducerA'
  IntProducer/'intProducerU'
  IntVectorProducer/'intVectorProducer'
  IntProducer/'intProducer'
  TestFindProduct/'a1' consumes:
    edmtest::IntProduct 'source' '' ''
    edmtest::IntProduct 'source' '' '', skip current process
    edmtest::IntProduct 'intProducer' '' '', skip current process
    edmtest::IntProduct 'intProducerU' '' '', skip current process
  TestFindProduct/'a2' consumes:
    edmtest::IntProduct 'intProducerA' '' ''
  TestFindProduct/'a3' consumes:
    edmtest::IntProduct 'aliasForInt' '' ''
  TestContextAnalyzer/'test'
  TestFindProduct/'testView1' consumes:
    int 'intVectorProducer' '' 'PROD1', element type
  IntProducer/'testStreamingProducer'
  ConsumingStreamAnalyzer/'testStreamingAnalyzer' consumes:
    edmtest::IntProduct 'testStreamingProducer' '' '', may consume
  ConsumingIntProducer/'testManyConsumingProducer' consumes:
    edm::TriggerResults 'TriggerResults' '' ''
    edm::TriggerResults '' '' ''
  PoolOutputModule/'out' consumes:
    edm::TriggerResults 'TriggerResults' '' 'PROD1'
    edmtest::IntProduct 'aliasForInt' '' 'PROD1'
    edmtest::IntProduct 'intProducer' '' 'PROD1'
    edmtest::IntProduct 'intProducerU' '' 'PROD1'
    edmtest::IntProduct 'source' '' 'PROD1'
    edmtest::IntProduct 'testManyConsumingProducer' '' 'PROD1'
    edmtest::IntProduct 'testStreamingProducer' '' 'PROD1'
    std::vector<int> 'intVectorProducer' '' 'PROD1'
  TriggerResultInserter/'TriggerResults'

Process name = COPY
paths:
  p3
end paths:
  ep1
  ep2
modules on path p3:
  intVectorProducer
  test
  thingWithMergeProducer
  testMergeResults
  testView1
  testView2
  testStreamingProducer
  testStreamingAnalyzer
modules on end path ep1:
  intVectorProducer
  testManyConsumingProducer
modules on end path ep2:
All modules and modules in the current process whose products they consume:
(This does not include modules from previous processes or the source)
  IntVectorProducer/'intVectorProducer'
  TestContextAnalyzer/'test'
  ThingWithMergeProducer/'thingWithMergeProducer'
  TestMergeResults/'testMergeResults'
  TestFindProduct/'testView1'
  TestFindProduct/'testView2' consumes products from these modules:
    IntVectorProducer/'intVectorProducer'
  IntProducer/'testStreamingProducer'
  ConsumingStreamAnalyzer/'testStreamingAnalyzer' consumes products from these modules:
    IntProducer/'testStreamingProducer'
  ConsumingIntProducer/'testManyConsumingProducer' consumes products from these modules:
    TriggerResultInserter/'TriggerResults'
  TriggerResultInserter/'TriggerResults'
All modules (listed by class and label) and all their consumed products.
Consumed products are listed by type, label, instance, process.
For products not in the event, 'run' or 'lumi' is added to indicate the TTree they are from.
For products that are declared with mayConsume, 'may consume' is added.
For products consumed for Views, 'element type' is added
For products only read from previous processes, 'skip current process' is added
  IntVectorProducer/'intVectorProducer'
  TestContextAnalyzer/'test'
  ThingWithMergeProducer/'thingWithMergeProducer'
  TestMergeResults/'testMergeResults' consumes:
    edmtest::Thing 'thingWithMergeProducer' 'event' 'PROD'
    edmtest::Thing 'thingWithMergeProducer' 'endRun' 'PROD', run
    edmtest::ThingWithMerge 'thingWithMergeProducer' 'endRun' 'PROD', run
    edmtest::ThingWithIsEqual 'thingWithMergeProducer' 'endRun' 'PROD', run
    edmtest::Thing 'thingWithMergeProducer' 'endRun' '', run
    edmtest::ThingWithMerge 'thingWithMergeProducer' 'endRun' '', run
    edmtest::ThingWithIsEqual 'thingWithMergeProducer' 'endRun' '', run
    edmtest::Thing 'thingWithMergeProducer' 'endLumi' 'PROD', lumi
    edmtest::ThingWithMerge 'thingWithMergeProducer' 'endLumi' 'PROD', lumi
    edmtest::ThingWithIsEqual 'thingWithMergeProducer' 'endLumi' 'PROD', lumi
    edmtest::Thing 'thingWithMergeProducer' 'endLumi' '', lumi
    edmtest::ThingWithMerge 'thingWithMergeProducer' 'endLumi' '', lumi
    edmtest::ThingWithIsEqual 'thingWithMergeProducer' 'endLumi' '', lumi
  TestFindProduct/'testView1' consumes:
    int 'intVectorProducer' '' 'PROD1', element type
  TestFindProduct/'testView2' consumes:
    int 'intVectorProducer' '' 'COPY', element type
  IntProducer/'testStreamingProducer'
  ConsumingStreamAnalyzer/'testStreamingAnalyzer' consumes:
    edmtest::IntProduct 'testStreamingProducer' '' '', may consume
  ConsumingIntProducer/'testManyConsumingProducer' consumes:
    edm::TriggerResults 'TriggerResults' '' ''
    edm::TriggerResults '' '' ''
  TriggerResultInserter/'TriggerResults'

TestFindProduct sum = 12
TestFindProduct sum = 300
TestFindProduct sum = 300
TestFindProduct sum = 33
TestFindProduct sum = 33
TestFindProduct sum = 33
