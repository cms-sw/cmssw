<environment>
  <bin name="TestFWCoreIntegrationStandalone" file="testRunner.cpp,standalone_t.cppunit.cc">
    <use name="cppunit"/>
    <use name="FWCore/Framework"/>
    <use name="FWCore/PluginManager"/>
    <use name="FWCore/Utilities"/>
    <use name="FWCore/ParameterSetReader"/>
  </bin>

  <test name="TestIntegrationRef" command="refTest.sh"/>
  <test name="TestIntegrationTransRef" command="transRefTest.sh"/>
  <test name="TestIntegrationTableTest" command="testTables.sh"/>
  <test name="TestIntegrationProducedSource" command="inputSourceTest.sh"/>
  <test name="TestIntegrationExternalSource" command="inputExtSourceTest.sh"/>
  <test name="TestIntegrationEventSetup" command="eventSetupTest.sh"/>
  <test name="TestIntegrationHierarchyExample" command="hierarchy_example.sh"/>
  <test name="TestIntegrationServiceExample" command="service_example.sh"/>
  <test name="TestIntegrationView" command="ViewTest.sh"/>
  <test name="TestIntegrationGetByPlaceHolder" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/testGetByPlaceholder_cfg.py"/>
  <test name="TestIntegrationProducesCollector" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/testProducesCollector_cfg.py"/>
  <test name="TestIntegrationGetterOfProducts" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/testGetterOfProductsWithOutputModule_cfg.py"/>
  <test name="TestIntegrationConsumesInfo" command="run_TestConsumesInfo.sh"/>
  <test name="TestIntegrationOutput" command="run_TestOutput.sh"/>
  <test name="TestIntegrationGetProductAtEnd" command="run_getProductAtEnd.sh"/>
  <test name="TestIntegrationParentless" command="parentlessTest.sh"/>
  <test name="TestIntegrationWaitingThread" command="waiting_thread_test.sh"/>
  <test name="TestIntegrationParameterSet" command="run_ParameterSet.sh"/>
  <test name="TestIntegration_TestEDAlias" command="run_TestEDAlias.sh"/>
  <test name="TestFWCoreIntegrationModuleTypeResolver" command="run_TestModuleTypeResolver.sh"/>
  <test name="CatchStdExceptiontest" command="CatchStdExceptiontest.sh"/>
  <test name="CatchCmsExceptiontest" command="CatchCmsExceptiontest.sh"/>
  <test name="TestStdProducts" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/testStdProducts_cfg.py"/>
  <test name="TestPostInsertProducer" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/testPostInsertProducer_cfg.py"/>
  <test name="TestWrapperBaseProducer" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/testWrapperBaseProducer_cfg.py"/>
  <test name="TestFWCoreIntegrationProvenance" command ="provenance_test.sh"/>

  <bin file="ProcessConfiguration_t.cpp,ProcessHistory_t.cpp" name="TestIntegrationDataFormatsProvenance">
    <use name="FWCore/ParameterSet"/>
    <use name="DataFormats/Provenance"/>
    <use name="FWCore/Version"/>
    <use name="catch2"/>
  </bin>

  <bin file="ProcessAccelerator_t.cpp">
    <use name="FWCore/Framework"/>
    <use name="FWCore/ParameterSet"/>
    <use name="FWCore/ParameterSetReader"/>
    <use name="FWCore/TestProcessor"/>
    <use name="DataFormats/Provenance"/>
    <use name="catch2"/>
  </bin>

  <bin file="EDAlias_t.cpp">
    <use name="FWCore/Framework"/>
    <use name="FWCore/ParameterSet"/>
    <use name="FWCore/TestProcessor"/>
    <use name="DataFormats/Provenance"/>
    <use name="catch2"/>
  </bin>

  <test name="testFWCoreIntegrationTransform" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py"/>
  <test name="testFWCoreIntegrationTransform_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --async_"/>
  <test name="testFWCoreIntegrationTransform_async_tracer" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --async_ --addTracer 2>&amp;1 | fgrep 'transform in event' | wc | awk '{print $1}' | fgrep 24"/>
  <test name="testFWCoreIntegrationTransform_onPath" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --onPath"/>
  <test name="testFWCoreIntegrationTransform_onPath_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --onPath --async_"/>
  <test name="testFWCoreIntegrationTransform_noTransform" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --noTransform"/>
  <test name="testFWCoreIntegrationTransform_noTransform_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --noTransform --async_"/>
  <test name="testFWCoreIntegrationTransform_noTransform_onPath" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --noTransform --onPath"/>
  <test name="testFWCoreIntegrationTransform_noTransform_onPath_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --noTransform --onPath --async_"/>
  <test name="testFWCoreIntegrationTransform_stream" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --stream"/>
  <test name="testFWCoreIntegrationTransform_stream_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --stream --async_"/>
  <test name="testFWCoreIntegrationTransform_stream_onPath" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --stream --onPath"/>
  <test name="testFWCoreIntegrationTransform_stream_onPath_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --stream --onPath --async_"/>
  <test name="testFWCoreIntegrationTransform_noPut" command="! cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --noPut"/>
  <test name="testFWCoreIntegrationTransform_noPut_async" command="! cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --noPut --async_"/>
  <test name="testFWCoreIntegrationTransform_exception" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --exception 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="testFWCoreIntegrationTransform_async_exception" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --async --exception 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="testFWCoreIntegrationTransform_onPath_exception" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --onPath --exception 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="testFWCoreIntegrationTransform_onPath_async_exception" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py --onPath --async --exception 2>&amp;1 | fgrep 'exception for testing purposes'"/>

  <test name="testFWCoreIntegrationNoEndPathStatus" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/check_empty_event_cfg.py 2>&amp;1 | fgrep 'contains 0 products'"/>
  
  <test name="TestFWCoreIntegrationModuleThread" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/moduleThread_test_cfg.py"/>

  <bin file="RandomIntProducer_t.cpp">
    <use name="FWCore/Framework"/>
    <use name="FWCore/ParameterSet"/>
    <use name="FWCore/TestProcessor"/>
    <use name="DataFormats/Provenance"/>
    <use name="catch2"/>
  </bin>

  <test name="TestFWCoreIntegrationSlimming" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/SlimmingTestSiblings_cfg.py 2>&amp;1 | fgrep 'more than one thinned children'"/>
  <test name="TestFWCoreIntegrationSlimmingFarther" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/SlimmingTestFartherSiblings_cfg.py 2>&amp;1 | fgrep 'SlimmingThingSelector::choose'"/>


  <test name="TestFWCoreIntegrationInterProcess" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TestInterProcessProd_cfg.py"/>
  <test name="TestFWCoreIntegrationPutOrMerge" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/putOrMergeTest_cfg.py"/>
  <test name="TestFWCoreIntegrationInputSourceAlias" command="cmsRun ${LOCALTOP}//src/FWCore/Integration/test/inputSource_alias_Test_cfg.py"/>
  <test name="TestFWCoreIntegrationEDLooperESProcuer" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/testEDLooperESProducer_cfg.py"/>
  <test name="TestFWCoreIntegrationDelayedReaderTest" command="delayedreader_throw_test.sh"/>

  <test name="TestFrameworkExceptionHandling" command="run_TestFrameworkExceptionHandling.sh ${value}" for="1,15"/>
  <test name="TestFWCoreIntegrationTryToContinuePath" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py"/>
  <test name="TestFWCoreIntegrationTryToContinuePathMessage" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py 2>&amp;1 | fgrep 'applying TryToContinue on Exception'"/>
  <test name="TestFWCoreIntegrationTryToContinueTask" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py --useTask"/>
  <test name="TestFWCoreIntegrationTryToContinueRun" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py --inRun 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationTryToContinueLumi" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py --inLumi 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinue" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueMessage" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py 2>&amp;1 | fgrep 'Begin TryToContinue Exception'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueRun" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py --inRun 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueLumi" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py --inLumi 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueIndirect" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py --indirect"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueIndirectRun" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py --indirect --inRun 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueIndirectLumi" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py --indirect --inLumi 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationTryToContinueExceptionOutput" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_exception_output_cfg.py"/>
  <test name="TestFWCoreIntegrationTryToContinueExceptionOutput" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_source_cfg.py"/>
  <test name="TestFWCoreIntegrationTryToContinueESProducer" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_ESProducer_cfg.py"/>
  <test name="TestFWCoreIntegrationTryToContinueESProducerContinue" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_ESProducer_cfg.py --continueAnalyzer"/>
</environment>
