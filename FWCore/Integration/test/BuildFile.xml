<environment>
  <bin name="TestFWCoreIntegrationStandalone" file="testRunner.cpp,standalone_t.cppunit.cc">
    <use name="cppunit"/>
    <use name="FWCore/Framework"/>
    <use name="FWCore/PluginManager"/>
    <use name="FWCore/Utilities"/>
    <use name="FWCore/ParameterSetReader"/>
  </bin>

  <test name="TestIntegrationEventHistory" command="eventHistoryTest.sh"/>
  <test name="TestIntegrationRef" command="refTest.sh"/>
  <test name="TestIntegrationTransRef" command="transRefTest.sh"/>
  <test name="TestIntegrationTableTest" command="testTables.sh"/>
  <test name="TestIntegrationProducedSource" command="inputSourceTest.sh"/>
  <test name="TestIntegrationExternalSource" command="inputExtSourceTest.sh"/>
  <test name="TestIntegrationEventSetup" command="eventSetupTest.sh"/>
  <test name="TestIntegrationHierarchyExample" command="hierarchy_example.sh"/>
  <test name="TestIntegrationServiceExample" command="service_example.sh"/>
  <test name="TestIntegrationView" command="ViewTest.sh"/>
  <test name="TestIntegrationSeriesOfProcesses" command="run_SeriesOfProcesses.sh"/>
  <test name="TestParentageWithStreamerIO" command="run_ParentageWithStreamerIO.sh"/>
  <test name="TestIntegrationThinningTests" command="run_ThinningTests.sh"/>
  <test name="TestIntegrationGetBy" command="run_TestGetBy.sh"/>
  <test name="TestIntegrationOutput" command="run_TestOutput.sh"/>
  <test name="TestIntegrationDropOnInput" command="run_TestDropOnInput.sh"/>
  <test name="TestSubProcess" command="run_SubProcess.sh"/>
  <test name="TestIntegrationUnscheduledFailOnOutput" command="run_unscheduledFailOnOutput.sh"/>
  <test name="TestIntegrationGetProductAtEnd" command="run_getProductAtEnd.sh"/>
  <test name="TestIntegrationParentless" command="parentlessTest.sh"/>
  <test name="TestIntegrationWaitingThread" command="waiting_thread_test.sh"/>
  <test name="TestIntegrationRunMerge" command="run_RunMerge.sh"/>
  <test name="TestIntegrationRunMerge2" command="run_RunMerge2.sh"/>
  <test name="TestIntegrationRefMerge" command="run_RefMerge.sh"/>
  <test name="TestIntegrationRefAlias" command="run_RefAlias.sh"/>
  <test name="TestIntegrationParameterSet" command="run_ParameterSet.sh"/>
  <test name="TestIntegrationSwitchProducer" command="run_TestSwitchProducer.sh"/>
  <test name="TestIntegration_TestEDAlias" command="run_TestEDAlias.sh"/>
  <test name="TestIntegrationProcessAccelerator" command="run_TestProcessAccelerator.sh"/>
  <test name="TestFWCoreIntegrationModuleTypeResolver" command="run_TestModuleTypeResolver.sh"/>
  <test name="CatchStdExceptiontest" command="CatchStdExceptiontest.sh"/>
  <test name="CatchCmsExceptiontest" command="CatchCmsExceptiontest.sh"/>
  <test name="TestIntegrationExistingDictionary" command="run_TestExistingDictionary.sh"/>

  <bin file="ProcessConfiguration_t.cpp,ProcessHistory_t.cpp" name="TestIntegrationDataFormatsProvenance">
    <use name="FWCore/ParameterSet"/>
    <use name="DataFormats/Provenance"/>
    <use name="FWCore/Version"/>
    <use name="catch2"/>
  </bin>

  <bin file="SwitchProducer_t.cpp">
    <use name="FWCore/Framework"/>
    <use name="FWCore/ParameterSet"/>
    <use name="FWCore/ParameterSetReader"/>
    <use name="FWCore/TestProcessor"/>
    <use name="DataFormats/Provenance"/>
    <use name="catch2"/>
  </bin>

  <bin file="ProcessAccelerator_t.cpp">
    <use name="FWCore/Framework"/>
    <use name="FWCore/ParameterSet"/>
    <use name="FWCore/ParameterSetReader"/>
    <use name="FWCore/TestProcessor"/>
    <use name="DataFormats/Provenance"/>
    <use name="catch2"/>
    <use name="fmt"/>
  </bin>

  <bin file="EDAlias_t.cpp">
    <use name="FWCore/Framework"/>
    <use name="FWCore/ParameterSet"/>
    <use name="FWCore/TestProcessor"/>
    <use name="DataFormats/Provenance"/>
    <use name="catch2"/>
    <use name="fmt"/>
  </bin>

  <test name="testFWCoreIntegrationTransform" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py"/>
  <test name="testFWCoreIntegrationTransform_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --async_"/>
  <test name="testFWCoreIntegrationTransform_onPath" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --onPath"/>
  <test name="testFWCoreIntegrationTransform_onPath_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --onPath --async_"/>
  <test name="testFWCoreIntegrationTransform_noTransform" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --noTransform"/>
  <test name="testFWCoreIntegrationTransform_noTransform_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --noTransform --async_"/>
  <test name="testFWCoreIntegrationTransform_noTransform_onPath" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --noTransform --onPath"/>
  <test name="testFWCoreIntegrationTransform_noTransform_onPath_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --noTransform --onPath --aysync_"/>
  <test name="testFWCoreIntegrationTransform_stream" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --stream"/>
  <test name="testFWCoreIntegrationTransform_stream_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --stream --async_"/>
  <test name="testFWCoreIntegrationTransform_stream_onPath" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --stream --onPath"/>
  <test name="testFWCoreIntegrationTransform_stream_onPath_async" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --stream --onPath --async_"/>
  <test name="testFWCoreIntegrationTransform_noPut" command="! cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --noPut"/>
  <test name="testFWCoreIntegrationTransform_noPut_async" command="! cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --noPut --async_"/>
  <test name="testFWCoreIntegrationTransform_exception" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --exception 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="testFWCoreIntegrationTransform_async_exception" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --async --exception 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="testFWCoreIntegrationTransform_onPath_exception" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --onPath --exception 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="testFWCoreIntegrationTransform_onPath_async_exception" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/transformTest_cfg.py -- --onPath --async --exception 2>&amp;1 | fgrep 'exception for testing purposes'"/>

  <test name="TestFWCoreIntegrationModuleThread" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/moduleThread_test_cfg.py"/>

  <bin file="RandomIntProducer_t.cpp">
    <use name="FWCore/Framework"/>
    <use name="FWCore/ParameterSet"/>
    <use name="FWCore/TestProcessor"/>
    <use name="DataFormats/Provenance"/>
    <use name="catch2"/>
  </bin>

  <test name="TestFWCoreIntegrationInterProcess" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TestInterProcessProd_cfg.py"/>
  <test name="TestFWCoreIntegrationPutOrMerge" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/putOrMergeTest_cfg.py"/>
  <test name="TestFWCoreIntegrationInputSourceAlias" command="cmsRun ${LOCALTOP}//src/FWCore/Integration/test/inputSource_alias_Test_cfg.py"/>
  <test name="TestFWCoreIntegrationEDLooperESProcuer" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/testEDLooperESProducer_cfg.py"/>
  <test name="TestFWCoreIntegrationDelayedReaderTest" command="delayedreader_throw_test.sh"/>

  <test name="TestFrameworkExceptionHandling" command="run_TestFrameworkExceptionHandling.sh ${value}" for="1,9"/>
  <test name="TestFWCoreIntegrationTryToContinuePath" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py"/>
  <test name="TestFWCoreIntegrationTryToContinuePathMessage" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py 2>&amp;1 | fgrep 'applying TryToContinue on Exception'"/>
  <test name="TestFWCoreIntegrationTryToContinueTask" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py -- --useTask"/>
  <test name="TestFWCoreIntegrationTryToContinueRun" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py -- --inRun 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationTryToContinueLumi" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_cfg.py -- --inLumi 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinue" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueMessage" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py 2>&amp;1 | fgrep 'Begin TryToContinue Exception'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueRun" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py -- --inRun 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueLumi" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py -- --inLumi 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueIndirect" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py -- --indirect"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueIndirectRun" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py -- --indirect --inRun 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationShouldTryToContinueIndirectLumi" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_cfg.py -- --indirect --inLumi 2>&amp;1 | fgrep 'exception for testing purposes'"/>
  <test name="TestFWCoreIntegrationTryToContinueExceptionOutput" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_exception_output_cfg.py"/>
  <test name="TestFWCoreIntegrationTryToContinueExceptionOutput" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_shouldTryToContinue_source_cfg.py"/>
  <test name="TestFWCoreIntegrationTryToContinueESProducer" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_ESProducer_cfg.py"/>
  <test name="TestFWCoreIntegrationTryToContinueESProducerContinue" command="cmsRun ${LOCALTOP}/src/FWCore/Integration/test/test_TryToContinue_ESProducer_cfg.py -- --continueAnalyzer"/>

  <test name="TestIntegrationProcessBlock1" command="run_TestProcessBlock.sh 1"/>
  <test name="TestIntegrationProcessBlock2" command="run_TestProcessBlock.sh 2"/>
  <test name="TestIntegrationProcessBlock3" command="run_TestProcessBlock.sh 3"/>
  <test name="TestIntegrationProcessBlock4" command="run_TestProcessBlock.sh 4"/>
  <test name="TestIntegrationProcessBlock5" command="run_TestProcessBlock.sh 5">
    <flags PRE_TEST="TestIntegrationProcessBlock1"/>
    <flags PRE_TEST="TestIntegrationProcessBlock2"/>
  </test>
  <test name="TestIntegrationProcessBlock6" command="run_TestProcessBlock.sh 6">
    <flags PRE_TEST="TestIntegrationProcessBlock5"/>
  </test>
  <test name="TestIntegrationProcessBlock7" command="run_TestProcessBlock.sh 7"/>
  <test name="TestIntegrationProcessBlock8" command="run_TestProcessBlock.sh 8">
    <flags PRE_TEST="TestIntegrationProcessBlock1"/>
    <flags PRE_TEST="TestIntegrationProcessBlock7"/>
  </test>
  <test name="TestIntegrationProcessBlock9" command="run_TestProcessBlock.sh 9">
    <flags PRE_TEST="TestIntegrationProcessBlock3"/>
    <flags PRE_TEST="TestIntegrationProcessBlock4"/>
  </test>
  <test name="TestIntegrationProcessBlock10" command="run_TestProcessBlock.sh 10">
    <flags PRE_TEST="TestIntegrationProcessBlock5"/>
    <flags PRE_TEST="TestIntegrationProcessBlock9"/>
  </test>
  <test name="TestIntegrationProcessBlock11" command="run_TestProcessBlock.sh 11">
    <flags PRE_TEST="TestIntegrationProcessBlock5"/>
    <flags PRE_TEST="TestIntegrationProcessBlock9"/>
  </test>
  <test name="TestIntegrationProcessBlock12" command="run_TestProcessBlock.sh 12">
    <flags PRE_TEST="TestIntegrationProcessBlock10"/>
  </test>
  <test name="TestIntegrationProcessBlock14" command="run_TestProcessBlock.sh 14">
    <flags PRE_TEST="TestIntegrationProcessBlock10"/>
  </test>
  <test name="TestIntegrationProcessBlock15" command="run_TestProcessBlock.sh 15">
    <flags PRE_TEST="TestIntegrationProcessBlock14"/>
  </test>
  <test name="TestIntegrationProcessBlock16" command="run_TestProcessBlock.sh 16">
    <flags PRE_TEST="TestIntegrationProcessBlock14"/>
  </test>
  <test name="TestIntegrationProcessBlock17" command="run_TestProcessBlock.sh 17">
    <flags PRE_TEST="TestIntegrationProcessBlock10"/>
  </test>
  <test name="TestIntegrationProcessBlock18" command="run_TestProcessBlock.sh 18"/>
  <test name="TestIntegrationProcessBlock19" command="run_TestProcessBlock.sh 19">
    <flags PRE_TEST="TestIntegrationProcessBlock10"/>
    <flags PRE_TEST="TestIntegrationProcessBlock18"/>
  </test>
  <test name="TestIntegrationProcessBlock20" command="run_TestProcessBlock.sh 20">
    <flags PRE_TEST="TestIntegrationProcessBlock10"/>
    <flags PRE_TEST="TestIntegrationProcessBlock18"/>
  </test>
  <test name="TestIntegrationProcessBlock21" command="run_TestProcessBlock.sh 21">
    <flags PRE_TEST="TestIntegrationProcessBlock5"/>
    <flags PRE_TEST="TestIntegrationProcessBlock9"/>
  </test>
  <test name="TestIntegrationProcessBlock22" command="run_TestProcessBlock.sh 22">
    <flags PRE_TEST="TestIntegrationProcessBlock5"/>
    <flags PRE_TEST="TestIntegrationProcessBlock9"/>
  </test>
  <test name="TestIntegrationProcessBlock23" command="run_TestProcessBlock.sh 23">
    <flags PRE_TEST="TestIntegrationProcessBlock10"/>
    <flags PRE_TEST="TestIntegrationProcessBlock18"/>
  </test>
  <test name="TestIntegrationProcessBlock24" command="run_TestProcessBlock.sh 24">
    <flags PRE_TEST="TestIntegrationProcessBlock10"/>
    <flags PRE_TEST="TestIntegrationProcessBlock18"/>
  </test>
  <test name="TestIntegrationProcessBlock100" command="run_TestProcessBlock.sh 100">
    <flags PRE_TEST="TestIntegrationProcessBlock6"/>
    <flags PRE_TEST="TestIntegrationProcessBlock8"/>
    <flags PRE_TEST="TestIntegrationProcessBlock11"/>
    <flags PRE_TEST="TestIntegrationProcessBlock12"/>
    <flags PRE_TEST="TestIntegrationProcessBlock15"/>
    <flags PRE_TEST="TestIntegrationProcessBlock16"/>
    <flags PRE_TEST="TestIntegrationProcessBlock17"/>
    <flags PRE_TEST="TestIntegrationProcessBlock19"/>
    <flags PRE_TEST="TestIntegrationProcessBlock20"/>
    <flags PRE_TEST="TestIntegrationProcessBlock21"/>
    <flags PRE_TEST="TestIntegrationProcessBlock22"/>
    <flags PRE_TEST="TestIntegrationProcessBlock23"/>
    <flags PRE_TEST="TestIntegrationProcessBlock24"/>
  </test>
  <test name="TestIntegrationFinalPath" command="test_finalpath.sh"/>

  <test name="TestIntegrationGetByLabel" command="run_TestGetByLabel.sh"/>

</environment>
