Index: IOPool/Streamer/interface/StreamerInputFile.h
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/IOPool/Streamer/interface/StreamerInputFile.h,v
retrieving revision 1.11
diff -u -r1.11 StreamerInputFile.h
--- IOPool/Streamer/interface/StreamerInputFile.h	23 Nov 2009 23:04:15 -0000	1.11
+++ IOPool/Streamer/interface/StreamerInputFile.h	6 Apr 2010 15:41:30 -0000
@@ -46,6 +46,10 @@
 
     InitMsgView const* startMessage() const { return startMsg_.get(); }
     /** Points to File Start Header/Message */
+    void setLoop(const bool loop) { /* Loop over files*/
+	loopOverFiles_ = loop;
+	multiStreams_=true;
+    }
 
     EventMsgView const* currentRecord() const { return currentEvMsg_.get(); }
     /** Points to current Record */
@@ -88,6 +92,10 @@
     std::string currentFileName_;
     bool currentFileOpen_;
 
+    bool loopOverFiles_;
+
+    bool firstLoop_;
+
     boost::shared_ptr<EventSkipperByID> eventSkipperByID_;
 
     int* numberOfEventsToSkip_;
Index: IOPool/Streamer/interface/StreamerInputSource.h
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/IOPool/Streamer/interface/StreamerInputSource.h,v
retrieving revision 1.26
diff -u -r1.26 StreamerInputSource.h
--- IOPool/Streamer/interface/StreamerInputSource.h	23 Nov 2009 23:41:40 -0000	1.26
+++ IOPool/Streamer/interface/StreamerInputSource.h	6 Apr 2010 15:41:30 -0000
@@ -102,6 +102,10 @@
     bool runEndingFlag_;
     ProductGetter productGetter_;
 
+    unsigned int evtsPerLS_;
+    unsigned int fakeLS_;
+    int evtCounter_;
+
     //Do not like these to be static, but no choice as deserializeRegistry() that sets it is a static memeber 
     static std::string processName_;
     static unsigned int protocolVersion_;
Index: IOPool/Streamer/interface/StreamerOutputModuleBase.h
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/IOPool/Streamer/interface/StreamerOutputModuleBase.h,v
retrieving revision 1.6
diff -u -r1.6 StreamerOutputModuleBase.h
--- IOPool/Streamer/interface/StreamerOutputModuleBase.h	6 Nov 2009 04:40:11 -0000	1.6
+++ IOPool/Streamer/interface/StreamerOutputModuleBase.h	6 Apr 2010 15:41:30 -0000
@@ -57,6 +57,9 @@
 
     Strings hltTriggerSelections_;
     uint32 outputModuleId_;
+
+    bool fakeHLTPaths_;
+    
   }; //end-of-class-def
 } // end of namespace-edm
 
Index: IOPool/Streamer/src/StreamerFileReader.cc
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/IOPool/Streamer/src/StreamerFileReader.cc,v
retrieving revision 1.15
diff -u -r1.15 StreamerFileReader.cc
--- IOPool/Streamer/src/StreamerFileReader.cc	23 Nov 2009 23:07:39 -0000	1.15
+++ IOPool/Streamer/src/StreamerFileReader.cc	6 Apr 2010 15:41:30 -0000
@@ -8,9 +8,13 @@
 #include "FWCore/Sources/interface/EventSkipperByID.h"
 #include "FWCore/Framework/interface/InputSourceDescription.h"
 
+std::vector<std::string> hltbitsNames_HLT_;
+std::vector<unsigned char> hltbits_HLT_;
+
 namespace edm {
   StreamerFileReader::StreamerFileReader(ParameterSet const& pset, InputSourceDescription const& desc) :
       StreamerInputSource(pset, desc),
+      loop_(pset.getUntrackedParameter<bool>("loop")),
       streamerNames_(pset.getUntrackedParameter<std::vector<std::string> >("fileNames")),
       streamReader_(),
       eventSkipperByID_(EventSkipperByID::create(pset).release()),
@@ -19,7 +23,7 @@
     InputFileCatalog catalog(pset, poolcat);
     streamerNames_ = catalog.fileNames();
 
-    if (streamerNames_.size() > 1) {
+      if (streamerNames_.size() > 1 || loop_) {
       streamReader_ = std::auto_ptr<StreamerInputFile>(new StreamerInputFile(streamerNames_, &numberOfEventsToSkip_, eventSkipperByID_));
     } else if (streamerNames_.size() == 1) {
       streamReader_ = std::auto_ptr<StreamerInputFile>(new StreamerInputFile(streamerNames_.at(0), &numberOfEventsToSkip_, eventSkipperByID_));
@@ -28,7 +32,9 @@
          << "No fileNames were specified\n";
     }
     InitMsgView const* header = getHeader();
+    header->hltTriggerNames( hltbitsNames_HLT_);
     deserializeAndMergeWithRegistry(*header, false);
+      streamReader_->setLoop(loop_);
   }
 
   StreamerFileReader::~StreamerFileReader() {
@@ -44,8 +50,18 @@
         // A new file has been opened and we must compare Heraders here !!
         //Get header/init from reader
         InitMsgView const* header = getHeader();
+        hltbitsNames_HLT_.clear();
+        header->hltTriggerNames( hltbitsNames_HLT_);
         deserializeAndMergeWithRegistry(*header, true);
     }
+
+    if (hltbitsNames_HLT_.size() > 0)
+    {
+      hltbits_HLT_.resize(1 + (hltbitsNames_HLT_.size()-1)/4);
+    }
+    eview->hltTriggerBits(&hltbits_HLT_[0]);
+
+
     if (eview == 0) {
         return  0;
     }
Index: IOPool/Streamer/src/StreamerFileReader.h
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/IOPool/Streamer/src/StreamerFileReader.h,v
retrieving revision 1.8
diff -u -r1.8 StreamerFileReader.h
--- IOPool/Streamer/src/StreamerFileReader.h	23 Nov 2009 23:07:39 -0000	1.8
+++ IOPool/Streamer/src/StreamerFileReader.h	6 Apr 2010 15:41:30 -0000
@@ -26,6 +26,7 @@
     InitMsgView const* getHeader(); 
     EventMsgView const* getNextEvent();
     bool const newHeader(); 
+    bool loop_;
 
   private:  
     std::vector<std::string> streamerNames_; // names of Streamer files
Index: IOPool/Streamer/src/StreamerInputFile.cc
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/IOPool/Streamer/src/StreamerInputFile.cc,v
retrieving revision 1.24
diff -u -r1.24 StreamerInputFile.cc
--- IOPool/Streamer/src/StreamerInputFile.cc	23 Nov 2009 23:07:39 -0000	1.24
+++ IOPool/Streamer/src/StreamerInputFile.cc	6 Apr 2010 15:41:30 -0000
@@ -34,11 +34,13 @@
     multiStreams_(false),
     currentFileName_(),
     currentFileOpen_(false),
+    loopOverFiles_(false),
     eventSkipperByID_(eventSkipperByID),
     numberOfEventsToSkip_(numberOfEventsToSkip),
     newHeader_(false),
     endOfFile_(false) {
     openStreamerFile(name);
+  streamerNames_.push_back(name);
     readStartMessage();
   }
 
@@ -58,6 +60,7 @@
     multiStreams_(false),
     currentFileName_(),
     currentFileOpen_(false),
+    loopOverFiles_(false),
     eventSkipperByID_(eventSkipperByID),
     numberOfEventsToSkip_(numberOfEventsToSkip),
     newHeader_(false),
@@ -82,6 +85,7 @@
     multiStreams_(false),
     currentFileName_(),
     currentFileOpen_(false),
+    loopOverFiles_(false),
     eventSkipperByID_(eventSkipperByID),
     numberOfEventsToSkip_(numberOfEventsToSkip),
     newHeader_(false),
@@ -104,6 +108,7 @@
     multiStreams_(true),
     currentFileName_(),
     currentFileOpen_(false),
+    loopOverFiles_(false),
     eventSkipperByID_(eventSkipperByID),
     numberOfEventsToSkip_(numberOfEventsToSkip),
     currRun_(0),
@@ -237,6 +242,11 @@
     if (this->readEventMessage()) {
          return true;
     }
+   if (loopOverFiles_)
+     if (currentFile_ > streamerNames_.size()-1) {
+	currentFile_=0;
+     }
+
     if (multiStreams_) {
        //Try opening next file
        if (openNextFile()) {
@@ -247,6 +257,7 @@
        }
     }
     return false;
+     
   }
 
   bool StreamerInputFile::openNextFile() {
@@ -359,7 +370,7 @@
     time_t t = time(0);
     char ts[] = "dd-Mon-yyyy hh:mm:ss TZN     ";
     strftime(ts, strlen(ts) + 1, "%d-%b-%Y %H:%M:%S %Z", localtime(&t));
-    LogAbsolute("fileAction") << ts << msg << currentFileName_;
+    //LogAbsolute("fileAction") << ts << msg << currentFileName_;
     FlushMessageLog();
   }
 }
Index: IOPool/Streamer/src/StreamerInputSource.cc
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/IOPool/Streamer/src/StreamerInputSource.cc,v
retrieving revision 1.62
diff -u -r1.62 StreamerInputSource.cc
--- IOPool/Streamer/src/StreamerInputSource.cc	5 Mar 2010 23:15:23 -0000	1.62
+++ IOPool/Streamer/src/StreamerInputSource.cc	6 Apr 2010 15:41:30 -0000
@@ -63,7 +63,10 @@
     dest_(init_size),
     xbuf_(TBuffer::kRead, init_size),
     runEndingFlag_(false),
-    productGetter_()
+    productGetter_(),
+    evtsPerLS_ (pset.getUntrackedParameter<int>("eventsPerLS",0)),
+    fakeLS_  (0),
+    evtCounter_(0)
   {
   }
 
@@ -317,18 +320,33 @@
       readAndCacheRun();
       setRunPrematurelyRead();
     }
-    if(!luminosityBlockAuxiliary() || luminosityBlockAuxiliary()->luminosityBlock() != eventView.lumi()) {
-      LuminosityBlockAuxiliary* luminosityBlockAuxiliary =
-        new LuminosityBlockAuxiliary(runAuxiliary()->run(), eventView.lumi(), sd->aux().time(), Timestamp::invalidTimestamp());
-      luminosityBlockAuxiliary->setProcessHistoryID(sd->processHistory().id());
-      setLuminosityBlockAuxiliary(luminosityBlockAuxiliary);
-      newLumi_ = true;
-      readAndCacheLumi();
-      setLumiPrematurelyRead();
+    if (evtsPerLS_!=0) {
+      if (!luminosityBlockAuxiliary() || !(evtCounter_%evtsPerLS_)) {
+	fakeLS_++;
+	setLuminosityBlockAuxiliary(new LuminosityBlockAuxiliary(runAuxiliary()->run(), fakeLS_, sd->aux().time(), Timestamp::invalidTimestamp()));
+	newLumi_ = true;
+	readAndCacheLumi();
+	setLumiPrematurelyRead();
+      }
+      evtCounter_++;
     }
+    else {
 
+      if(!luminosityBlockAuxiliary() || luminosityBlockAuxiliary()->luminosityBlock() != eventView.lumi()) {
+	LuminosityBlockAuxiliary* luminosityBlockAuxiliary =
+	  new LuminosityBlockAuxiliary(runAuxiliary()->run(), eventView.lumi(), sd->aux().time(), Timestamp::invalidTimestamp());
+	luminosityBlockAuxiliary->setProcessHistoryID(sd->processHistory().id());
+	setLuminosityBlockAuxiliary(luminosityBlockAuxiliary);
+	newLumi_ = true;
+	readAndCacheLumi();
+	setLumiPrematurelyRead();
+      }
+    }
     boost::shared_ptr<History> history (new History(sd->history()));
     std::auto_ptr<EventAuxiliary> aux(new EventAuxiliary(sd->aux()));
+
+    if (evtsPerLS_!=0) aux->id().setLuminosityBlockNumber(fakeLS_);
+
     eventPrincipalCache()->fillEventPrincipal(aux, luminosityBlockPrincipal(), history);
     productGetter_.setEventPrincipal(eventPrincipalCache());
     eventCached_ = true;
Index: IOPool/Streamer/src/StreamerOutputModuleBase.cc
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/IOPool/Streamer/src/StreamerOutputModuleBase.cc,v
retrieving revision 1.9
diff -u -r1.9 StreamerOutputModuleBase.cc
--- IOPool/Streamer/src/StreamerOutputModuleBase.cc	6 Nov 2009 04:40:11 -0000	1.9
+++ IOPool/Streamer/src/StreamerOutputModuleBase.cc	6 Apr 2010 15:41:30 -0000
@@ -13,11 +13,17 @@
 #include "DataFormats/Common/interface/TriggerResults.h"
 #include "DataFormats/Provenance/interface/ParameterSetID.h"
 
+//#include "IOPool/Streamer/interface/HLTPathAnalyzer.h"
+
 #include <string>
 #include "zlib.h"
 
 static SerializeDataBuffer serialize_databuffer;
 
+//extern Strings fakeHLTNames_;
+extern std::vector<std::string> hltbitsNames_HLT_;
+extern std::vector<unsigned char> hltbits_HLT_;
+
 namespace {
   //A utility function that packs bits from source into bytes, with 
   // packInOneByte as the numeber of bytes that are packed from source to dest.
@@ -57,6 +63,7 @@
     useCompression_(ps.getUntrackedParameter<bool>("use_compression", true)),
     compressionLevel_(ps.getUntrackedParameter<int>("compression_level", 1)),
     lumiSectionInterval_(ps.getUntrackedParameter<int>("lumiSection_interval", 0)), 
+    fakeHLTPaths_(ps.getUntrackedParameter<bool>("fakeHLTPaths", false)),
     serializer_(selections_),
     hltsize_(0),
     lumi_(0), 
@@ -123,8 +130,10 @@
 
   void
   StreamerOutputModuleBase::write(EventPrincipal const& e) {
-    std::auto_ptr<EventMsgBuilder> msg = serializeEvent(e);
-    doOutputEvent(*msg); // You can't use msg in StreamerOutputModuleBase after this point
+    {
+      std::auto_ptr<EventMsgBuilder> msg = serializeEvent(e);
+      doOutputEvent(*msg); // You can't use msg in StreamerOutputModuleBase after this point
+    }
   }
 
   std::auto_ptr<InitMsgBuilder>
@@ -156,8 +165,15 @@
     //Setting protocol version V
     Version v(7,(uint8*)toplevel.compactForm().c_str());
 
-    Strings hltTriggerNames = getAllTriggerNames();
+    Strings hltTriggerNames;
+    if (fakeHLTPaths_ && hltbitsNames_HLT_.size()) {
+      hltTriggerNames = hltbitsNames_HLT_;
+    } 
+    else {
+      hltTriggerNames = getAllTriggerNames();
+    }
     hltsize_ = hltTriggerNames.size();
+    std::cout << hltsize_ << "is number of trigger paths!\n";
 
     //L1 stays dummy as of today
     Strings l1_names;  //3
@@ -245,7 +261,7 @@
     l1bit_.push_back(false);
     //End of dummy data
 
-    setHltMask(e);
+    if (!fakeHLTPaths_) setHltMask(e);
 
     if (lumiSectionInterval_ == 0) {
       lumi_ = e.luminosityBlock();
@@ -264,7 +280,7 @@
     std::auto_ptr<EventMsgBuilder> 
       msg(new EventMsgBuilder(&serialize_databuffer.bufs_[0], serialize_databuffer.bufs_.size(), e.id().run(),
                               e.id().event(), lumi_, outputModuleId_,
-                              l1bit_, (uint8*)&hltbits_[0], hltsize_) );
+                              l1bit_, fakeHLTPaths_ &&hltbits_HLT_.size() ? (uint8*)&hltbits_HLT_[0]:(uint8*)&hltbits_[0], hltsize_) );
     msg->setOrigDataSize(origSize_); // we need this set to zero
 
     // copy data into the destination message
