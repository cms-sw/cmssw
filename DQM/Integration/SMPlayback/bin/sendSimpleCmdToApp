#!/usr/bin/env perl

use strict;

die "Usage sendSimpleCmdToApp host port class instance cmdName\n" if @ARGV != 5;

my $host     = $ARGV[0];
my $port     = $ARGV[1];
my $class    = $ARGV[2];
my $instance = $ARGV[3];
my $cmdName  = $ARGV[4];
my $m = "";
$m .= '<SOAP-ENV:Envelope';
$m .= ' SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"';
$m .= ' xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"';
$m .= ' xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"';
$m .= ' xmlns:xsd="http://www.w3.org/2001/XMLSchema"';
$m .= ' xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"';
$m .= '>';
$m .=   '<SOAP-ENV:Header>';
#$m .=   '             <xr:relay SOAP-ENV:actor="http://xdaq.web.cern.ch/xdaq/xsd/2004/XRelay-10" xmlns:xr="http://xdaq.web.cern.ch/xdaq/xsd/2004/XRelay-10">';
#$m .=   "             <xr:to url=\"http://$host:$port\" urn=\"urn:xdaq-application:lid=$instance\"/>";
#$m .=   '             </xr:relay>';
$m .=   '</SOAP-ENV:Header>';
$m .=   '<SOAP-ENV:Body>';
$m .=     '<xdaq:CMD_NAME xmlns:xdaq="urn:xdaq-soap:3.0"/>';
$m .=   '</SOAP-ENV:Body>';
$m .= '</SOAP-ENV:Envelope>';

$m =~ s/CMD_NAME/$cmdName/g;
$m =~ s/"/\\\"/g;

my $curlCmd  = "curl --stderr /dev/null -H \"Content-Type: text/xml\" -H \"Content-Description: SOAP Message\" -H \"SOAPAction: urn:xdaq-application:class=$class,instance=$instance\" http://$host:$port -d \"$m\"";

print "${class}${instance} $cmdName: ";
open CURL, "$curlCmd|";

my $reply = "";

while(<CURL>) {
  chomp;
  $reply .= $_;
}

if($reply =~ m#<(\w+):${cmdName}Response\s[^>]*>(.*)</\1:${cmdName}Response>#) {
  my $returnValue = $2;
  print "$returnValue\n";
} elsif($reply =~ m#<\w+:${cmdName}Response\s[^>]*\>#) {
  print "EMPTY SOAP MESSAGE\n";
} else {
  print "ERROR\n";
  print "$reply\n";
}
