
/*!

\page EventFilter_Modules Package EventFilter/Modules

<center>
<small>

<!-- $Id$ -->

<!-- @CVS_TAG@ will be substituted at build time, no need to touch -->
<a href=http://cmssw.cvs.cern.ch/cgi-bin/cmssw.cgi/CMSSW/EventFilter/Modules/?cvsroot=CMSSW&only_with_tag=@CVS_TAG@>Source code (CVS tag: @CVS_TAG@)</a> - 
<a href=http://cmssw.cvs.cern.ch/cgi-bin/cmssw.cgi/CMSSW/EventFilter/Modules/.admin/developers?rev=HEAD&cvsroot=CMSSW&content-type=text/vnd.viewcvs-markup>Administrative privileges</a>
</small>
</center>

\section desc Description
<!-- Short description of what this package is supposed to provide -->

The EDM framework plugin modules used in the Filter Farm are provided by this package.

The architecture of the Filter Farm is described <a
href="https://twiki.cern.ch/twiki/bin/view/CMS/FilterUnitDesign">here</a>.

The plugin modules provided by this package are documented in the
Components section of <a
href="https://twiki.cern.ch/twiki/bin/view/CMS/EventFilter">here</a>.

\subsection interface Public interface
<!-- List the classes that are provided for use in other packages (if any) -->

No public interfaces are defined in this package.

\subsection modules Modules
<!-- Describe modules implemented in this package and their parameter set -->

- edm::FUShmOutputModule
   - int32 max_event_size = starting size in bytes of the serialized event buffer (suggestion = 7000000)
   - bool use_compression = use compression of streamer on output (suggestion = true)
   - int32 compression_level = zlib compression level 1-9, 1=fastest and 9=smallest size,
                               <1=no compression, >9=same as 9, (suggestion = 1)
   - untracked int32 lumiSection_interval = interval in seconds between fake lumi sections, 0=use lumi section from event (default = 0)

- FUShmDQMOutputService
   - untracked int32 initialMessageBufferSize = starting size in bytes of the serialized DQMEvent buffer (default = 1000000)
   - double lumiSectionsPerUpdate = number of lumiSections for each DQM update (i.e. output)
                                    <1.0 is same as 1.0 (suggestion = 1.0)
   - bool useCompression = use compression of streamer on output (suggestion = true)
   - int32 compressionLevel = zlib compression level 1-9, 1=fastest and 9=smallest size,
                               <1=no compression, >9=same as 9, (suggestion = 1)
   - untracked int32 lumiSectionInterval = interval in seconds between fake lumi sections, 0=use lumi section from event (default = 0)


\subsection tests Unit tests and examples
<!-- Describe cppunit tests and example configuration files -->

No tests or examples are provided with this package.


\section status Status and planned development
<!-- e.g. completed, stable, missing features -->

stable


<hr>
Last updated:
@DATE@  Author: <a href="mailto:harry.cheung@cern.ch">Harry Cheung</a>
*/

