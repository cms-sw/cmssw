template<typename T>
IsoDeposit CandViewExtractor::depositFromObject(const Event & event, const EventSetup & eventSetup, const T & cand) const
{
    static std::string metname = "MuonIsolation|CandViewExtractor";

    reco::isodeposit::Direction candDir(cand.eta(), cand.phi());
    IsoDeposit deposit(candDir );
    deposit.setVeto( veto(candDir) );
    deposit.addCandEnergy(cand.pt());

    Handle< View<Candidate> > candViewH;
    event.getByToken(theCandViewToken, candViewH);

    double eta = cand.eta(), phi = cand.phi();
    reco::Particle::Point vtx = cand.vertex();
    for (View<Candidate>::const_iterator it = candViewH->begin(), ed = candViewH->end(); it != ed; ++it) {
        double dR = deltaR(it->eta(), it->phi(), eta, phi);
        if ( (dR < theDR_Max) && (dR > theDR_Veto) &&
                (std::abs(it->vz() - cand.vz()) < theDiff_z) &&
                ((it->vertex() - vtx).Rho() < theDiff_r)) {
            // ok
            reco::isodeposit::Direction dirTrk(it->eta(), it->phi());
            deposit.addDeposit(dirTrk, it->pt());
        }
    }

    return deposit;
}
