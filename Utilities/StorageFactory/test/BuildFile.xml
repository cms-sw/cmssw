<use name="Utilities/StorageFactory"/>
<use name="FWCore/ParameterSet"/>
<bin file="t0Repack.cpp" name="test_StorageFactory_t0Repack">
  <flags NO_TESTRUN="1"/>
</bin>

<bin file="randomread.cpp" name="test_StorageFactory_randomread">
  <flags NO_TESTRUN="1"/>
</bin>

<bin file="any.cpp" name="test_StorageFactory_Any">
  <flags NO_TESTRUN="1"/>
</bin>

<bin file="local.cpp" name="test_StorageFactory_Local">
</bin>

<bin file="local2.cpp" name="test_StorageFactory_Local2">
</bin>

<bin file="local3.cpp" name="test_StorageFactory_Local3">
</bin>

<bin file="ftp.cpp" name="test_StorageFactory_Ftp">
  <flags NO_TESTRUN="1"/>
</bin>

<bin file="ftp2.cpp" name="test_StorageFactory_Ftp2">
  <flags NO_TESTRUN="1"/>
</bin>

<bin file="rfio2.cpp" name="test_StorageFactory_Rfio2">
</bin>

<bin file="rfio3.cpp" name="test_StorageFactory_Rfio3">
</bin>

<bin file="write.cpp" name="test_StorageFactory_Write">
  <flags NO_TESTRUN="1"/>
</bin>

<bin file="mkstemp.cpp" name="test_StorageFactory_Mkstemp">
</bin>

<!--
We do not currently run the threadsafe test, as the StorageFactoryMaker is not thread-safe
(the underlying PluginManager can be called from multiple threads, but itself is not
thread safe.)
It's not that hard guard accesses to the PluginManager, but per Chris Jones, we want
to wait until the framework decides on a threading model to implement a fix.
file="threadsafe.cpp" name="test_StorageFactory_threadsafe"
-->
