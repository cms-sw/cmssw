#ifndef CondFormats_GeometryObjects_PHGCalParameters_h
#define CondFormats_GeometryObjects_PHGCalParameters_h

#include "CondFormats/Serialization/interface/Serializable.h"
#include <string>
#include <vector>
#include <unordered_map>

class PHGCalParameters {
public:
  PHGCalParameters(void) {}
  ~PHGCalParameters(void) {}

  std::string name_;
  std::vector<double> cellSize_;
  std::vector<double> slopeMin_;
  std::vector<double> zFrontMin_;
  std::vector<double> rMinFront_;
  std::vector<double> slopeTop_;
  std::vector<double> zFrontTop_;
  std::vector<double> rMaxFront_;
  std::vector<double> zRanges_;
  std::vector<double> moduleBlS_;
  std::vector<double> moduleTlS_;
  std::vector<double> moduleHS_;
  std::vector<double> moduleDzS_;
  std::vector<double> moduleAlphaS_;
  std::vector<double> moduleCellS_;
  std::vector<double> moduleBlR_;
  std::vector<double> moduleTlR_;
  std::vector<double> moduleHR_;
  std::vector<double> moduleDzR_;
  std::vector<double> moduleAlphaR_;
  std::vector<double> moduleCellR_;
  std::vector<double> trformTranX_;
  std::vector<double> trformTranY_;
  std::vector<double> trformTranZ_;
  std::vector<double> trformRotXX_;
  std::vector<double> trformRotYX_;
  std::vector<double> trformRotZX_;
  std::vector<double> trformRotXY_;
  std::vector<double> trformRotYY_;
  std::vector<double> trformRotZY_;
  std::vector<double> trformRotXZ_;
  std::vector<double> trformRotYZ_;
  std::vector<double> trformRotZZ_;
  std::vector<double> xLayerHex_;
  std::vector<double> yLayerHex_;
  std::vector<double> zLayerHex_;
  std::vector<double> rMinLayHex_;
  std::vector<double> rMaxLayHex_;
  std::vector<double> waferPosX_;
  std::vector<double> waferPosY_;
  std::vector<double> cellFineX_;
  std::vector<double> cellFineY_;
  std::vector<double> cellCoarseX_;
  std::vector<double> cellCoarseY_;
  std::vector<double> boundR_;
  std::vector<double> rLimit_;
  std::vector<double> waferThickness_;
  std::vector<double> cellThickness_;
  std::vector<double> radius100to200_;
  std::vector<double> radius200to300_;
  std::vector<double> radiusMixBoundary_;
  std::vector<double> rMinLayerBH_;
  std::vector<double> radiusLayer_[2];
  std::vector<double> cassetteShift_;
  std::vector<double> cassetteShiftTile_;
  std::vector<double> cassetteRetractTile_;
  std::vector<int> moduleLayS_;
  std::vector<int> moduleLayR_;
  std::vector<int> layer_;
  std::vector<int> layerIndex_;
  std::vector<int> layerGroup_;
  std::vector<int> cellFactor_;
  std::vector<int> depth_;
  std::vector<int> depthIndex_;
  std::vector<int> depthLayerF_;
  std::vector<int> waferCopy_;
  std::vector<int> waferTypeL_;
  std::vector<int> waferTypeT_;
  std::vector<int> layerGroupM_;
  std::vector<int> layerGroupO_;
  std::vector<int> cellFine_;
  std::vector<int> cellCoarse_;
  std::vector<int> levelT_;
  std::vector<int> waferUVMaxLayer_;
  std::vector<int> nPhiBinBH_;
  std::vector<int> layerFrontBH_;
  std::vector<int> iradMinBH_;
  std::vector<int> iradMaxBH_;
  std::vector<int> iradMinBHFine_;
  std::vector<int> iradMaxBHFine_;
  std::vector<int> firstModule_;
  std::vector<int> lastModule_;
  std::vector<int> layerType_;
  std::vector<int> layerCenter_;
  std::vector<int> nPhiLayer_;
  std::vector<int> calibCellFullHD_;
  std::vector<int> calibCellPartHD_;
  std::vector<int> calibCellFullLD_;
  std::vector<int> calibCellPartLD_;
  std::vector<uint32_t> trformIndex_;
  std::vector<bool> cellFineHalf_;
  std::vector<bool> cellCoarseHalf_;
  double waferR_;
  double waferSize_;
  double waferThick_;
  double sensorSeparation_;
  double sensorSizeOffset_;
  double guardRingOffset_;
  double mouseBite_;
  double fracAreaMin_;
  double zMinForRad_;
  double minTileSize_;
  double layerRotation_;
  double calibCellRHD_;
  double calibCellRLD_;
  int detectorType_;
  int useSimWt_;
  int nCells_;
  int nSectors_;
  int mode_;
  int firstLayer_;
  int firstMixedLayer_;
  int levelZSide_;
  int nCellsFine_;
  int nCellsCoarse_;
  int useOffset_;
  int waferUVMax_;
  int choiceType_;
  int nCornerCut_;
  int layerOffset_;
  int waferMaskMode_;
  int waferZSide_;
  int cassettes_;
  int nphiCassette_;
  int nphiFineCassette_;
  int phiOffset_;
  int tileUVMax_;
  int tileUVMaxFine_;
  bool defineFull_;
  std::vector<std::unordered_map<uint32_t, uint32_t> > copiesInLayers_;

  COND_SERIALIZABLE;
};

#endif
