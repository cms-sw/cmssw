#include "RecoJets/JetAlgorithms/interface/QGMLPCalculator.h"

//This file contains rho corrections, bin edges and pT averages for the MLP tagger
void QGMLPCalculator::setRhoCorrections(){
  corrections["axis1_c0"] = 0.00124281;
  corrections["axis1_f0"] = 0.00148249;
  corrections["axis1_c1"] = 0.00128617;
  corrections["axis1_f1"] = 0.00158415;
  corrections["axis1_c2"] = 0.00132424;
  corrections["axis1_f2"] = 0.00171028;
  corrections["axis1_c3"] = 0.00126007;
  corrections["axis1_f3"] = 0.00178798;
  corrections["axis1_c4"] = 0.00119138;
  corrections["axis1_f4"] = 0.0018556;
  corrections["axis1_c5"] = 0.00107429;
  corrections["axis1_f5"] = 0.00185168;
  corrections["axis1_c6"] = 0.00090088;
  corrections["axis1_f6"] = 0.00170113;
  corrections["axis1_c7"] = 0.000742914;
  corrections["axis1_f7"] = 0.00144189;
  corrections["axis1_c8"] = 0.000619411;
  corrections["axis1_f8"] = 0.00121279;
  corrections["axis1_c9"] = 0.000494321;
  corrections["axis1_f9"] = 0.00100546;
  corrections["axis1_c10"] = 0.000421029;
  corrections["axis1_f10"] = 0.000830581;
  corrections["axis1_c11"] = 0.000338989;
  corrections["axis1_f11"] = 0.000660754;
  corrections["axis1_c12"] = 0.000291361;
  corrections["axis1_f12"] = 0.000530091;
  corrections["axis1_c13"] = 0.000238607;
  corrections["axis1_f13"] = 0.000470984;
  corrections["axis1_c14"] = 0.000173044;
  corrections["axis1_f14"] = 0.000384637;
  corrections["axis1_c15"] = 0.000136767;
  corrections["axis1_f15"] = 0.000254552;
  corrections["axis1_c16"] = 0.000132519;
  corrections["axis1_f16"] = 0.000275577;
  corrections["axis1_c17"] = 9.92901e-05;
  corrections["axis1_f17"] = 0.000231986;
  corrections["axis1_c18"] = 8.1016e-05;
  corrections["axis1_f18"] = 0.000417111;
  corrections["axis1_c19"] = 8.5936e-05;
  corrections["axis1_f19"] = 4.17529e-05;
  corrections["axis2_c0"] = 0.000995701;
  corrections["axis2_f0"] = 0.00141653;
  corrections["axis2_c1"] = 0.000997671;
  corrections["axis2_f1"] = 0.00145602;
  corrections["axis2_c2"] = 0.0010006;
  corrections["axis2_f2"] = 0.00147452;
  corrections["axis2_c3"] = 0.000945519;
  corrections["axis2_f3"] = 0.00148191;
  corrections["axis2_c4"] = 0.000886451;
  corrections["axis2_f4"] = 0.00147464;
  corrections["axis2_c5"] = 0.000793142;
  corrections["axis2_f5"] = 0.00141697;
  corrections["axis2_c6"] = 0.000668081;
  corrections["axis2_f6"] = 0.00128264;
  corrections["axis2_c7"] = 0.000559181;
  corrections["axis2_f7"] = 0.00109183;
  corrections["axis2_c8"] = 0.000466793;
  corrections["axis2_f8"] = 0.000924364;
  corrections["axis2_c9"] = 0.000380469;
  corrections["axis2_f9"] = 0.000773562;
  corrections["axis2_c10"] = 0.000323697;
  corrections["axis2_f10"] = 0.000646638;
  corrections["axis2_c11"] = 0.000263972;
  corrections["axis2_f11"] = 0.000533126;
  corrections["axis2_c12"] = 0.000224729;
  corrections["axis2_f12"] = 0.000437188;
  corrections["axis2_c13"] = 0.000185406;
  corrections["axis2_f13"] = 0.000375029;
  corrections["axis2_c14"] = 0.000141752;
  corrections["axis2_f14"] = 0.000309565;
  corrections["axis2_c15"] = 0.000108733;
  corrections["axis2_f15"] = 0.00025079;
  corrections["axis2_c16"] = 9.6316e-05;
  corrections["axis2_f16"] = 0.000225889;
  corrections["axis2_c17"] = 7.26942e-05;
  corrections["axis2_f17"] = 0.000175212;
  corrections["axis2_c18"] = 5.364e-05;
  corrections["axis2_f18"] = 0.000186312;
  corrections["axis2_c19"] = 5.27083e-05;
  corrections["axis2_f19"] = 0.000149702;
  corrections["pull_c0"] = 0.000111415;
  corrections["pull_f0"] = 7.31415e-05;
  corrections["pull_c1"] = 0.000112424;
  corrections["pull_f1"] = 8.55066e-05;
  corrections["pull_c2"] = 0.000110147;
  corrections["pull_f2"] = 9.81858e-05;
  corrections["pull_c3"] = 0.000100898;
  corrections["pull_f3"] = 0.000107331;
  corrections["pull_c4"] = 9.11032e-05;
  corrections["pull_f4"] = 0.000119935;
  corrections["pull_c5"] = 7.80601e-05;
  corrections["pull_f5"] = 0.000125029;
  corrections["pull_c6"] = 6.25579e-05;
  corrections["pull_f6"] = 0.000118448;
  corrections["pull_c7"] = 4.92122e-05;
  corrections["pull_f7"] = 0.000102621;
  corrections["pull_c8"] = 3.96984e-05;
  corrections["pull_f8"] = 8.39307e-05;
  corrections["pull_c9"] = 3.0197e-05;
  corrections["pull_f9"] = 6.76647e-05;
  corrections["pull_c10"] = 2.47266e-05;
  corrections["pull_f10"] = 5.18855e-05;
  corrections["pull_c11"] = 1.84383e-05;
  corrections["pull_f11"] = 3.72243e-05;
  corrections["pull_c12"] = 1.53651e-05;
  corrections["pull_f12"] = 2.6633e-05;
  corrections["pull_c13"] = 1.19394e-05;
  corrections["pull_f13"] = 2.28897e-05;
  corrections["pull_c14"] = 7.35391e-06;
  corrections["pull_f14"] = 1.58525e-05;
  corrections["pull_c15"] = 6.30897e-06;
  corrections["pull_f15"] = 1.12469e-05;
  corrections["pull_c16"] = 6.1918e-06;
  corrections["pull_f16"] = 1.19223e-05;
  corrections["pull_c17"] = 4.29585e-06;
  corrections["pull_f17"] = 1.74554e-06;
  corrections["pull_c18"] = 3.90648e-06;
  corrections["pull_f18"] = 2.26856e-05;
  corrections["pull_c19"] = 3.75683e-06;
  corrections["pull_f19"] = 2.51253e-06;
  corrections["mult_c0"] = 0;
  corrections["mult_f0"] = 0.189088;
  corrections["mult_c1"] = 0;
  corrections["mult_f1"] = 0.188786;
  corrections["mult_c2"] = 0;
  corrections["mult_f2"] = 0.194221;
  corrections["mult_c3"] = 0;
  corrections["mult_f3"] = 0.201487;
  corrections["mult_c4"] = 0;
  corrections["mult_f4"] = 0.208811;
  corrections["mult_c5"] = 0;
  corrections["mult_f5"] = 0.214912;
  corrections["mult_c6"] = 0;
  corrections["mult_f6"] = 0.215346;
  corrections["mult_c7"] = 0;
  corrections["mult_f7"] = 0.208207;
  corrections["mult_c8"] = 0;
  corrections["mult_f8"] = 0.203229;
  corrections["mult_c9"] = 0;
  corrections["mult_f9"] = 0.197426;
  corrections["mult_c10"] = 0;
  corrections["mult_f10"] = 0.189643;
  corrections["mult_c11"] = 0;
  corrections["mult_f11"] = 0.184058;
  corrections["mult_c12"] = 0;
  corrections["mult_f12"] = 0.175174;
  corrections["mult_c13"] = 0;
  corrections["mult_f13"] = 0.170001;
  corrections["mult_c14"] = 0;
  corrections["mult_f14"] = 0.162706;
  corrections["mult_c15"] = 0;
  corrections["mult_f15"] = 0.141735;
  corrections["mult_c16"] = 0;
  corrections["mult_f16"] = 0.147747;
  corrections["mult_c17"] = 0;
  corrections["mult_f17"] = 0.137394;
  corrections["mult_c18"] = 0;
  corrections["mult_f18"] = 0.191612;
  corrections["mult_c19"] = 0;
  corrections["mult_f19"] = 0.0823293;
  corrections["ptD_c0"] = -0.00218145;
  corrections["ptD_f0"] = -0.00422617;
  corrections["ptD_c1"] = -0.0019049;
  corrections["ptD_f1"] = -0.004359;
  corrections["ptD_c2"] = -0.00180347;
  corrections["ptD_f2"] = -0.00452618;
  corrections["ptD_c3"] = -0.00158193;
  corrections["ptD_f3"] = -0.00469805;
  corrections["ptD_c4"] = -0.0014279;
  corrections["ptD_f4"] = -0.00481952;
  corrections["ptD_c5"] = -0.00135294;
  corrections["ptD_f5"] = -0.00495099;
  corrections["ptD_c6"] = -0.00121394;
  corrections["ptD_f6"] = -0.00490406;
  corrections["ptD_c7"] = -0.00112396;
  corrections["ptD_f7"] = -0.0045636;
  corrections["ptD_c8"] = -0.00105533;
  corrections["ptD_f8"] = -0.00429536;
  corrections["ptD_c9"] = -0.0008937;
  corrections["ptD_f9"] = -0.00401285;
  corrections["ptD_c10"] = -0.000832543;
  corrections["ptD_f10"] = -0.00356917;
  corrections["ptD_c11"] = -0.000717344;
  corrections["ptD_f11"] = -0.00324577;
  corrections["ptD_c12"] = -0.000643842;
  corrections["ptD_f12"] = -0.0028293;
  corrections["ptD_c13"] = -0.000591787;
  corrections["ptD_f13"] = -0.00258899;
  corrections["ptD_c14"] = -0.000455675;
  corrections["ptD_f14"] = -0.00228464;
  corrections["ptD_c15"] = -0.000354762;
  corrections["ptD_f15"] = -0.00159096;
  corrections["ptD_c16"] = -0.000386401;
  corrections["ptD_f16"] = -0.00162448;
  corrections["ptD_c17"] = -0.000281709;
  corrections["ptD_f17"] = -0.000962269;
  corrections["ptD_c18"] = -0.000196285;
  corrections["ptD_f18"] = -0.000832006;
  corrections["ptD_c19"] = -0.000267838;
  corrections["ptD_f19"] = -0.000129803;
  corrections["R_c0"] = -0.00299347;
  corrections["R_f0"] = -0.00440472;
  corrections["R_c1"] = -0.00264555;
  corrections["R_f1"] = -0.00459955;
  corrections["R_c2"] = -0.00250845;
  corrections["R_f2"] = -0.00480651;
  corrections["R_c3"] = -0.00220184;
  corrections["R_f3"] = -0.00499592;
  corrections["R_c4"] = -0.00184315;
  corrections["R_f4"] = -0.00511874;
  corrections["R_c5"] = -0.0015317;
  corrections["R_f5"] = -0.00523442;
  corrections["R_c6"] = -0.00121124;
  corrections["R_f6"] = -0.00514227;
  corrections["R_c7"] = -0.000995017;
  corrections["R_f7"] = -0.00469302;
  corrections["R_c8"] = -0.000837342;
  corrections["R_f8"] = -0.00437235;
  corrections["R_c9"] = -0.000688091;
  corrections["R_f9"] = -0.00406006;
  corrections["R_c10"] = -0.00058285;
  corrections["R_f10"] = -0.00354629;
  corrections["R_c11"] = -0.000519081;
  corrections["R_f11"] = -0.0032366;
  corrections["R_c12"] = -0.000432257;
  corrections["R_f12"] = -0.00277019;
  corrections["R_c13"] = -0.000424618;
  corrections["R_f13"] = -0.00254883;
  corrections["R_c14"] = -0.000320331;
  corrections["R_f14"] = -0.00227879;
  corrections["R_c15"] = -0.0002086;
  corrections["R_f15"] = -0.0014286;
  corrections["R_c16"] = -0.000278961;
  corrections["R_f16"] = -0.00168178;
  corrections["R_c17"] = -0.000225235;
  corrections["R_f17"] = -0.000641498;
  corrections["R_c18"] = -0.00015228;
  corrections["R_f18"] = 0.000414515;
  corrections["R_c19"] = -0.000250519;
  corrections["R_f19"] = 0.00260184;
}

Int_t QGMLPCalculator::getNbins(){
  return 20;
}

Int_t QGMLPCalculator::getLastBin(TString region){
  if(region == "c") return 19;
  else return 17;
}

Double_t QGMLPCalculator::getMinPt(){
  return 20;
}

Double_t QGMLPCalculator::getMaxPt(TString region){
  if(region == "c") return 600;
  else return 427.011;
}

Double_t QGMLPCalculator::getBins(Int_t i){
  switch(i){
    case 0: return 20;
    case 1: return 23.7075;
    case 2: return 28.1023;
    case 3: return 33.3118;
    case 4: return 39.487;
    case 5: return 46.8069;
    case 6: return 55.4838;
    case 7: return 65.7692;
    case 8: return 77.9612;
    case 9: return 92.4133;
    case 10: return 109.545;
    case 11: return 129.851;
    case 12: return 153.923;
    case 13: return 182.456;
    case 14: return 216.279;
    case 15: return 256.372;
    case 16: return 303.897;
    case 17: return 360.233;
    case 18: return 427.011;
    case 19: return 506.169;
    case 20: return 600;
    default: return -999;
  }
}

Double_t QGMLPCalculator::getBinsAveragePt(TString region, Int_t i){
 if(region == "c"){
    switch(i){
      case 0: return 22.001;
      case 1: return 26.0321;
      case 2: return 30.7919;
      case 3: return 36.4285;
      case 4: return 43.1337;
      case 5: return 51.0995;
      case 6: return 60.5426;
      case 7: return 71.8389;
      case 8: return 85.1373;
      case 9: return 100.81;
      case 10: return 119.633;
      case 11: return 141.424;
      case 12: return 167.805;
      case 13: return 198.078;
      case 14: return 234.904;
      case 15: return 281.21;
      case 16: return 330.788;
      case 17: return 391.249;
      case 18: return 468.999;
      case 19: return 544.725;
      default: return -999;
    }
  } else {
    switch(i){
      case 0: return 22.0014;
      case 1: return 26.0291;
      case 2: return 30.7649;
      case 3: return 36.3816;
      case 4: return 43.0691;
      case 5: return 51.0161;
      case 6: return 60.4086;
      case 7: return 71.6829;
      case 8: return 84.9627;
      case 9: return 100.496;
      case 10: return 119.346;
      case 11: return 140.907;
      case 12: return 167.146;
      case 13: return 197.061;
      case 14: return 232.633;
      case 15: return 278.615;
      case 16: return 327.102;
      case 17: return 381.712;
      case 18: return 457.403;
      case 19: return 524.08;
      default: return -999;
    }
  }
}
