<lcgdict>
 <class name="edmtest::DummyProduct" ClassVersion="10">
  <version ClassVersion="10" checksum="4017626975"/>
 </class>
 <class name="edmtest::IntProduct" ClassVersion="10">
  <version ClassVersion="10" checksum="4286676158"/>
 </class>
 <class name="std::pair<edmtest::IntProduct, edm::RandomNumberGeneratorState>"/>
 <class name="edmtest::UInt64Product" ClassVersion="11">
  <version ClassVersion="11" checksum="3240540910"/>
  <version ClassVersion="10" checksum="380152127"/>
 </class>
 <class name="edmtest::EnumProduct" ClassVersion="11">
  <version ClassVersion="11" checksum="3817882977"/>
  <version ClassVersion="10" checksum="3025325436"/>
 </class>
 <enum name="edmtest::TheEnumProduct"/>
 <class name="edmtest::ArrayProduct" ClassVersion="10">
  <version ClassVersion="10" checksum="3635152897"/>
 </class>
 <class name="edmtest::TransientIntProduct" ClassVersion="11">
  <version ClassVersion="10" checksum="304339852"/>
  <version ClassVersion="11" checksum="639295444"/>
  <field name="dummy" transient="true"/>
 </class>
 <class name="edmtest::Int16_tProduct" ClassVersion="10">
  <version ClassVersion="10" checksum="1443289058"/>
 </class>
 <class name="edmtest::DoubleProduct" ClassVersion="10">
  <version ClassVersion="10" checksum="927325064"/>
 </class>
 <class name="edmtest::StringProduct" ClassVersion="10">
  <version ClassVersion="10" checksum="2737503723"/>
 </class>
 <class name="edmtest::Prodigal" ClassVersion="11">
  <version ClassVersion="10" checksum="3510691703"/>
  <version ClassVersion="11" checksum="1159264709"/>
 </class>
 <class name="edmtest::Simple" ClassVersion="10">
  <version ClassVersion="10" checksum="2533881336"/>
 </class>
 <class name="edmtest::SimpleDerived" ClassVersion="11">
  <version ClassVersion="10" checksum="3753531674"/>
  <version ClassVersion="11" checksum="802041948"/>
 </class>
 <class name="edmtest::Sortable" ClassVersion="10">
  <version ClassVersion="10" checksum="1166695033"/>
 </class>
 <class name="edmtest::Unsortable" ClassVersion="11">
  <version ClassVersion="10" checksum="2720085305"/>
  <version ClassVersion="11" checksum="3812549796"/>
 </class>
 <class name="edm::SortedCollection<edmtest::Simple, edm::StrictWeakOrdering<edmtest::Simple> >"/>
 <class name="edm::OwnVector<edmtest::Simple, edm::ClonePolicy<edmtest::Simple> >"/>
 <class name="std::vector<edmtest::Simple*>"/>
 <class name="edm::OwnVector<edmtest::SimpleDerived, edm::ClonePolicy<edmtest::SimpleDerived> >"/>
 <class name="std::vector<edmtest::SimpleDerived*>"/>
 <class name="std::vector<edmtest::Simple>"/>
 <class name="edm::Wrapper<std::vector<edmtest::Simple> >"/>
 <class name="std::vector<edmtest::SimpleDerived>"/>
 <class name="edm::Wrapper<std::vector<edmtest::SimpleDerived> >"/>
 <class name="edm::RefProd<std::vector<edmtest::Simple> >"/>
 <class name="edm::DetSet<edmtest::Sortable>"/>
 <class name="std::vector<edm::DetSet<edmtest::Sortable> >"/>
 <class name="edm::DetSet<edmtest::Unsortable>"/>
 <class name="std::vector<edm::DetSet<edmtest::Unsortable> >"/>
 <class name="std::vector<edmtest::Sortable>"/>
 <class name="std::vector<edmtest::Unsortable>"/>
 <class name="edm::DetSetVector<edmtest::Sortable>"/>
 <class name="edm::DetSetVector<edmtest::Unsortable>"/>
 <class name="edm::AssociationVector<edm::RefProd<std::vector<edmtest::Simple> >,std::vector<edmtest::Simple>,edm::Ref<std::vector<edmtest::Simple>,edmtest::Simple,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Simple>,edmtest::Simple> >,unsigned int,edm::helper::AssociationIdenticalKeyReference>">
   <field name="transientVector_" transient="true"/>
 </class>
 <class name="std::pair<edm::Ref<std::vector<edmtest::Simple>,edmtest::Simple,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Simple>,edmtest::Simple> >,edmtest::Simple>"/>
 <class name="edm::Ref<std::vector<edmtest::Simple>,edmtest::Simple,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Simple>,edmtest::Simple> >"/>
 <ioread sourceClass = "edm::AssociationVector<edm::RefProd<std::vector<edmtest::Simple> >,std::vector<edmtest::Simple>,edm::Ref<std::vector<edmtest::Simple>,edmtest::Simple,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Simple>,edmtest::Simple> >,unsigned int,edm::helper::AssociationIdenticalKeyReference>" version="[1-]" targetClass = "edm::AssociationVector<edm::RefProd<std::vector<edmtest::Simple> >,std::vector<edmtest::Simple>,edm::Ref<std::vector<edmtest::Simple>,edmtest::Simple,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Simple>,edmtest::Simple> >,unsigned int,edm::helper::AssociationIdenticalKeyReference>" source = "" target="transientVector_">
   <![CDATA[delete transientVector_; transientVector_=nullptr;
   ]]>
 </ioread>
 <class name="edm::Wrapper<edmtest::DummyProduct>"/>
 <class name="edm::Wrapper<edmtest::IntProduct>"/>
 <class name="std::vector<std::unique_ptr<edmtest::IntProduct>>"/>
 <class name="edm::Wrapper<std::vector<std::unique_ptr<edmtest::IntProduct>>>"/>
 <class name="edm::Wrapper<edmtest::UInt64Product>"/>
 <class name="edm::Wrapper<edmtest::TransientIntProduct>" persistent="false"/>
 <class name="edm::Wrapper<edmtest::Int16_tProduct>"/>
 <class name="edm::Wrapper<edmtest::DoubleProduct>"/>
 <class name="edm::Wrapper<edmtest::StringProduct>"/>
 <class name="edm::Wrapper<edmtest::Prodigal>"/>
 <class name="edm::Wrapper<edm::SortedCollection<edmtest::Simple, edm::StrictWeakOrdering<edmtest::Simple> > >"/>
 <class name="edm::Wrapper<edm::OwnVector<edmtest::Simple, edm::ClonePolicy<edmtest::Simple> > >"/>
 <class name="edm::Wrapper<edm::OwnVector<edmtest::SimpleDerived, edm::ClonePolicy<edmtest::SimpleDerived> > >"/>
 <class name="edm::Wrapper<edm::AssociationVector<edm::RefProd<std::vector<edmtest::Simple> >,std::vector<edmtest::Simple>,edm::Ref<std::vector<edmtest::Simple>,edmtest::Simple,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Simple>,edmtest::Simple> >,unsigned int,edm::helper::AssociationIdenticalKeyReference> >"/>
 <class name="edm::Wrapper<edm::DetSetVector<edmtest::Sortable> >"/>
 <class name="edm::Wrapper<edm::DetSetVector<edmtest::Unsortable> >"/>

 <class name="edmNew::DetSetVector<edmtest::Sortable>"/>
 <class name="edmNew::DetSetVector<edmtest::SimpleDerived>"/>
 <class name="edm::Wrapper<edmNew::DetSetVector<edmtest::Sortable> >"/>
 <class name="edm::Wrapper<edmNew::DetSetVector<edmtest::SimpleDerived> >"/>


 <class name="edmtest::Thing" ClassVersion="10">
  <version ClassVersion="10" checksum="2534966692"/>
 </class>
 <class name="edmtest::ThingWithMerge" ClassVersion="10">
  <version ClassVersion="10" checksum="1109971102"/>
 </class>
 <class name="edmtest::ThingWithIsEqual" ClassVersion="10">
  <version ClassVersion="10" checksum="1399583220"/>
 </class>
 <class name="edmtest::OtherThing" ClassVersion="10">
  <version ClassVersion="10" checksum="3424405714"/>
 </class>
 <class name="std::vector<edmtest::Thing>"/>
 <class name="std::vector<edmtest::OtherThing>"/>
 <class name="edm::RefProd<std::vector<edmtest::Thing> >"/>
 <class name="edm::RefToBaseProd<edmtest::Thing>"/>
 <class name="edm::reftobase::BaseHolder<edmtest::Thing>"/>
 <class name="edm::reftobase::Holder<edmtest::Thing,edm::Ref<std::vector<edmtest::Thing>,edmtest::Thing,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Thing>,edmtest::Thing> > >"/>
 <class name="edm::RefToBase<edmtest::Thing>"/>
 <class name="edm::RefToBaseVector<edmtest::Thing>"/>
 <class name="edm::reftobase::BaseVectorHolder<edmtest::Thing>"/>
 <class name="edm::reftobase::VectorHolder<edmtest::Thing, edm::RefVector<std::vector<edmtest::Thing>,edmtest::Thing,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Thing>,edmtest::Thing> > >"/>
 <class name="edm::Ptr<edmtest::Thing>"/>
 <class name="edm::PtrVector<edmtest::Thing>"/>
 <class name="edm::Ref<std::vector<edmtest::Thing>,edmtest::Thing,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Thing>,edmtest::Thing> >"/>
 <class name="edm::RefVector<std::vector<edmtest::Thing>,edmtest::Thing,edm::refhelper::FindUsingAdvance<std::vector<edmtest::Thing>,edmtest::Thing> >"/>
 <class name="edmtest::TrackOfThings" ClassVersion="6">
  <version ClassVersion="6" checksum="545056495"/>
 </class>
 <class name="std::vector<edmtest::TrackOfThings>"/>
 <class name="edm::Wrapper<std::vector<edmtest::TrackOfThings> >"/>
 <class name="edm::Wrapper<edmtest::Thing>"/>
 <class name="edm::Wrapper<edmtest::ThingWithMerge>"/>
 <class name="edm::Wrapper<edmtest::ThingWithIsEqual>"/>
 <class name="edm::Wrapper<std::vector<edmtest::Thing> >"/>
 <class name="edm::Wrapper<std::vector<edmtest::OtherThing> >"/>

 <class name="edmNew::DetSetVector<edmtest::Thing>"/>
 <class name="edm::Ref<edmNew::DetSetVector<edmtest::Thing>, edmtest::Thing, edmNew::DetSetVector<edmtest::Thing>::FindForDetSetVector>"/>
 <class name="edm::RefVector<edmNew::DetSetVector<edmtest::Thing>, edmtest::Thing, edmNew::DetSetVector<edmtest::Thing>::FindForDetSetVector>"/>
 <class name="edm::Wrapper<edmNew::DetSetVector<edmtest::Thing> >"/>
 <class name="edmtest::TrackOfDSVThings" ClassVersion="3">
  <version ClassVersion="3" checksum="635556054"/>
 </class>
 <class name="std::vector<edmtest::TrackOfDSVThings>"/>
 <class name="edm::Wrapper<std::vector<edmtest::TrackOfDSVThings> >"/>

 <class name="edmtestprod::Simple" ClassVersion="10">
  <version ClassVersion="10" checksum="2751437416"/>
 </class>
 <class name="edmtestprod::Ord<edmtestprod::Simple>"/>
 <class name="edmtestprod::StreamTestTmpl<edmtestprod::Ord<edmtestprod::Simple> >"/>
 <class name="edm::Wrapper<edmtestprod::StreamTestTmpl<edmtestprod::Ord<edmtestprod::Simple> > >"/>
 <class name="std::vector<edmtestprod::Simple>"/>
 <class name="edm::SortedCollection<edmtestprod::Simple,edm::StrictWeakOrdering<edmtestprod::Simple> >"/>
 <class name="edm::Wrapper<edm::SortedCollection<edmtestprod::Simple,edm::StrictWeakOrdering<edmtestprod::Simple> > >"/>
 <class name="edmtestprod::StreamTestThing" ClassVersion="10">
  <version ClassVersion="10" checksum="1618121316"/>
 </class>
 <class name="edm::Wrapper<edmtestprod::StreamTestThing>"/>
 <class name="edmtestprod::X0123456789012345678901234567890123456789012345678901234567890123456789012345678901" ClassVersion="10">
  <version ClassVersion="10" checksum="3326113499"/>
 </class>
 <class name="edm::Wrapper<edmtestprod::X0123456789012345678901234567890123456789012345678901234567890123456789012345678901>"/>
 <class name="edmtest::DeleteEarly" ClassVersion="3">
   <version ClassVersion="3" checksum="1338867524"/>
 </class>
 <class name="edm::Wrapper<edmtest::DeleteEarly>"/>

 <class name="edm::helpers::KeyVal<edm::RefProd<std::vector<int> >,edm::RefProd<std::vector<int> > >"/>
 <class name="edm::AssociationMap<edm::OneToOne<std::vector<int>,std::vector<int>,unsigned int> >">
    <field name="transientMap_" transient="true" />
 </class>
 <class name="edm::Wrapper<edm::AssociationMap<edm::OneToOne<std::vector<int>,std::vector<int>,unsigned int> > >"/>

 <class name="edm::helpers::Key<edm::RefProd<std::vector<int> > >"/>
 <class name="edm::AssociationMap<edm::OneToValue<std::vector<int>,double,unsigned int> >">
    <field name="transientMap_" transient="true" />
 </class>
 <class name="edm::Wrapper<edm::AssociationMap<edm::OneToValue<std::vector<int>,double,unsigned int> > >"/>

 <class name="edm::AssociationMap<edm::OneToMany<std::vector<int>,std::vector<int>,unsigned int> >">
    <field name="transientMap_" transient="true" />
 </class>
 <class name="edm::Wrapper<edm::AssociationMap<edm::OneToMany<std::vector<int>,std::vector<int>,unsigned int> > >"/>

 <class name="edm::AssociationMap<edm::OneToManyWithQuality<std::vector<int>,std::vector<int>,double,unsigned int> >">
    <field name="transientMap_" transient="true" />
 </class>
 <class name="edm::Wrapper<edm::AssociationMap<edm::OneToManyWithQuality<std::vector<int>,std::vector<int>,double,unsigned int> > >"/>

 <class name="edm::helpers::KeyVal<edm::RefToBaseProd<int>, edm::RefToBaseProd<int> >"/>
 <class name="edm::AssociationMap<edm::OneToOne<edm::View<int>, edm::View<int>, unsigned int> >">
    <field name="transientMap_" transient="true" />
 </class>
 <class name="edm::Wrapper<edm::AssociationMap<edm::OneToOne<edm::View<int>, edm::View<int>, unsigned int> > >"/>

 <class name="edm::Wrapper<edm::EventID>"/>
 <class name="edm::Wrapper<edm::ProductID>"/>

 <class name="edmtest::MissingDictionaryTestA" ClassVersion="10">
  <version ClassVersion="10" checksum="924871709"/>
 </class>
 <class name="edmtest::MissingDictionaryTestB" ClassVersion="10">
  <version ClassVersion="10" checksum="3237077045"/>
 </class>
 <class name="edmtest::MissingDictionaryTestC" ClassVersion="10">
  <version ClassVersion="10" checksum="276188887"/>
 </class>
 <class name="edmtest::MissingDictionaryTestD" ClassVersion="10">
  <version ClassVersion="10" checksum="525992233"/>
 </class>
 <class name="edmtest::MissingDictionaryTestE" ClassVersion="10">
  <version ClassVersion="10" checksum="525992341"/>
 </class>
<!--
Commenting this out to intentionally cause the missing dictionary
exception when running testMissingDictionaryChecking_cfg.py.
 <class name="edmtest::MissingDictionaryTestF" ClassVersion="10">
  <version ClassVersion="10" checksum="3318785451"/>
 </class>
-->
 <class name="edmtest::MissingDictionaryTestG" ClassVersion="10">
  <version ClassVersion="10" checksum="525992557"/>
 </class>
 <class name="edmtest::MissingDictionaryTestH" ClassVersion="10">
  <version ClassVersion="10" checksum="525992665"/>
 </class>
 <class name="edmtest::MissingDictionaryTestI" ClassVersion="10">
  <version ClassVersion="10" checksum="325955792"/>
 </class>
 <class name="edmtest::MissingDictionaryTestJ" ClassVersion="10">
  <version ClassVersion="10" checksum="525992881"/>
 </class>
 <class name="edmtest::MissingDictionaryTestK" ClassVersion="10">
  <version ClassVersion="10" checksum="525992989"/>
 </class>

 <class name="std::vector<edmtest::MissingDictionaryTestA>"/>
 <class name="std::list<edmtest::MissingDictionaryTestA>"/>
 <class name="std::vector<edmtest::MissingDictionaryTestI>"/>
 <class name="edm::Wrapper<edmtest::MissingDictionaryTestA>"/>
 <class name="edm::Wrapper<std::vector<edmtest::MissingDictionaryTestA> >"/>
 <class name="edm::Wrapper<std::list<edmtest::MissingDictionaryTestA> >"/>

<!-- <class name="edm::soa::Table<edmtest::AnInt,edmtest::AFloat,edmtest::AString>" ClassVersion="3"/>

 <class name="edm::soa::Table<edm::soa::Column<edmtest::kAnInt,int>, edm::soa::Column<edmtest::kAFloat,float>,edm::soa::Column<edmtest::kAString,std::string> >"/>
 <class name="edm::Wrapper<edm::soa::Table<edm::soa::Column<edmtest::kAnInt,int>, edm::soa::Column<edmtest::kAFloat,float>,edm::soa::Column<edmtest::kAString,std::string> > >" persistent="false"/>
-->
 <class name="edm::soa::Table<edmtest::AnInt, edmtest::AFloat,edmtest::AString >"/>
 <class name="edm::Wrapper<edm::soa::Table<edmtest::AnInt, edmtest::AFloat,edmtest::AString > >"/>

</lcgdict>
