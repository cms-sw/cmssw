<lcgdict>

  <class name="reco::PhotonCore" ClassVersion="11">
   <version ClassVersion="10" checksum="1420264349"/>
   <version ClassVersion="11" checksum="3079004489"/>
  </class>
  <ioread sourceClass="reco::PhotonCore" version="[1-10]" targetClass="reco::PhotonCore" source="reco::SuperClusterRef pfSuperCluster_;" target="parentSuperCluster_">
    <![CDATA[parentSuperCluster_ = onfile.pfSuperCluster_;]]>
  </ioread>


  <class name="reco::Photon" ClassVersion="16">
   <version ClassVersion="16" checksum="3459546220"/>
   <version ClassVersion="15" checksum="577991108"/>
   <version ClassVersion="13" checksum="2963666409"/>
   <version ClassVersion="14" checksum="753726370"/>
  </class>
  <class name="reco::Conversion" ClassVersion="11">
   <version ClassVersion="10" checksum="2140222741"/>
   <version ClassVersion="11" checksum="598717096"/>
  </class>
  <ioread sourceClass = "reco::Conversion" version="[1-10]" targetClass="reco::Conversion" source="std::vector<reco::TrackRef> tracks_; std::vector<edm::RefToBase<reco::Track> > trackToBaseRefs_" target="trackToBaseRefs_">
     <![CDATA[trackToBaseRefs_=onfile.trackToBaseRefs_; if(onfile.tracks_.size()>onfile.trackToBaseRefs_.size()) { for(auto const& t: onfile.tracks_) { trackToBaseRefs_.emplace_back(t);} }]]>
  </ioread>
  <class name="reco::Electron" ClassVersion="13">
   <version ClassVersion="13" checksum="827670837"/>
   <version ClassVersion="12" checksum="1547192125"/>
   <version ClassVersion="11" checksum="1178796923"/>
  </class>
  <class name="reco::SiStripElectron" ClassVersion="13">
   <version ClassVersion="13" checksum="1547231262"/>
   <version ClassVersion="12" checksum="634532726"/>
   <version ClassVersion="10" checksum="371046486"/>
   <version ClassVersion="11" checksum="2363574304"/>
  </class>

  <class name="reco::Photon::FiducialFlags" ClassVersion="10">
   <version ClassVersion="10" checksum="2148735796"/>
  </class>
  <class name="reco::Photon::ShowerShape" ClassVersion="11">
   <version ClassVersion="11" checksum="2494542444"/>
  </class>
  <class name="reco::Photon::MIPVariables" ClassVersion="10">
   <version ClassVersion="10" checksum="1613378413"/>
  </class>
  <class name="reco::Photon::IsolationVariables" ClassVersion="11">
   <version ClassVersion="10" checksum="3308689624"/>
   <version ClassVersion="11" checksum="3649971983"/>
  </class>
  <class name="reco::Photon::PflowIsolationVariables"  ClassVersion="12">
   <version ClassVersion="11" checksum="3200292660"/>
   <version ClassVersion="12" checksum="114160170"/>
  </class>
  <class name="reco::Photon::PflowIDVariables"  ClassVersion="-1">
   <version ClassVersion="-1" checksum="2819734289"/>
  </class>
  <class name="reco::Photon::EnergyCorrections"  ClassVersion="15">
   <version ClassVersion="15" checksum="2042715570"/>
  </class>

 
  <class name="std::vector<reco::PhotonCore>"/>  
  <class name="edm::reftobase::BaseHolder<reco::PhotonCore>"/>
  <class name="edm::RefToBase<reco::PhotonCore>"/>
  <class name="edm::reftobase::IndirectHolder<reco::PhotonCore>" />
  <class name="edm::RefToBaseProd<reco::PhotonCore>" />
  <class name="edm::RefToBaseVector<reco::PhotonCore>" />
  <class name="edm::Wrapper<edm::RefToBaseVector<reco::PhotonCore> >" />
  <class name="edm::reftobase::BaseVectorHolder<reco::PhotonCore>" />
  <class name="edm::Wrapper<std::vector<reco::PhotonCore> >"/>
  <class name="edm::Ref<std::vector<reco::PhotonCore>,reco::PhotonCore,edm::refhelper::FindUsingAdvance<std::vector<reco::PhotonCore>,reco::PhotonCore> >"/>
  <class name="edm::RefProd<std::vector<reco::PhotonCore> >"/>
  <class name="edm::RefVector<std::vector<reco::PhotonCore>,reco::PhotonCore,edm::refhelper::FindUsingAdvance<std::vector<reco::PhotonCore>,reco::PhotonCore> >"/>
  <class name="edm::Wrapper<edm::RefVector<std::vector<reco::PhotonCore>,reco::PhotonCore,edm::refhelper::FindUsingAdvance<std::vector<reco::PhotonCore>,reco::PhotonCore> > >"/>
  


  <class name="std::vector<reco::Photon>"/>
  <class name="edm::Wrapper<std::vector<reco::Photon> >"/>
  <class name="edm::Ref<std::vector<reco::Photon>,reco::Photon,edm::refhelper::FindUsingAdvance<std::vector<reco::Photon>,reco::Photon> >"/>
  <class name="std::vector<edm::Ref<std::vector<reco::Photon>,reco::Photon,edm::refhelper::FindUsingAdvance<std::vector<reco::Photon>,reco::Photon> > >"/>
  <class name="edm::RefProd<std::vector<reco::Photon> >"/>
  <class name="edm::RefVector<std::vector<reco::Photon>,reco::Photon,edm::refhelper::FindUsingAdvance<std::vector<reco::Photon>,reco::Photon> >"/>
  <class name="edm::Wrapper<edm::RefVector<std::vector<reco::Photon>,reco::Photon,edm::refhelper::FindUsingAdvance<std::vector<reco::Photon>,reco::Photon> > >"/>
  <class name="edm::reftobase::BaseHolder<reco::Photon>"/>
  <class name="edm::RefToBase<reco::Photon>"/>
  <class name="edm::reftobase::IndirectHolder<reco::Photon>" />
  <class name="edm::RefToBaseProd<reco::Photon>" />
  <class name="edm::RefToBaseVector<reco::Photon>" />
  <class name="edm::Wrapper<edm::RefToBaseVector<reco::Photon> >" />
  <class name="edm::reftobase::BaseVectorHolder<reco::Photon>" />
  <class name="edm::Wrapper<edm::ValueMap<edm::Ref<std::vector<reco::Photon>,reco::Photon,edm::refhelper::FindUsingAdvance<std::vector<reco::Photon>,reco::Photon> > > >"/> 
  <class name="edm::ValueMap<edm::Ref<std::vector<reco::Photon>,reco::Photon,edm::refhelper::FindUsingAdvance<std::vector<reco::Photon>,reco::Photon> > > "/>
  <!-- 
  <class name="std::pair<reco::PFCandidateRef,bool>"/>
  <class name="std::vector<std::pair<reco::PFCandidateRef,bool> >"/>
  <class name="edm::ValueMap<std::vector<std::pair<edm::Ref<std::vector<reco::PFCandidate>,reco::PFCandidate,edm::refhelper::FindUsingAdvance<std::vector<reco::PFCandidate>,reco::PFCandidate> >,bool> > >"/> 
  <class name="edm::Wrapper<edm::ValueMap<std::vector<std::pair<edm::Ref<std::vector<reco::PFCandidate>,reco::PFCandidate,edm::refhelper::FindUsingAdvance<std::vector<reco::PFCandidate>,reco::PFCandidate> >,bool> > > >"/>
   -->


  <class name="std::vector<reco::Electron>"/>
  <class name="edm::Wrapper<std::vector<reco::Electron> >"/>
  <class name="edm::Ref<std::vector<reco::Electron>,reco::Electron,edm::refhelper::FindUsingAdvance<std::vector<reco::Electron>,reco::Electron> >"/>
  <class name="edm::RefProd<std::vector<reco::Electron> >"/>
  <class name="edm::RefVector<std::vector<reco::Electron>,reco::Electron,edm::refhelper::FindUsingAdvance<std::vector<reco::Electron>,reco::Electron> >"/>
  <class name="edm::Wrapper<edm::RefVector<std::vector<reco::Electron>,reco::Electron,edm::refhelper::FindUsingAdvance<std::vector<reco::Electron>,reco::Electron> > >"/>


  <class name="edm::reftobase::BaseHolder<reco::Electron>"/>
  <class name="edm::RefToBase<reco::Electron>"/>
  <class name="edm::reftobase::IndirectHolder<reco::Electron>" />
  <class name="edm::RefToBaseProd<reco::Electron>" />
  <class name="edm::RefToBaseVector<reco::Electron>" />
  <class name="edm::Wrapper<edm::RefToBaseVector<reco::Electron> >" />
  <class name="edm::reftobase::BaseVectorHolder<reco::Electron>" />





  <class name="reco::GsfElectronCore" ClassVersion="12">
   <version ClassVersion="10" checksum="2226610106"/>
   <version ClassVersion="11" checksum="2637403054"/>
   <version ClassVersion="12" checksum="2885797746"/>
  </class>
  <ioread sourceClass="reco::GsfElectronCore" version="[1-10]" targetClass="reco::GsfElectronCore" source="reco::SuperClusterRef pflowSuperCluster_;" target="parentSuperCluster_">
    <![CDATA[parentSuperCluster_ = onfile.pflowSuperCluster_;]]>
  </ioread>  

  <class name="std::vector<reco::GsfElectronCore>"/>  
  <class name="edm::reftobase::BaseHolder<reco::GsfElectronCore>"/>
  <class name="edm::RefToBase<reco::GsfElectronCore>"/>
  <class name="edm::reftobase::IndirectHolder<reco::GsfElectronCore>" />
  <class name="edm::RefToBaseProd<reco::GsfElectronCore>" />
  <class name="edm::RefToBaseVector<reco::GsfElectronCore>" />
  <class name="edm::Wrapper<edm::RefToBaseVector<reco::GsfElectronCore> >" />
  <class name="edm::reftobase::BaseVectorHolder<reco::GsfElectronCore>" />
  <class name="edm::Wrapper<std::vector<reco::GsfElectronCore> >"/>
  <class name="edm::Ref<std::vector<reco::GsfElectronCore>,reco::GsfElectronCore,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectronCore>,reco::GsfElectronCore> >"/>
  <class name="edm::RefProd<std::vector<reco::GsfElectronCore> >"/>
  <class name="edm::RefVector<std::vector<reco::GsfElectronCore>,reco::GsfElectronCore,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectronCore>,reco::GsfElectronCore> >"/>
  <class name="edm::Wrapper<edm::RefVector<std::vector<reco::GsfElectronCore>,reco::GsfElectronCore,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectronCore>,reco::GsfElectronCore> > >"/>

  
  <class name="reco::GsfElectron::TrackClusterMatching" ClassVersion="10">
   <version ClassVersion="10" checksum="1073796225"/>
  </class>
  <class name="reco::GsfElectron::TrackExtrapolations" ClassVersion="10">
   <version ClassVersion="10" checksum="517526181"/>
  </class>
  <class name="reco::GsfElectron::ClosestCtfTrack" ClassVersion="10">
   <version ClassVersion="10" checksum="1307042460"/>
  </class>
  <class name="reco::GsfElectron::FiducialFlags" ClassVersion="10">
   <version ClassVersion="10" checksum="2564471186"/>
  </class>
  <class name="reco::GsfElectron::ShowerShape" ClassVersion="11">
   <version ClassVersion="11" checksum="3451347438"/>
   <version ClassVersion="10" checksum="3070677812"/>
  </class>
  <class name="reco::GsfElectron::IsolationVariables" ClassVersion="10">
   <version ClassVersion="10" checksum="4260674990"/>
  </class>
  <class name="reco::GsfElectron::ConversionRejection" ClassVersion="10">
   <version ClassVersion="10" checksum="190549577"/>
  </class>
  <class name="reco::GsfElectron::Corrections" ClassVersion="11">
   <version ClassVersion="11" checksum="4279379731"/>
  </class>
  <class name="reco::GsfElectron::ChargeInfo" ClassVersion="10">
   <version ClassVersion="10" checksum="1415326811"/>
  </class>
  <class name="reco::GsfElectron::PflowIsolationVariables" ClassVersion="11">
   <version ClassVersion="11" checksum="2389048798"/>
   <version ClassVersion="10" checksum="4270399196"/>
  <ioread sourceClass="reco::GsfElectron::PflowIsolationVariables" version="[1-10]" source="float chargedHadronIso" targetClass="reco::GsfElectron::PflowIsolationVariables" target="sumChargedHadronPt">
   <![CDATA[sumChargedHadronPt = onfile.chargedHadronIso;]]>
   </ioread>
  <ioread sourceClass="reco::GsfElectron::PflowIsolationVariables" version="[1-10]" source="float neutralHadronIso" targetClass="reco::GsfElectron::PflowIsolationVariables" target="sumNeutralHadronEt">
   <![CDATA[sumNeutralHadronEt = onfile.neutralHadronIso;]]>
   </ioread>
  <ioread sourceClass="reco::GsfElectron::PflowIsolationVariables" version="[1-10]" source="float photonIso" targetClass="reco::GsfElectron::PflowIsolationVariables" target="sumPhotonEt">
   <![CDATA[sumPhotonEt = onfile.photonIso;]]>
   </ioread>
  <ioread sourceClass="reco::GsfElectron::PflowIsolationVariables" version="[1-10]" source="" targetClass="reco::GsfElectron::PflowIsolationVariables" target="sumChargedParticlePt">
   <![CDATA[sumChargedParticlePt = 0.;]]>
   </ioread>
  <ioread sourceClass="reco::GsfElectron::PflowIsolationVariables" version="[1-10]" source="" targetClass="reco::GsfElectron::PflowIsolationVariables" target="sumNeutralHadronEtHighThreshold">
   <![CDATA[sumNeutralHadronEtHighThreshold = 0.;]]>
   </ioread>
  <ioread sourceClass="reco::GsfElectron::PflowIsolationVariables" version="[1-10]" source="" targetClass="reco::GsfElectron::PflowIsolationVariables" target="sumPhotonEtHighThreshold">
   <![CDATA[sumPhotonEtHighThreshold = 0.;]]>
   </ioread>
  <ioread sourceClass="reco::GsfElectron::PflowIsolationVariables" version="[1-10]" source="" targetClass="reco::GsfElectron::PflowIsolationVariables" target="sumPUPt">
   <![CDATA[sumPUPt = 0.;]]>
   </ioread>
  </class>
  <class name="reco::GsfElectron::MvaInput" ClassVersion="11">
   <version ClassVersion="11" checksum="2106253688"/>
   <version ClassVersion="10" checksum="2786166332"/>
  </class>
  <class name="reco::GsfElectron::MvaOutput" ClassVersion="13">
   <version ClassVersion="13" checksum="632217271"/>
   <version ClassVersion="12" checksum="3102257169"/>
   <version ClassVersion="11" checksum="1838996036"/>
   <version ClassVersion="10" checksum="2145829729"/>
  </class>
  <ioread sourceClass="reco::GsfElectron::MvaOutput" version="[1-12]" targetClass="reco::GsfElectron::MvaOutput" source="float mva;" target="mva_e_pi">
    <![CDATA[mva_e_pi = onfile.mva;]]>
  </ioread>

  <class name="reco::GsfElectron::ClassificationVariables" ClassVersion="12">
   <version ClassVersion="12" checksum="1990926670"/>
   <version ClassVersion="11" checksum="2094185381"/>
  </class>
  <class name="reco::GsfElectron::PixelMatchVariables" ClassVersion="2">
    <version ClassVersion="2" checksum="3522539867"/>
  </class>
  <class name="reco::GsfElectron" ClassVersion="18">
   <version ClassVersion="18" checksum="2072747263"/>
   <version ClassVersion="17" checksum="1861965703"/>
   <version ClassVersion="16" checksum="1022265405"/>
   <version ClassVersion="15" checksum="515498629"/>
   <version ClassVersion="14" checksum="3918953183"/>
   <version ClassVersion="13" checksum="2991498573"/>
   <version ClassVersion="12" checksum="2835360780"/>
   <version ClassVersion="11" checksum="1755683850"/>
  </class>
  <class name="std::vector<reco::GsfElectron>"/>  
  <class name="edm::reftobase::BaseHolder<reco::GsfElectron>"/>
  <class name="edm::RefToBase<reco::GsfElectron>"/>
  <class name="edm::reftobase::IndirectHolder<reco::GsfElectron>" />
  <class name="edm::RefToBaseProd<reco::GsfElectron>" />
  <class name="edm::RefToBaseVector<reco::GsfElectron>" />
  <class name="edm::Wrapper<edm::RefToBaseVector<reco::GsfElectron> >" />
  <class name="edm::reftobase::BaseVectorHolder<reco::GsfElectron>" />
  <class name="edm::Wrapper<std::vector<reco::GsfElectron> >"/>
  <class name="edm::Ref<std::vector<reco::GsfElectron>,reco::GsfElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectron>,reco::GsfElectron> >"/>
  <class name="std::vector<edm::Ref<std::vector<reco::GsfElectron>,reco::GsfElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectron>,reco::GsfElectron> > >"/>
  <class name="edm::RefProd<std::vector<reco::GsfElectron> >"/>
  <class name="edm::RefVector<std::vector<reco::GsfElectron>,reco::GsfElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectron>,reco::GsfElectron> >"/>
  <class name="edm::Wrapper<edm::RefVector<std::vector<reco::GsfElectron>,reco::GsfElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectron>,reco::GsfElectron> > >"/>

  <class name="edm::Ptr<reco::GsfElectron>" />
  <class name="edm::Wrapper<edm::Ptr<reco::GsfElectron> >" />
  <class name="edm::PtrVector<reco::GsfElectron>" />
  <class name="edm::Wrapper<edm::PtrVector<reco::GsfElectron> >" />
  <class name="edm::ValueMap<edm::Ref<std::vector<reco::GsfElectron>,reco::GsfElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectron>,reco::GsfElectron> > >"/>
  <class name="edm::Wrapper<edm::ValueMap<edm::Ref<std::vector<reco::GsfElectron>,reco::GsfElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::GsfElectron>,reco::GsfElectron> > > >"/>



  <class name="std::vector<reco::Conversion>"/>
  <class name="edm::Wrapper<std::vector<reco::Conversion> >"/>
  <class name="edm::Ref<std::vector<reco::Conversion>,reco::Conversion,edm::refhelper::FindUsingAdvance<std::vector<reco::Conversion>,reco::Conversion> >"/>
  <class name="edm::RefProd<std::vector<reco::Conversion> >"/>
  <class name="edm::RefVector<std::vector<reco::Conversion>,reco::Conversion,edm::refhelper::FindUsingAdvance<std::vector<reco::Conversion>,reco::Conversion> >"/>
  <class name="edm::Wrapper<edm::RefVector<std::vector<reco::Conversion>,reco::Conversion,edm::refhelper::FindUsingAdvance<std::vector<reco::Conversion>,reco::Conversion> > >"/>


  <class name="std::vector<reco::SiStripElectron>"/>
  <class name="edm::Wrapper<std::vector<reco::SiStripElectron> >"/>
  <class name="edm::Ref<std::vector<reco::SiStripElectron>,reco::SiStripElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::SiStripElectron>,reco::SiStripElectron> >"/>
  <class name="edm::RefProd<std::vector<reco::SiStripElectron> >"/>
  <class name="edm::RefVector<std::vector<reco::SiStripElectron>,reco::SiStripElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::SiStripElectron>,reco::SiStripElectron> >"/>
  <class name="edm::Wrapper<edm::RefVector<std::vector<reco::SiStripElectron>,reco::SiStripElectron,edm::refhelper::FindUsingAdvance<std::vector<reco::SiStripElectron>,reco::SiStripElectron> > >"/>

 
  <class name="edm::AssociationMap<edm::OneToValue<std::vector<reco::Photon>, float, unsigned int > >">
      <field name="transientMap_" transient="true" />
  </class>
  <class name="edm::Wrapper<edm::AssociationMap<edm::OneToValue<std::vector<reco::Photon>, float, unsigned int > > >" />
  <class name="edm::helpers::Key<edm::RefProd<std::vector<reco::Photon> > >" />


  <class name="edm::AssociationMap<edm::OneToValue<std::vector<reco::Electron>, float, unsigned int > >">
      <field name="transientMap_" transient="true" />
  </class>
  <class name="edm::Wrapper<edm::AssociationMap<edm::OneToValue<std::vector<reco::Electron>, float, unsigned int > > >" />
  <class name="edm::helpers::Key<edm::RefProd<std::vector<reco::Electron> > >" />


  <class name="std::pair<reco::GsfElectronRef,double>"/>
  <class name="std::vector<std::pair<reco::GsfElectronRef,double> >"/>

  <class name="reco::GsfElectronIsoCollection">
    <field name="transientVector_" transient="true"/>
  </class>
  <class name="reco::GsfElectronIsoCollectionRef"/>
  <class name="reco::GsfElectronIsoCollectionRefProd"/>
  <class name="reco::GsfElectronIsoCollectionRefVector"/>
  <class name="edm::Wrapper<reco::GsfElectronIsoCollection>"/>

  <class name="std::pair<reco::GsfElectronRef,int>"/>
  <class name="std::vector<std::pair<reco::GsfElectronRef,int> >"/>

  <class name="reco::GsfElectronIsoNumCollection">
    <field name="transientVector_" transient="true"/>
  </class>
  <class name="reco::GsfElectronIsoNumCollectionRef"/>
  <class name="reco::GsfElectronIsoNumCollectionRefProd"/>
  <class name="reco::GsfElectronIsoNumCollectionRefVector"/>
  <class name="edm::Wrapper<reco::GsfElectronIsoNumCollection>"/>

  <class name="edm::reftobase::Holder<reco::Candidate, reco::GsfElectronRef>" />
  <class name="edm::reftobase::RefHolder<reco::GsfElectronRef>" />
  <class name="edm::reftobase::VectorHolder<reco::Candidate, reco::GsfElectronRefVector>" />
  <class name="edm::reftobase::RefVectorHolder<reco::GsfElectronRefVector>" />

  <class name="edm::reftobase::Holder<reco::Candidate, reco::PhotonRef>" />
  <class name="edm::reftobase::RefHolder<reco::PhotonRef>" />
  <class name="edm::reftobase::VectorHolder<reco::Candidate, reco::PhotonRefVector>" />
  <class name="edm::reftobase::RefVectorHolder<reco::PhotonRefVector>" />

  <class name="edm::AssociationMap<edm::OneToOne<std::vector<reco::Photon>,edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> >,unsigned int> >">
     <field name="transientMap_" transient="true" />
  </class>
  <class name="edm::helpers::KeyVal<edm::RefProd<std::vector<reco::Photon> >,edm::RefProd<edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> > > >" />
  <class name="edm::Wrapper<edm::AssociationMap<edm::OneToOne<std::vector<reco::Photon>,edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> >,unsigned int> > >" />
 
  <class name="edm::Ptr<reco::Photon>" />
  <class name="edm::PtrVector<reco::Photon>" />
  
</lcgdict>

