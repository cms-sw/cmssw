<lcgdict>
  <class name="edm::AssociationMap<edm::OneToValue<reco::CaloJetCollection,reco::L2TauIsolationInfo, unsigned int> >">
      <field name="transientMap_" transient="true" />
  </class>
  <class name="edm::Wrapper<edm::AssociationMap<edm::OneToValue<reco::CaloJetCollection, reco::L2TauIsolationInfo, unsigned int > > >" />
  <class name="std::map<unsigned int,reco::L2TauIsolationInfo>"/>
  <class name="reco::L2TauIsolationInfo" ClassVersion="10">
   <version ClassVersion="10" checksum="3469208847"/>
  </class>


  <class name="reco::BaseTauTagInfo" ClassVersion="10">
   <version ClassVersion="10" checksum="2717397101"/>
  </class>
  <class name="std::vector<reco::BaseTauTagInfo>"/>
  <class name="edm::Wrapper<std::vector<reco::BaseTauTagInfo> >"/>
  <class name="edm::Ref<std::vector<reco::BaseTauTagInfo>,reco::BaseTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTauTagInfo>,reco::BaseTauTagInfo> >"/>
  <class name="edm::RefProd<std::vector<reco::BaseTauTagInfo> >"/>
  <class name="edm::RefVector<std::vector<reco::BaseTauTagInfo>,reco::BaseTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTauTagInfo>,reco::BaseTauTagInfo> >"/>
  
  <class name="reco::CaloTauTagInfo" ClassVersion="10">
   <version ClassVersion="10" checksum="3077166108"/>
  </class>
  <class name="std::vector<reco::CaloTauTagInfo>"/>
  <class name="edm::Wrapper<std::vector<reco::CaloTauTagInfo> >"/>
  <class name="edm::Ref<std::vector<reco::CaloTauTagInfo>,reco::CaloTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTauTagInfo>,reco::CaloTauTagInfo> >"/>
  <class name="edm::RefProd<std::vector<reco::CaloTauTagInfo> >"/>
  <class name="edm::RefVector<std::vector<reco::CaloTauTagInfo>,reco::CaloTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTauTagInfo>,reco::CaloTauTagInfo> >"/>

  <class name="reco::PFTauTagInfo" ClassVersion="11">
   <version ClassVersion="11" checksum="2849126593"/>
   <version ClassVersion="10" checksum="2791906466"/>
  </class>
  <class name="std::vector<reco::PFTauTagInfo>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTauTagInfo> >"/>
  <class name="edm::Ref<std::vector<reco::PFTauTagInfo>,reco::PFTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTagInfo>,reco::PFTauTagInfo> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTauTagInfo> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTauTagInfo>,reco::PFTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTagInfo>,reco::PFTauTagInfo> >"/>

  <!-- Adding ioread rules for backwards compatibility -->

<ioread sourceClass="reco::PFTauTagInfo" version="[-10]"
source="reco::PFCandidateRefVector PFChargedHadrCands_;"
 targetClass="reco::PFTauTagInfo"
target="PFChargedHadrCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
   PFChargedHadrCands_.reserve(onfile.PFChargedHadrCands_.size());
for(auto const& ref : onfile.PFChargedHadrCands_) { 
   PFChargedHadrCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTauTagInfo" version="[-10]"
source="reco::PFCandidateRefVector PFNeutrHadrCands_;"
 targetClass="reco::PFTauTagInfo"
target="PFNeutrHadrCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
   PFNeutrHadrCands_.reserve(onfile.PFNeutrHadrCands_.size());
for(auto const& ref : onfile.PFNeutrHadrCands_) { 
   PFNeutrHadrCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTauTagInfo" version="[-10]"
source="reco::PFCandidateRefVector PFGammaCands_;"
 targetClass="reco::PFTauTagInfo"
target="PFGammaCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
   PFGammaCands_.reserve(onfile.PFGammaCands_.size());
for(auto const& ref : onfile.PFGammaCands_) { 
   PFGammaCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>


  
  <class name="reco::BaseTau" ClassVersion="10">
   <version ClassVersion="10" checksum="3887454152"/>
  </class>
  <class name="std::vector<reco::BaseTau>"/>
  <class name="edm::Wrapper<std::vector<reco::BaseTau> >"/>
  <class name="edm::Ref<std::vector<reco::BaseTau>,reco::BaseTau,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTau>,reco::BaseTau> >"/>
  <class name="edm::RefProd<std::vector<reco::BaseTau> >"/>
  <class name="edm::RefVector<std::vector<reco::BaseTau>,reco::BaseTau,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTau>,reco::BaseTau> >"/>
  <class name="edm::reftobase::Holder<reco::Candidate, edm::Ref<std::vector<reco::BaseTau>,reco::BaseTau,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTau>,reco::BaseTau> > >" />
  
  <class name="reco::CaloTau" ClassVersion="10">
   <version ClassVersion="10" checksum="1329876375"/>
  </class>
  <class name="std::vector<reco::CaloTau>"/>
  <class name="edm::Wrapper<std::vector<reco::CaloTau> >"/>
  <class name="edm::Ref<std::vector<reco::CaloTau>,reco::CaloTau,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTau>,reco::CaloTau> >"/>
  <class name="edm::RefProd<std::vector<reco::CaloTau> >"/>
  <class name="edm::RefVector<std::vector<reco::CaloTau>,reco::CaloTau,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTau>,reco::CaloTau> >"/>
  <class name="edm::reftobase::Holder<reco::BaseTau, edm::Ref<std::vector<reco::CaloTau>,reco::CaloTau,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTau>,reco::CaloTau> > >" />
  
  <class name="reco::PFTau" ClassVersion="13">
   <version ClassVersion="13" checksum="3087106015"/>
   <version ClassVersion="12" checksum="1810832394"/>
   <version ClassVersion="11" checksum="2334259986"/>
     <field name="signalPiZeroCandidates_" transient="true"/>
     <field name="isolationPiZeroCandidates_" transient="true"/>
     <field name="signalTauChargedHadronCandidates_" transient="true"/>
     <field name="isolationTauChargedHadronCandidates_" transient="true"/>
    <version ClassVersion="10" checksum="2369119060"/>
  </class>

  <class name="std::vector<reco::PFTau>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTau> >"/>
  <class name="edm::Ref<std::vector<reco::PFTau>,reco::PFTau,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau>,reco::PFTau> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTau> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTau>,reco::PFTau,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau>,reco::PFTau> >"/>
          <class name="edm::Wrapper<edm::RefVector<std::vector<reco::PFTau>,reco::PFTau,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau>,reco::PFTau> > >"/>
  <class name="edm::reftobase::Holder<reco::BaseTau, edm::Ref<std::vector<reco::PFTau>,reco::PFTau,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau>,reco::PFTau> > >" />

  <class name="edm::RefToBaseProd<reco::PFTau>" >
     <field name="view_" transient="true" />
  </class>
  <class name="edm::RefToBase<reco::PFTau>" />
  <class name="edm::reftobase::BaseHolder<reco::PFTau>" />
  <class name="edm::reftobase::IndirectHolder<reco::PFTau>" />
    <!---<class name="edm::reftobase::Holder<reco::PFTau,edm::RefToBase<reco::PFTau> > "/>-->
  <class name="edm::RefToBaseVector<reco::PFTau>"/>
  <class name="edm::Wrapper<edm::RefToBaseVector<reco::PFTau> >"/>
  <class name="edm::reftobase::BaseVectorHolder<reco::PFTau>"/>
  <class name="edm::reftobase::Holder<reco::PFTau, reco::PFTauRef>" />
  <class name="edm::reftobase::RefHolder<reco::PFTauRef>" />

  <ioread sourceClass="reco::PFTau" version="[-11]"
  source="reco::PFCandidateRef leadPFChargedHadrCand_;"
  targetClass="reco::PFTau" target="leadPFChargedHadrCand_"
  include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
leadPFChargedHadrCand_ = edm::refToPtr(onfile.leadPFChargedHadrCand_);
]]>
  </ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRef leadPFNeutralCand_;"
targetClass="reco::PFTau" target="leadPFNeutralCand_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
leadPFNeutralCand_ = edm::refToPtr(onfile.leadPFNeutralCand_);
]]>
  </ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRef leadPFCand_;" targetClass="reco::PFTau"
target="leadPFCand_"
include="DataFormats/Common/interface/RefToPtr.h">
<![CDATA[leadPFCand_ = edm::refToPtr(onfile.leadPFCand_);]]>
  </ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRefVector selectedSignalPFCands_;"
 targetClass="reco::PFTau"
target="selectedSignalPFCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
   selectedSignalPFCands_.reserve(onfile.selectedSignalPFCands_.size());
for(auto const& ref : onfile.selectedSignalPFCands_) { 
   selectedSignalPFCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRefVector selectedSignalPFChargedHadrCands_;"
 targetClass="reco::PFTau"
target="selectedSignalPFChargedHadrCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
selectedSignalPFChargedHadrCands_.reserve(onfile.selectedSignalPFChargedHadrCands_.size());
for(auto const& ref : onfile.selectedSignalPFChargedHadrCands_) { 
   selectedSignalPFChargedHadrCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRefVector selectedSignalPFNeutrHadrCands_;"
 targetClass="reco::PFTau"
target="selectedSignalPFNeutrHadrCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
selectedSignalPFNeutrHadrCands_.reserve(onfile.selectedSignalPFNeutrHadrCands_.size());
for(auto const& ref : onfile.selectedSignalPFNeutrHadrCands_) { 
   selectedSignalPFNeutrHadrCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRefVector selectedSignalPFGammaCands_;"
 targetClass="reco::PFTau"
target="selectedSignalPFGammaCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
selectedSignalPFGammaCands_.reserve(onfile.selectedSignalPFGammaCands_.size());
for(auto const& ref : onfile.selectedSignalPFGammaCands_) { 
   selectedSignalPFGammaCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRefVector selectedIsolationPFCands_;"
 targetClass="reco::PFTau"
target="selectedIsolationPFCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
   selectedIsolationPFCands_.reserve(onfile.selectedIsolationPFCands_.size());
for(auto const& ref : onfile.selectedIsolationPFCands_) { 
   selectedIsolationPFCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRefVector
selectedIsolationPFChargedHadrCands_;"
 targetClass="reco::PFTau"
target="selectedIsolationPFChargedHadrCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
selectedIsolationPFChargedHadrCands_.reserve(onfile.selectedIsolationPFChargedHadrCands_.size());
for(auto const& ref : onfile.selectedIsolationPFChargedHadrCands_) { 
   selectedIsolationPFChargedHadrCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRefVector
selectedIsolationPFNeutrHadrCands_;"
 targetClass="reco::PFTau"
target="selectedIsolationPFNeutrHadrCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
selectedIsolationPFNeutrHadrCands_.reserve(onfile.selectedIsolationPFNeutrHadrCands_.size());
for(auto const& ref : onfile.selectedIsolationPFNeutrHadrCands_) { 
   selectedIsolationPFNeutrHadrCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

<ioread sourceClass="reco::PFTau" version="[-11]"
source="reco::PFCandidateRefVector selectedIsolationPFGammaCands_;"
 targetClass="reco::PFTau"
target="selectedIsolationPFGammaCands_"
include="DataFormats/Common/interface/RefToPtr.h">
    <![CDATA[
selectedIsolationPFGammaCands_.reserve(onfile.selectedIsolationPFGammaCands_.size());
for(auto const& ref : onfile.selectedIsolationPFGammaCands_) { 
   selectedIsolationPFGammaCands_.push_back(edm::refToPtr(ref));
}
]]>
</ioread>

  <class name="reco::PFTauDecayMode" ClassVersion="10">
   <version ClassVersion="10" checksum="2108215737"/>
  </class>
  <class name="std::vector<reco::PFTauDecayMode>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTauDecayMode> >"/>
  <class name="edm::Ref<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTauDecayMode> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode> >"/>
  <class name="edm::reftobase::Holder<reco::CompositeCandidate, edm::Ref<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode> > >" />
  <class name="edm::Association<std::vector<reco::PFTauDecayMode> >"/>
  <class name="edm::Association<std::vector<reco::PFTau> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTauDecayMode> > >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTau> > >"/>

  <class name="reco::RecoTauPiZero" ClassVersion="10">
   <version ClassVersion="10" checksum="465425628"/>
  </class>
  <class name="std::vector<reco::RecoTauPiZero>"/>
     <class name="std::vector<std::vector<reco::RecoTauPiZero> >"/>
  <class name="edm::Wrapper<std::vector<reco::RecoTauPiZero> >"/>
  <class name="edm::Ref<std::vector<reco::RecoTauPiZero>,reco::RecoTauPiZero,edm::refhelper::FindUsingAdvance<std::vector<reco::RecoTauPiZero>,reco::RecoTauPiZero> >"/>
  <class name="edm::RefProd<std::vector<reco::RecoTauPiZero> >"/>
  <class name="edm::RefVector<std::vector<reco::RecoTauPiZero>,reco::RecoTauPiZero,edm::refhelper::FindUsingAdvance<std::vector<reco::RecoTauPiZero>,reco::RecoTauPiZero> >"/>
  <class name="edm::reftobase::Holder<reco::CompositePtrCandidate, edm::Ref<std::vector<reco::RecoTauPiZero>,reco::RecoTauPiZero,edm::refhelper::FindUsingAdvance<std::vector<reco::RecoTauPiZero>,reco::RecoTauPiZero> > >" />

  <class name="reco::PFRecoTauChargedHadron" ClassVersion="11">
   <version ClassVersion="11" checksum="858406271" />
   <version ClassVersion="10" checksum="4027987990"/>
  </class>
  <class name="std::vector<reco::PFRecoTauChargedHadron>"/>
     <class name="std::vector<std::vector<reco::PFRecoTauChargedHadron> >"/>
  <class name="edm::Wrapper<std::vector<reco::PFRecoTauChargedHadron> >"/>
  <class name="edm::Ref<std::vector<reco::PFRecoTauChargedHadron>,reco::PFRecoTauChargedHadron,edm::refhelper::FindUsingAdvance<std::vector<reco::PFRecoTauChargedHadron>,reco::PFRecoTauChargedHadron> >"/>
  <class name="edm::RefProd<std::vector<reco::PFRecoTauChargedHadron> >"/>
  <class name="edm::RefVector<std::vector<reco::PFRecoTauChargedHadron>,reco::PFRecoTauChargedHadron,edm::refhelper::FindUsingAdvance<std::vector<reco::PFRecoTauChargedHadron>,reco::PFRecoTauChargedHadron> >"/>
  <class name="edm::reftobase::Holder<reco::CompositePtrCandidate, edm::Ref<std::vector<reco::PFRecoTauChargedHadron>,reco::PFRecoTauChargedHadron,edm::refhelper::FindUsingAdvance<std::vector<reco::PFRecoTauChargedHadron>,reco::PFRecoTauChargedHadron> > >" />

  
  <class name="reco::CaloTauDiscriminatorByIsolationBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorByIsolation" ClassVersion="10">
   <version ClassVersion="10" checksum="2968502385"/>
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorByIsolationRef"/>
  <class name="reco::CaloTauDiscriminatorByIsolationRefProd"/>
  <class name="reco::CaloTauDiscriminatorByIsolationRefVector"/>
  <class name="edm::Wrapper<reco::CaloTauDiscriminatorByIsolation>"/>

  <class name="reco::CaloTauDiscriminatorBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminator" ClassVersion="10">
   <version ClassVersion="10" checksum="1989330711"/>
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorRef"/>
  <class name="reco::CaloTauDiscriminatorRefProd"/>
  <class name="reco::CaloTauDiscriminatorRefVector"/>
  <class name="edm::Wrapper<reco::CaloTauDiscriminator>"/>
  
  <class name="reco::CaloTauDiscriminatorAgainstElectronBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorAgainstElectron" ClassVersion="10">
   <version ClassVersion="10" checksum="3692008801"/>
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorAgainstElectronRef"/>
  <class name="reco::CaloTauDiscriminatorAgainstElectronRefProd"/>
  <class name="reco::CaloTauDiscriminatorAgainstElectronRefVector"/>
  <class name="edm::Wrapper<reco::CaloTauDiscriminatorAgainstElectron>"/>
  
  <class name="std::pair<reco::CaloTauRef, int>"/>
  <class name="std::vector<std::pair<reco::CaloTauRef, int> >" />

  <class name="std::pair<reco::CaloTauRef, float>"/>
  <class name="std::vector<std::pair<reco::CaloTauRef, float> >" />

  <class name="reco::PFTauDiscriminatorByIsolationBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauDiscriminatorByIsolation" ClassVersion="10">
   <version ClassVersion="10" checksum="1187112623"/>
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauDiscriminatorByIsolationRef"/>
  <class name="reco::PFTauDiscriminatorByIsolationRefProd"/>
  <class name="reco::PFTauDiscriminatorByIsolationRefVector"/>
  <class name="edm::Wrapper<reco::PFTauDiscriminatorByIsolation>"/>
  
  <class name="std::pair<reco::PFTauRef, int>"/>
  <class name="std::vector<std::pair<reco::PFTauRef, int> >" />

  <class name="std::pair<reco::PFTauRef, float>"/>
  <class name="std::vector<std::pair<reco::PFTauRef, float> >" />

  <class name="reco::PFTauDiscriminatorBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>

  <class name="reco::PFTauDiscriminator" ClassVersion="10">
   <version ClassVersion="10" checksum="4019319043"/>
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauDiscriminatorRef"/>
  <class name="reco::PFTauDiscriminatorRefProd"/>
  <class name="reco::PFTauDiscriminatorRefVector"/>
  <class name="edm::Wrapper<reco::PFTauDiscriminator>"/>

  <class name="reco::JetPiZeroAssociationBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>

  <class name="reco::JetPiZeroAssociation" ClassVersion="10">
   <version ClassVersion="10" checksum="3488813045"/>
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::JetPiZeroAssociationRef"/>
  <class name="reco::JetPiZeroAssociationRefProd"/>
  <class name="reco::JetPiZeroAssociationRefVector"/>
  <class name="edm::Wrapper<reco::JetPiZeroAssociation>"/>

  <class name="std::pair<reco::PFJetRef, std::vector<reco::RecoTauPiZero> >"/>
  <class name="std::vector<std::pair<reco::PFJetRef, std::vector<reco::RecoTauPiZero> > >" />

  <class name="reco::PFJetChargedHadronAssociationBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>

  <class name="reco::PFJetChargedHadronAssociation" ClassVersion="10">
   <version ClassVersion="10" checksum="3498827707"/>
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFJetChargedHadronAssociationRef"/>
  <class name="reco::PFJetChargedHadronAssociationRefProd"/>
  <class name="reco::PFJetChargedHadronAssociationRefVector"/>
  <class name="edm::Wrapper<reco::PFJetChargedHadronAssociation>"/>

  <class name="std::pair<reco::PFJetRef, std::vector<reco::PFRecoTauChargedHadron> >"/>
  <class name="std::vector<std::pair<reco::PFJetRef, std::vector<reco::PFRecoTauChargedHadron> > >" />


  <class name="reco::PFTauDecayModeAssociation">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauDecayModeAssociationRef"/>
  <class name="reco::PFTauDecayModeAssociationRefProd"/>
  <class name="reco::PFTauDecayModeAssociationRefVector"/>
  <class name="edm::Wrapper<reco::PFTauDecayModeAssociation>"/>
  
  <class name="std::pair<reco::PFTauRef, reco::PFTauDecayMode>"/>
  <class name="std::vector<std::pair<reco::PFTauRef, reco::PFTauDecayMode> >" />

  <class name="reco::PFTauTransverseImpactParameter"/>
  <class name="std::vector<reco::PFTauTransverseImpactParameter>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTauTransverseImpactParameter> >"/>
  <class name="edm::Ref<std::vector<reco::PFTauTransverseImpactParameter>,reco::PFTauTransverseImpactParameter,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameter>,reco::PFTauTransverseImpactParameter> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTauTransverseImpactParameter> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTauTransverseImpactParameter>,reco::PFTauTransverseImpactParameter,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameter>,reco::PFTauTransverseImpactParameter> >"/>
  <class name="edm::reftobase::Holder<reco::PFTauTransverseImpactParameter, edm::Ref<std::vector<reco::PFTauTransverseImpactParameter>,reco::PFTauTransverseImpactParameter,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameter>,reco::PFTauTransverseImpactParameter> > > " />
  <class name="edm::Association<std::vector<reco::PFTauTransverseImpactParameter> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTauTransverseImpactParameter> > >"/>

  <class name="reco::PFTauTransverseImpactParameterCollection"/>
  <class name="std::vector<reco::PFTauTransverseImpactParameterCollection>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTauTransverseImpactParameterCollection> >"/>
  <class name="edm::Ref<std::vector<reco::PFTauTransverseImpactParameterCollection>,reco::PFTauTransverseImpactParameterCollection,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameterCollection>,reco::PFTauTransverseImpactParameterCollection> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTauTransverseImpactParameterCollection> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTauTransverseImpactParameterCollection>,reco::PFTauTransverseImpactParameterCollection,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameterCollection>,reco::PFTauTransverseImpactParameterCollection> >"/>
  <class name="edm::reftobase::Holder<reco::PFTauTransverseImpactParameterCollection, edm::Ref<std::vector<reco::PFTauTransverseImpactParameterCollection>,reco::PFTauTransverseImpactParameterCollection,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameterCollection>,reco::PFTauTransverseImpactParameterCollection> > > " />
  <class name="edm::Association<std::vector<reco::PFTauTransverseImpactParameterCollection> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTauTransverseImpactParameterCollection> > >"/>

  <class name="reco::PFTauTransverseImpactParameterRef"/>
  <class name="std::vector<reco::PFTauTransverseImpactParameterRef>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTauTransverseImpactParameterRef> >"/>
  <class name="edm::Ref<std::vector<reco::PFTauTransverseImpactParameterRef>,reco::PFTauTransverseImpactParameterRef,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameterRef>,reco::PFTauTransverseImpactParameterRef> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTauTransverseImpactParameterRef> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTauTransverseImpactParameterRef>,reco::PFTauTransverseImpactParameterRef,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameterRef>,reco::PFTauTransverseImpactParameterRef> >"/>
  <class name="edm::reftobase::Holder<reco::PFTauTransverseImpactParameterRef, edm::Ref<std::vector<reco::PFTauTransverseImpactParameterRef>,reco::PFTauTransverseImpactParameterRef,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTransverseImpactParameterRef>,reco::PFTauTransverseImpactParameterRef> > > " />
  <class name="edm::Association<std::vector<reco::PFTauTransverseImpactParameterRef> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTauTransverseImpactParameterRef> > >"/>

  <class name="std::vector<reco::VertexRef>"/>
  <class name="edm::Wrapper<std::vector<reco::VertexRef> >"/>
  <class name="edm::Ref<std::vector<reco::VertexRef>,reco::VertexRef,edm::refhelper::FindUsingAdvance<std::vector<reco::VertexRef>,reco::VertexRef> >"/>
  <class name="edm::RefProd<std::vector<reco::VertexRef> >"/>
  <class name="edm::RefVector<std::vector<reco::VertexRef>,reco::VertexRef,edm::refhelper::FindUsingAdvance<std::vector<reco::VertexRef>,reco::VertexRef> >"/>
  <class name="edm::reftobase::Holder<reco::VertexRef, edm::Ref<std::vector<reco::VertexRef>,reco::VertexRef,edm::refhelper::FindUsingAdvance<std::vector<reco::VertexRef>,reco::VertexRef> > >" />
  <class name="edm::Association<std::vector<reco::VertexRef> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::VertexRef> > >"/>

  <class name="std::vector<std::vector<reco::VertexRef> >"/>
  <class name="edm::Wrapper<std::vector<std::vector<reco::VertexRef> > >"/>
  <class name="edm::Ref<std::vector<std::vector<reco::VertexRef> >,std::vector<reco::VertexRef>,edm::refhelper::FindUsingAdvance<std::vector<std::vector<reco::VertexRef> >,std::vector<reco::VertexRef> > >"/>
  <class name="edm::RefProd<std::vector<std::vector<reco::VertexRef> > >"/>
  <class name="edm::RefVector<std::vector<std::vector<reco::VertexRef> >,std::vector<reco::VertexRef>,edm::refhelper::FindUsingAdvance<std::vector<std::vector<reco::VertexRef> >,std::vector<reco::VertexRef> > >"/>
  <class name="edm::reftobase::Holder<std::vector<reco::VertexRef>, edm::Ref<std::vector<std::vector<reco::VertexRef> >,std::vector<reco::VertexRef>,edm::refhelper::FindUsingAdvance<std::vector<std::vector<reco::VertexRef> >,std::vector<reco::VertexRef> > > >" />
  <class name="edm::Association<std::vector<std::vector<reco::VertexRef> > >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<std::vector<reco::VertexRef> > > >"/>

  <class name="reco::PFTauTIPAssociation">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauTIPAssociationRef"/>
  <class name="reco::PFTauTIPAssociationRefProd"/>
  <class name="reco::PFTauTIPAssociationRefVector"/>
  <class name="edm::Wrapper<reco::PFTauTIPAssociation>"/>
  <class name="std::pair<reco::PFTauRef, reco::PFTauTransverseImpactParameterRef >"/>
  <class name="std::vector<std::pair<reco::PFTauRef, reco::PFTauTransverseImpactParameterRef > >" />

  <class name="reco::PFTauVertexAssociation">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauVertexAssociationRef"/>
  <class name="reco::PFTauVertexAssociationRefProd"/>
  <class name="reco::PFTauVertexAssociationRefVector"/>
  <class name="edm::Wrapper<reco::PFTauVertexAssociation>"/>
  <class name="std::pair<reco::PFTauRef, reco::VertexRef>"/>
  <class name="std::vector<std::pair<reco::PFTauRef,
  reco::VertexRef> >" />

  <class name="reco::PFTauVertexVAssociation">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauVertexVAssociationRef"/>
  <class name="reco::PFTauVertexVAssociationRefProd"/>
  <class name="reco::PFTauVertexVAssociationRefVector"/>
  <class name="edm::Wrapper<reco::PFTauVertexVAssociation>"/>
  <class name="std::pair<reco::PFTauRef, std::vector<reco::VertexRef> >"/>
  <class name="std::vector<std::pair<reco::PFTauRef, std::vector<reco::VertexRef> > >" />

  <class name="reco::PFTau3ProngSummary"/>
  <class name="std::vector<reco::PFTau3ProngSummary>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTau3ProngSummary> >"/>
  <class name="edm::Ref<std::vector<reco::PFTau3ProngSummary>,reco::PFTau3ProngSummary,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummary>,reco::PFTau3ProngSummary> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTau3ProngSummary> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTau3ProngSummary>,reco::PFTau3ProngSummary,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummary>,reco::PFTau3ProngSummary> >"/>
  <class name="edm::reftobase::Holder<reco::PFTau3ProngSummary, edm::Ref<std::vector<reco::PFTau3ProngSummary>,reco::PFTau3ProngSummary,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummary>,reco::PFTau3ProngSummary> > >" />
  <class name="edm::Association<std::vector<reco::PFTau3ProngSummary> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTau3ProngSummary> > >"/>



  <class name="reco::PFTau3ProngSummaryCollection"/>
  <class name="std::vector<reco::PFTau3ProngSummaryCollection>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTau3ProngSummaryCollection> >"/>
  <class name="edm::Ref<std::vector<reco::PFTau3ProngSummaryCollection>,reco::PFTau3ProngSummaryCollection,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummaryCollection>,reco::PFTau3ProngSummaryCollection> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTau3ProngSummaryCollection> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTau3ProngSummaryCollection>,reco::PFTau3ProngSummaryCollection,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummaryCollection>,reco::PFTau3ProngSummaryCollection> >"/>
  <class name="edm::reftobase::Holder<reco::PFTau3ProngSummaryCollection, edm::Ref<std::vector<reco::PFTau3ProngSummaryCollection>,reco::PFTau3ProngSummaryCollection,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummaryCollection>,reco::PFTau3ProngSummaryCollection> > >" />
  <class name="edm::Association<std::vector<reco::PFTau3ProngSummaryCollection> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTau3ProngSummaryCollection> > >"/>



  <class name="reco::PFTau3ProngSummaryRef"/>
  <class name="std::vector<reco::PFTau3ProngSummaryRef>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTau3ProngSummaryRef> >"/>
  <class name="edm::Ref<std::vector<reco::PFTau3ProngSummaryRef>,reco::PFTau3ProngSummaryRef,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummaryRef>,reco::PFTau3ProngSummaryRef> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTau3ProngSummaryRef> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTau3ProngSummaryRef>,reco::PFTau3ProngSummaryRef,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummaryRef>,reco::PFTau3ProngSummaryRef> >"/>
  <class name="edm::reftobase::Holder<reco::PFTau3ProngSummaryRef, edm::Ref<std::vector<reco::PFTau3ProngSummaryRef>,reco::PFTau3ProngSummaryRef,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau3ProngSummaryRef>,reco::PFTau3ProngSummaryRef> > >" />
  <class name="edm::Association<std::vector<reco::PFTau3ProngSummaryRef> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTau3ProngSummaryRef> > >"/>

 <class name="std::vector<std::vector<TLorentzVector> >"/>

 <class name="reco::PFTau3ProngSumAssociation">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTau3ProngSumAssociationRef"/>
  <class name="reco::PFTau3ProngSumAssociationRefProd"/>
  <class name="reco::PFTau3ProngSumAssociationRefVector"/>
  <class name="edm::Wrapper<reco::PFTau3ProngSumAssociation>"/>
  <class name="std::pair<reco::PFTauRef, std::vector<reco::PFTau3ProngSummaryRef> >"/>
  <class name="std::vector<std::pair<reco::PFTauRef,  std::vector<reco::PFTau3ProngSummaryRef> > >" />

//Needed only for HLT-Open
<class name="reco::HLTTau" ClassVersion="10">
 <version ClassVersion="10" checksum="2579739479"/>
</class>
  <class name="std::vector<reco::HLTTau>"/>
  <class name="edm::Wrapper<std::vector<reco::HLTTau> >"/>
  <class name="edm::Ref<std::vector<reco::HLTTau>,reco::HLTTau,edm::refhelper::FindUsingAdvance<std::vector<reco::HLTTau>,reco::HLTTau> >"/>
  <class name="edm::RefProd<std::vector<reco::HLTTau> >"/>
  <class name="edm::RefVector<std::vector<reco::HLTTau>,reco::HLTTau,edm::refhelper::FindUsingAdvance<std::vector<reco::HLTTau>,reco::HLTTau> >"/>

  <class name="edm::Ptr<reco::BaseTau>" />
  <class name="edm::PtrVector<reco::BaseTau>" />

</lcgdict>
