<lcgdict>
 <selection>
  <!-- PAT Base Templates -->
  <class name="pat::PATObject<reco::GsfElectron>" />
  <class name="pat::PATObject<reco::Muon>" />
  <class name="pat::PATObject<reco::BaseTau>" />
  <class name="pat::PATObject<reco::Photon>" />
  <class name="pat::PATObject<reco::Jet>" />
  <class name="pat::PATObject<reco::MET>" />
  <class name="pat::PATObject<reco::LeafCandidate>" />
  <class name="pat::PATObject<reco::CompositeCandidate>" />
  <class name="pat::PATObject<reco::PFCandidate>" />
  <class name="pat::PATObject<reco::RecoCandidate>" />
  <class name="pat::Lepton<reco::GsfElectron>" />
  <class name="pat::Lepton<reco::Muon>" />
  <class name="pat::Lepton<reco::BaseTau>" />

  <!-- PAT Objects, and embedded data  -->
  <class name="pat::Electron"  ClassVersion="36">
   <version ClassVersion="36" checksum="199321903"/>
   <version ClassVersion="35" checksum="482655666"/>
   <version ClassVersion="34" checksum="3720919820"/>
   <version ClassVersion="33" checksum="459924678"/>
   <version ClassVersion="32" checksum="3508125821"/>
   <version ClassVersion="31" checksum="1881133053"/>
   <version ClassVersion="30" checksum="3949366163"/>
   <version ClassVersion="29" checksum="1784986402"/>
   <version ClassVersion="28" checksum="2518240031"/>
   <version ClassVersion="27" checksum="3863179876"/>
   <field name="superClusterRelinked_" transient="true"/>
   <version ClassVersion="26" checksum="2045819644"/>
   <version ClassVersion="25" checksum="1488101799"/>
   <version ClassVersion="24" checksum="2646043873"/>
   <version ClassVersion="23" checksum="434577157"/>
   <version ClassVersion="22" checksum="4113394532"/>
   <version ClassVersion="21" checksum="366535823"/>
   <version ClassVersion="20" checksum="4220542719"/>
   <version ClassVersion="19" checksum="839477640"/>
   <version ClassVersion="18" checksum="191995725"/>
   <version ClassVersion="17" checksum="1230088720"/>
   <version ClassVersion="15" checksum="990589145"/>
   <version ClassVersion="10" checksum="1662079993"/>
  </class>
  <!--NOTE: the declaration of AtomicPtrCache are a temporary work around until ROOT 6 where they will not be needed -->
  <class name="edm::AtomicPtrCache<std::vector<reco::SuperCluster> >">
   <field name="m_data" transient="true"/>
  </class>
  <ioread sourceClass="pat::Electron" targetClass="pat::Electron" version="[1-]" source="" target="superClusterRelinked_">
    <![CDATA[superClusterRelinked_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Electron"  targetClass="pat::Electron" version="[-28]" target="ip_" source="std::vector<double> ip_" embed="false">
    <![CDATA[ ip_[0] = onfile.ip_[1]; ip_[1] = onfile.ip_[2]; ip_[2] = onfile.ip_[3]; ip_[3] = onfile.ip_[4]; ]]>
  </ioread>
  <ioread sourceClass="pat::Electron"  targetClass="pat::Electron" version="[-28]" target="eip_" source="std::vector<double> eip_" embed="false">
    <![CDATA[ eip_[0] = onfile.eip_[1]; eip_[1] = onfile.eip_[2]; eip_[2] = onfile.eip_[3]; eip_[3] = onfile.eip_[4]; ]]>
  </ioread>
  <ioread sourceClass="pat::Electron"  targetClass="pat::Electron" version="[-28]" target="cachedIP_" source="std::vector<bool> cachedIP_" embed="false">
    <![CDATA[ cachedIP_ = onfile.cachedIP_[1] + 2*onfile.cachedIP_[2] + 4*onfile.cachedIP_[3] + 8*onfile.cachedIP_[4]; ]]>
  </ioread>


  <class name="pat::Muon"  ClassVersion="21">
   <version ClassVersion="21" checksum="1539691612"/>
   <version ClassVersion="20" checksum="357097717"/>
   <version ClassVersion="19" checksum="2754486523"/>
   <version ClassVersion="18" checksum="1163602263"/>
   <version ClassVersion="17" checksum="1509153359"/>
   <version ClassVersion="16" checksum="2674665735"/>
   <version ClassVersion="15" checksum="1248517999"/>
   <version ClassVersion="14" checksum="132269943"/>
   <version ClassVersion="13" checksum="2943499125"/>
   <version ClassVersion="12" checksum="462627330"/>
   <version ClassVersion="11" checksum="489577659"/>
   <version ClassVersion="10" checksum="2367573922"/>
  </class>
  <ioread sourceClass="pat::Muon"  targetClass="pat::Muon" version="[-16]" target="ip_" source="std::vector<double> ip_" embed="false">
    <![CDATA[ ip_[0] = onfile.ip_[1]; ip_[1] = onfile.ip_[2]; ip_[2] = onfile.ip_[3]; ip_[3] = onfile.ip_[4]; ]]>
  </ioread>
  <ioread sourceClass="pat::Muon"  targetClass="pat::Muon" version="[-16]" target="eip_" source="std::vector<double> eip_" embed="false">
    <![CDATA[ eip_[0] = onfile.eip_[1]; eip_[1] = onfile.eip_[2]; eip_[2] = onfile.eip_[3]; eip_[3] = onfile.eip_[4]; ]]>
  </ioread>
  <ioread sourceClass="pat::Muon"  targetClass="pat::Muon" version="[-16]" target="cachedIP_" source="std::vector<bool> cachedIP_" embed="false">
    <![CDATA[ cachedIP_ = onfile.cachedIP_[1] + 2*onfile.cachedIP_[2] + 4*onfile.cachedIP_[3] + 8*onfile.cachedIP_[4]; ]]>
  </ioread>

  <class name="pat::Tau"  ClassVersion="18">
   <version ClassVersion="18" checksum="3279584614"/>
   <version ClassVersion="17" checksum="2561486007"/>
   <version ClassVersion="16" checksum="2793593983"/>
   <field name="isolationTracksTransientRefVector_" transient="true"/>
   <field name="signalTracksTransientRefVector_" transient="true"/>
   <field name="signalPFCandsTransientPtrs_" transient="true"/>
   <field name="signalPFChargedHadrCandsTransientPtrs_" transient="true"/>
   <field name="signalPFNeutralHadrCandsTransientPtrs_" transient="true"/>
   <field name="signalPFGammaCandsTransientPtrs_" transient="true"/>
   <field name="isolationPFCandsTransientPtrs_" transient="true"/>
   <field name="isolationPFChargedHadrCandsTransientPtrs_" transient="true"/>
   <field name="isolationPFNeutralHadrCandsTransientPtrs_" transient="true"/>
   <field name="isolationPFGammaCandsTransientPtrs_" transient="true"/>
   <version ClassVersion="15" checksum="3797478883"/>
   <version ClassVersion="14" checksum="3966509354"/>
   <version ClassVersion="13" checksum="2969928320"/>
   <version ClassVersion="12" checksum="2900944238"/>
   <version ClassVersion="11" checksum="3100353428"/>
   <version ClassVersion="10" checksum="2244564938"/>
  </class>

  <class name="pat::IsolatedTrack" ClassVersion="3">
   <version ClassVersion="3" checksum="550880582"/>
  </class>

  <class name="pat::PFIsolation" ClassVersion="3">
    <version ClassVersion="3" checksum="2961562419" />
  </class>

  <!--NOTE: the declaration of AtomicPtrCache are a temporary work around until ROOT 6 where they will not be needed -->
   <class name="edm::AtomicPtrCache<reco::TrackRefVector>">
     <field name="m_data" transient="true"/>
  </class>
   <class name="edm::AtomicPtrCache<std::vector<reco::PFCandidatePtr> >">
     <field name="m_data" transient="true"/>
  </class>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="isolationTracksTransientRefVector_">
  <![CDATA[isolationTracksTransientRefVector_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="signalTracksTransientRefVector_">
  <![CDATA[signalTracksTransientRefVector_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="signalPFCandsTransientPtrs_">
  <![CDATA[signalPFCandsTransientPtrs_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="signalPFChargedHadrCandsTransientPtrs_">
  <![CDATA[signalPFChargedHadrCandsTransientPtrs_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="signalPFNeutralHadrCandsTransientPtrs_">
  <![CDATA[signalPFNeutralHadrCandsTransientPtrs_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="signalPFGammaCandsTransientPtrs_">
  <![CDATA[signalPFGammaCandsTransientPtrs_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="isolationPFCandsTransientPtrs_">
  <![CDATA[isolationPFCandsTransientPtrs_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="isolationPFChargedHadrCandsTransientPtrs_">
  <![CDATA[isolationPFChargedHadrCandsTransientPtrs_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="isolationPFNeutralHadrCandsTransientPtrs_">
  <![CDATA[isolationPFNeutralHadrCandsTransientPtrs_.reset();]]>
  </ioread>
  <ioread sourceClass="pat::Tau" targetClass="pat::Tau" version="[1-]" source="" target="isolationPFGammaCandsTransientPtrs_">
  <![CDATA[isolationPFGammaCandsTransientPtrs_.reset();]]>
  </ioread>
  <class name="pat::tau::TauPFSpecific"  ClassVersion="15">
   <version ClassVersion="15" checksum="3425877587"/>
   <version ClassVersion="14" checksum="1401440164"/>
   <version ClassVersion="13" checksum="3129436753"/>
   <version ClassVersion="12" checksum="941745608"/>
   <version ClassVersion="11" checksum="3975939304"/>
   <version ClassVersion="10" checksum="2617942038"/>
  </class>
  <class name="std::vector<pat::tau::TauPFSpecific>" />
  <class name="pat::tau::TauCaloSpecific"  ClassVersion="11">
   <version ClassVersion="11" checksum="943826557"/>
   <version ClassVersion="10" checksum="2692173055"/>
  </class>
  <class name="std::vector<pat::tau::TauCaloSpecific>" />
  <class name="pat::tau::TauPFEssential" ClassVersion="14">
    <version ClassVersion="14" checksum="524735083" /> 
    <version ClassVersion="13" checksum="1052833547" />
    <version ClassVersion="12" checksum="3865233356" /> 
    <version ClassVersion="11" checksum="1193752112" />
    <version ClassVersion="10" checksum="1628501942" />
  </class>
  <ioread sourceClass="pat::tau::TauPFEssential" targetClass="pat::tau::TauPFEssential" version="[-10]" source="ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > p4Jet_" target="p4Jet_">
          <![CDATA[ p4Jet_ = ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(onfile.p4Jet_); ]]>
  </ioread>
  <ioread sourceClass="pat::tau::TauPFEssential" targetClass="pat::tau::TauPFEssential" version="[-10]" source="ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > p4CorrJet_" target="p4CorrJet_">
          <![CDATA[ p4CorrJet_ = ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >(onfile.p4CorrJet_); ]]>
  </ioread>
  <ioread sourceClass="pat::tau::TauPFEssential" targetClass="pat::tau::TauPFEssential" version="[-10]" source="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> dxy_PCA_" target="dxy_PCA_">
          <![CDATA[ dxy_PCA_ = ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(onfile.dxy_PCA_); ]]>
  </ioread>
  <ioread sourceClass="pat::tau::TauPFEssential" targetClass="pat::tau::TauPFEssential" version="[-10]" source="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> pvPos_" target="pvPos_">
          <![CDATA[ pvPos_ = ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(onfile.pvPos_); ]]>
  </ioread>
  <ioread sourceClass="pat::tau::TauPFEssential" targetClass="pat::tau::TauPFEssential" version="[-10]" source="ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > pvCov_" target="pvCov_">
    <![CDATA[
       // matrices must be copied by hand
       for (unsigned int i = 0; i < 3; ++i) { for (unsigned int j = 0; j < 3; ++j) {
            pvCov_(i,j) = onfile.pvCov_(i,j);
       }}
    ]]>
  </ioread>
  <ioread sourceClass="pat::tau::TauPFEssential" targetClass="pat::tau::TauPFEssential" version="[-10]" source="ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> flightLength_" target="flightLength_">
          <![CDATA[ flightLength_ = ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(onfile.flightLength_); ]]>
  </ioread>
  <ioread sourceClass="pat::tau::TauPFEssential" targetClass="pat::tau::TauPFEssential" version="[-10]" source="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> svPos_" target="svPos_">
          <![CDATA[ svPos_ = ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<float>,ROOT::Math::DefaultCoordinateSystemTag>(onfile.svPos_); ]]>
  </ioread>
  <ioread sourceClass="pat::tau::TauPFEssential" targetClass="pat::tau::TauPFEssential" version="[-10]" source="ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > svCov_" target="svCov_">
    <![CDATA[
       // matrices must be copied by hand
       for (unsigned int i = 0; i < 3; ++i) { for (unsigned int j = 0; j < 3; ++j) {
            svCov_(i,j) = onfile.svCov_(i,j);
       }}
    ]]>
  </ioread>

  <class name="std::vector<pat::tau::TauPFEssential>" />
  <class name="pat::Photon"  ClassVersion="20">
   <version ClassVersion="20" checksum="1579185367"/>
   <version ClassVersion="19" checksum="4285818507"/>
   <version ClassVersion="18" checksum="1413598928"/>
   <version ClassVersion="17" checksum="2394457997"/>
   <field name="superClusterRelinked_" transient="true"/>
   <version ClassVersion="16" checksum="344001813"/>
   <version ClassVersion="15" checksum="3096238365"/>
   <version ClassVersion="14" checksum="2817723713"/>
   <version ClassVersion="13" checksum="3948496360"/>
   <version ClassVersion="12" checksum="2518470540"/>
   <version ClassVersion="11" checksum="3277818926"/>
   <version ClassVersion="10" checksum="865744757"/>
  </class>
  <!--NOTE: the declaration of AtomicPtrCache are a temporary work around until ROOT 6 where they will not be needed -->
  <ioread sourceClass="pat::Photon" targetClass="pat::Photon" version="[1-]" source="" target="superClusterRelinked_">
    <![CDATA[superClusterRelinked_.reset();]]>
  </ioread>

  <class name="pat::Jet"  ClassVersion="16">
   <version ClassVersion="16" checksum="4069285947"/>
   <version ClassVersion="15" checksum="727883729"/>
   <version ClassVersion="14" checksum="1304049301"/>
   <version ClassVersion="13" checksum="130552029"/>
   <field name="caloTowersTemp_" transient="true"/>
   <field name="pfCandidatesTemp_" transient="true"/>
   <version ClassVersion="12" checksum="862613450"/>
   <version ClassVersion="11" checksum="4153489469"/>
   <version ClassVersion="10" checksum="3393361159"/>
  </class>
  <ioread sourceClass = "pat::Jet" version="[1-11]" targetClass="pat::Jet" source="int partonFlavour_" target="jetFlavourInfo_">
    <![CDATA[jetFlavourInfo_ = reco::JetFlavourInfo(0,onfile.partonFlavour_);]]>
  </ioread>
  <class name="pat::MET"  ClassVersion="15">
    <version ClassVersion="15" checksum="428901429"/>
    <field name="corMap_" transient="true"/>
   <version ClassVersion="14" checksum="1795935545"/>
   <version ClassVersion="13" checksum="2368359386"/>
   <version ClassVersion="12" checksum="1474251442"/>
   <version ClassVersion="11" checksum="1829185007"/>
   <version ClassVersion="10" checksum="1136648776"/>
  </class>
  <class name="pat::MET::PackedMETUncertainty" ClassVersion="11">
    <version ClassVersion="11" checksum="3523936012"/>
    <version ClassVersion="10" checksum="1984780659"/>
    <field name="dpx_" transient="true" />
    <field name="dpy_" transient="true" />
    <field name="dsumEt_" transient="true" />
    <field name="unpacked_" transient="true" />

  </class>
  <ioread sourceClass="pat::MET::PackedMETUncertainty"  version="[1-]" targetClass="pat::MET::PackedMETUncertainty" source="" target="unpacked_">
        <![CDATA[unpacked_ = false; ]]>
  </ioread>
  <class name="pat::MET::Vector2"  transient="true" />

  <class name="std::vector<pat::MET::PackedMETUncertainty>" />
  <class name="pat::MHT"  ClassVersion="12">
   <version ClassVersion="12" checksum="965016657"/>
   <version ClassVersion="11" checksum="2562213081"/>
   <version ClassVersion="10" checksum="2696169357"/>
  </class>
  <class name="pat::Particle"  ClassVersion="12">
   <version ClassVersion="12" checksum="1268816645"/>
   <version ClassVersion="11" checksum="2960540813"/>
   <version ClassVersion="10" checksum="1421351288"/>
  </class>
  <class name="pat::CompositeCandidate"  ClassVersion="12">
   <version ClassVersion="12" checksum="2489375362"/>
   <version ClassVersion="11" checksum="3492108938"/>
   <version ClassVersion="10" checksum="417284221"/>
  </class>
  <class name="pat::PFParticle"  ClassVersion="14">
   <version ClassVersion="14" checksum="2795911745"/>
   <version ClassVersion="13" checksum="223824921"/>
   <version ClassVersion="12" checksum="4118931093"/>
   <version ClassVersion="11" checksum="2923110109"/>
   <version ClassVersion="10" checksum="2240381542"/>
  </class>
  <class name="pat::GenericParticle"  ClassVersion="12">
   <version ClassVersion="12" checksum="3190464374"/>
   <version ClassVersion="11" checksum="4208136910"/>
   <version ClassVersion="10" checksum="3438694352"/>
  </class>
  <class name="pat::Hemisphere"  ClassVersion="12">
   <version ClassVersion="12" checksum="1827958121"/>
   <version ClassVersion="11" checksum="1034779649"/>
   <version ClassVersion="10" checksum="2908192056"/>
  </class>
  <class name="pat::Conversion"  ClassVersion="11">
   <version ClassVersion="11" checksum="1239840459"/>
  </class>
  <class name="pat::PackedCandidate::PackedCovariance" ClassVersion="3">
   <version ClassVersion="3" checksum="3320406063"/>
  </class>
  <class name="pat::PackedCandidate" ClassVersion="30">
   <version ClassVersion="30" checksum="3338823671"/>
   <version ClassVersion="29" checksum="649303924"/>
   <version ClassVersion="28" checksum="1956349111"/>
    <version ClassVersion="27" checksum="2418936168"/>
    <version ClassVersion="26" checksum="2986327792"/>
    <version ClassVersion="25" checksum="3654469025"/>
    <version ClassVersion="24" checksum="663492232"/>
    <version ClassVersion="23" checksum="559934341"/>
    <version ClassVersion="22" checksum="691064527"/>
    <version ClassVersion="21" checksum="1075665714"/>
    <version ClassVersion="20" checksum="2078702780"/>
    <version ClassVersion="19" checksum="359155190"/>
    <version ClassVersion="18" checksum="4275117305"/>
    <version ClassVersion="17" checksum="1257500115"/>
    <version ClassVersion="16" checksum="3261782486"/>
    <version ClassVersion="15" checksum="2118306102"/>
    <version ClassVersion="14" checksum="1075333340"/>
    <version ClassVersion="13" checksum="981046949"/>
    <version ClassVersion="12" checksum="981046949"/>
    <version ClassVersion="11" checksum="3135186025"/>
    <version ClassVersion="10" checksum="572957881"/>
    <field name="p4_" transient="true" />
    <field name="p4c_" transient="true" />
    <field name="vertex_" transient="true" />
    <field name="dxy_" transient="true" />
    <field name="dz_" transient="true" />
    <field name="dtrkpt_" transient="true" />
    <field name="dphi_" transient="true" />
    <field name="deta_" transient="true" />
    <field name="track_" transient="true" />
    <field name="m_" transient="true" />
    <!--- <field name="covariance_load_flag" transient="true"/> -->
   <!--- <field name="covarianceParameterization_" transient="true" />-->
  </class>
  <ioread sourceClass="pat::PackedCandidate"  version="[1-]" targetClass="pat::PackedCandidate" source="" target="p4_">
    <![CDATA[delete p4_.exchange(nullptr);
    ]]>
  </ioread>
  <ioread sourceClass="pat::PackedCandidate"  version="[1-]" targetClass="pat::PackedCandidate" source="" target="p4c_">
    <![CDATA[delete p4c_.exchange(nullptr);
    ]]>
  </ioread>
  <ioread sourceClass="pat::PackedCandidate"  version="[1-]" targetClass="pat::PackedCandidate" source="" target="vertex_">
    <![CDATA[delete vertex_.exchange(nullptr);
    ]]>
  </ioread>
  <ioread sourceClass="pat::PackedCandidate"  version="[1-]" targetClass="pat::PackedCandidate" source="" target="track_">
    <![CDATA[delete track_.exchange(nullptr);
    ]]>
  </ioread>
  <ioread sourceClass="pat::PackedCandidate" source="uint16_t packedCovarianceDxyDxy_; uint16_t packedCovarianceDxyDz_; uint16_t packedCovarianceDzDz_;   int8_t packedCovarianceDlambdaDz_; int8_t packedCovarianceDphiDxy_;  int8_t packedCovarianceDptDpt_; int8_t packedCovarianceDetaDeta_;  int8_t packedCovarianceDphiDphi_ " version="[-28]" targetClass="pat::PackedCandidate"
   target="packedCovariance_" embed="false" >
   <![CDATA[
            packedCovariance_.dxydxy = onfile.packedCovarianceDxyDxy_;
            packedCovariance_.dxydz = onfile.packedCovarianceDxyDz_;
	    packedCovariance_.dzdz = onfile.packedCovarianceDzDz_;
	    packedCovariance_.dlambdadz = onfile.packedCovarianceDlambdaDz_;
	    packedCovariance_.dphidxy = onfile.packedCovarianceDphiDxy_;
            packedCovariance_.dptdpt = onfile.packedCovarianceDptDpt_;
            packedCovariance_.detadeta = onfile.packedCovarianceDetaDeta_;
            packedCovariance_.dphidphi = onfile.packedCovarianceDphiDphi_;
   ]]>
   </ioread>



  <class name="pat::PackedGenParticle" ClassVersion="12">
    <version ClassVersion="12" checksum="2626711017"/>
    <version ClassVersion="11" checksum="25552245"/>
    <version ClassVersion="10" checksum="389883266"/>
    <field name="p4_" transient="true" />
    <field name="p4c_" transient="true" />
  </class>
  <ioread sourceClass="pat::PackedGenParticle" source="int16_t packedEta_;int16_t packedPt_;int16_t packedM_;" version="[-10]" checksum="[389883266]" targetClass="pat::PackedGenParticle"
  	 target="packedY_" embed="false" include="DataFormats/PatCandidates/interface/ioread_packedgen.h" >
	<![CDATA[
	packedY_ = convertPackedEtaToPackedY(onfile.packedPt_,onfile.packedEta_,onfile.packedM_);
	]]>
   </ioread>

  <ioread sourceClass="pat::PackedGenParticle"  version="[1-]" targetClass="pat::PackedGenParticle" source="" target="p4_">
    <![CDATA[delete p4_.exchange(nullptr);
    ]]>
  </ioread>
  <ioread sourceClass="pat::PackedGenParticle"  version="[1-]" targetClass="pat::PackedGenParticle" source="" target="p4c_">
    <![CDATA[delete p4c_.exchange(nullptr);
    ]]>
  </ioread>


  <!-- PAT Object Ptrs  -->
  <class name="edm::Ptr<pat::Electron>" />
  <class name="edm::Ptr<pat::Muon>" />
  <class name="edm::Ptr<pat::Tau>" />
  <class name="edm::Ptr<pat::Jet>" />
  <class name="edm::Ptr<pat::MET>" />
  <class name="edm::Ptr<pat::Conversion>" />
  <class name="edm::Ptr<pat::PackedCandidate>" />

  <class name="edm::FwdPtr<pat::PackedCandidate>" />
  <class name="std::vector<edm::FwdPtr<pat::PackedCandidate> >" />
  <class name="edm::Wrapper<edm::FwdPtr<pat::PackedCandidate> >" />
  <class name="edm::Wrapper<std::vector<edm::FwdPtr<pat::PackedCandidate> > >" />


  <!-- PAT Object Collections -->
  <class name="std::vector<pat::Electron>" />
  <class name="std::vector<pat::Muon>" />
  <class name="std::vector<pat::Tau>" />
  <class name="std::vector<pat::Photon>" />
  <class name="std::vector<pat::Jet>" />
  <class name="std::vector<pat::MET>" />
  <class name="std::vector<pat::MHT>" />
  <class name="std::vector<pat::Particle>" />
  <class name="std::vector<pat::CompositeCandidate>" />
  <class name="std::vector<pat::PFParticle>" />
  <class name="std::vector<pat::GenericParticle>" />
  <class name="std::vector<pat::Hemisphere>" />
  <class name="std::vector<pat::Conversion>" />
  <class name="std::vector<pat::PackedCandidate>"/>
  <class name="std::vector<pat::IsolatedTrack>"/>
  <class name="std::vector<pat::PackedGenParticle>"/>

  <!-- PAT Object Collection Iterators -->
  <class name="std::vector<pat::Electron>::const_iterator" />
  <class name="std::vector<pat::Muon>::const_iterator" />
  <class name="std::vector<pat::Tau>::const_iterator" />
  <class name="std::vector<pat::Photon>::const_iterator" />
  <class name="std::vector<pat::Jet>::const_iterator" />
  <class name="std::vector<pat::MET>::const_iterator" />
  <class name="std::vector<pat::MHT>::const_iterator" />
  <class name="std::vector<pat::Particle>::const_iterator" />
  <class name="std::vector<pat::CompositeCandidate>::const_iterator" />
  <class name="std::vector<pat::PFParticle>::const_iterator" />
  <class name="std::vector<pat::GenericParticle>::const_iterator" />
  <class name="std::vector<pat::Hemisphere>::const_iterator" />
  <class name="std::vector<pat::Conversion>::const_iterator" />
  <class name="std::vector<pat::PackedCandidate>::const_iterator" />
  <class name="std::vector<pat::PackedGenParticle>::const_iterator" />

  <!-- PAT Object Collection Wrappers -->
  <class name="edm::Wrapper<std::vector<pat::Electron> >" />
  <class name="edm::Wrapper<std::vector<pat::Muon> >" />
  <class name="edm::Wrapper<std::vector<pat::Tau> >" />
  <class name="edm::Wrapper<std::vector<pat::Photon> >" />
  <class name="edm::Wrapper<std::vector<pat::Jet> >" />
  <class name="edm::Wrapper<std::vector<pat::MET> >" />
  <class name="edm::Wrapper<std::vector<pat::MHT> >" />
  <class name="edm::Wrapper<std::vector<pat::Particle> >" />
  <class name="edm::Wrapper<std::vector<pat::CompositeCandidate> >" />
  <class name="edm::Wrapper<std::vector<pat::PFParticle> >" />
  <class name="edm::Wrapper<std::vector<pat::GenericParticle> >" />
  <class name="edm::Wrapper<std::vector<pat::Hemisphere> >" />
  <class name="edm::Wrapper<std::vector<pat::Conversion> >" />
  <class name="edm::Wrapper<std::vector<pat::PackedCandidate> >"/>
  <class name="edm::Wrapper<std::vector<pat::IsolatedTrack> >"/>
  <class name="edm::Wrapper<std::vector<pat::PackedGenParticle> >"/>

  <!-- PAT Object References -->
  <class name="pat::ElectronRef" />
  <class name="pat::MuonRef" />
  <class name="pat::TauRef" />
  <class name="pat::PhotonRef" />
  <class name="pat::JetRef" />
  <class name="pat::METRef" />
<!-- no ref needed for pat::MHT as it is filled from PAT objects -->
  <class name="pat::ParticleRef" />
  <class name="pat::CompositeCandidateRef" />
  <class name="pat::PFParticleRef" />
  <class name="pat::GenericParticleRef" />
  <class name="pat::HemisphereRef" />
  <class name="pat::ConversionRef" />
  <class name="pat::PackedCandidateRef" />
  <class name="pat::PackedGenParticleRef" />

  <!-- PAT Object Ref Vectors -->
  <class name="pat::ElectronRefVector" />
  <class name="pat::MuonRefVector" />
  <class name="pat::TauRefVector" />
  <class name="pat::PhotonRefVector" />
  <class name="pat::JetRefVector" />
  <class name="pat::METRefVector" />
  <class name="pat::ParticleRefVector" />
  <class name="pat::CompositeCandidateRefVector" />
  <class name="pat::PFParticleRefVector" />
  <class name="pat::GenericParticleRefVector" />
  <class name="pat::HemisphereRefVector" />
  <class name="pat::ConversionRefVector" />
  <class name="pat::PackedCandidateRefVector" />
  <class name="pat::PackedGenParticleRefVector" />

  <!-- PAT Object Ref Vector Wrappers -->
  <class name="edm::Wrapper<pat::ElectronRefVector>" />
  <class name="edm::Wrapper<pat::MuonRefVector>" />
  <class name="edm::Wrapper<pat::TauRefVector>" />
  <class name="edm::Wrapper<pat::PhotonRefVector>" />
  <class name="edm::Wrapper<pat::JetRefVector>" />
  <class name="edm::Wrapper<pat::METRefVector>" />
  <class name="edm::Wrapper<pat::ParticleRefVector>" />
  <class name="edm::Wrapper<pat::CompositeCandidateRefVector>" />
  <class name="edm::Wrapper<pat::PFParticleRefVector>" />
  <class name="edm::Wrapper<pat::GenericParticleRefVector>" />
  <class name="edm::Wrapper<pat::HemisphereRefVector>" />
  <class name="edm::Wrapper<pat::ConversionRefVector>" />

  <!-- RefToBase<Candidate> from PATObjects -->
    <!-- With direct Holder -->
  <class name="edm::reftobase::Holder<reco::Candidate, pat::ElectronRef>" />
  <class name="edm::reftobase::Holder<reco::Candidate, pat::MuonRef>" />
  <class name="edm::reftobase::Holder<reco::Candidate, pat::TauRef>" />
  <class name="edm::reftobase::Holder<reco::Candidate, pat::PhotonRef>" />
  <class name="edm::reftobase::Holder<reco::Candidate, pat::JetRef>" />
  <class name="edm::reftobase::Holder<reco::Candidate, pat::METRef>" />
<!-- no reftobase needed for pat::MHT as it is filled from PAT objects -->
  <class name="edm::reftobase::Holder<reco::Candidate, pat::ParticleRef>" />
  <class name="edm::reftobase::Holder<reco::Candidate, pat::CompositeCandidateRef>" />
  <class name="edm::reftobase::Holder<reco::Candidate, pat::PFParticleRef>" />
  <class name="edm::reftobase::Holder<reco::Candidate, pat::GenericParticleRef>" />
    <!-- With indirect holder (RefHolder) -->
  <class name="edm::reftobase::RefHolder<pat::ElectronRef>" />
  <class name="edm::reftobase::RefHolder<pat::MuonRef>" />
  <class name="edm::reftobase::RefHolder<pat::TauRef>" />
  <class name="edm::reftobase::RefHolder<pat::PhotonRef>" />
  <class name="edm::reftobase::RefHolder<pat::JetRef>" />
  <class name="edm::reftobase::RefHolder<pat::METRef>" />
<!-- no reftobase needed for pat::MHT as it is filled from PAT objects -->
  <class name="edm::reftobase::RefHolder<pat::ParticleRef>" />
  <class name="edm::reftobase::RefHolder<pat::CompositeCandidateRef>" />
  <class name="edm::reftobase::RefHolder<pat::PFParticleRef>" />
  <class name="edm::reftobase::RefHolder<pat::GenericParticleRef>" />


 <!-- RefToBaseVector<Candidate> from PATObjetcs  -->
  <class name="edm::reftobase::RefVectorHolder<pat::CompositeCandidateRefVector>" />
  <class name="edm::reftobase::VectorHolder<reco::Candidate, pat::CompositeCandidateRefVector>" />

  <class name="edm::RefProd<pat::PackedCandidateCollection>" />
  <class name="edm::Association<pat::PackedCandidateCollection>" />
  <class name="edm::Wrapper<edm::Association<pat::PackedCandidateCollection> >" />

  <class name="edm::RefProd<std::vector<pat::PackedGenParticle> >" />
  <class name="edm::Association<std::vector<pat::PackedGenParticle> >" />
  <class name="edm::Wrapper<edm::Association<std::vector<pat::PackedGenParticle> > >"/>

  <!--- vectors of Ptrs -->
  <class name="std::vector<edm::Ptr<pat::Jet> >" />
  <class name="std::vector< std::vector<edm::Ptr<pat::Jet> > >" />
  <class name="edm::Wrapper< std::vector<edm::Ptr<pat::Jet> > >" />
  <class name="edm::Wrapper< std::vector< std::vector<edm::Ptr<pat::Jet> > > >" />

  <class name="pat::PATTauDiscriminatorBase">
    <field name="transientVector_" transient="true"/>
  </class>  
  <class name="pat::PATTauDiscriminator"  ClassVersion="3">
   <version ClassVersion="3" checksum="2916098408"/>  
  </class>  
  <class name="pat::PATTauDiscriminatorRef"/>
  <class name="pat::PATTauDiscriminatorRefProd"/>
  <class name="pat::PATTauDiscriminatorRefVector"/>
  <class name="edm::Wrapper<pat::PATTauDiscriminator>"/>

  <class name="std::pair<pat::TauRef, float>"/>
  <class name="std::vector<std::pair<pat::TauRef, float> >" />
  <class name="edm::RefProd<std::vector<pat::Tau> >"/>

  </selection>
 <exclusion>
 </exclusion>
</lcgdict>

