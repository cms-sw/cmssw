
process PRODMIX  = {

include "SimGeneral/DataMixingModule/data/mixOne.cfi"
  
   service = RandomNumberGeneratorService
     {
      PSet moduleSeeds = {
         untracked uint32 mix = 12345
      }
    }

    service = Tracer { untracked string indention = "$$"}

    source = PoolSource { 
	untracked vstring fileNames = {'file:/afs/cern.ch/user/m/mikeh/cms/CMSSW_2_0_X_2008-01-31-1600/src/Configuration/Examples/data/PhysVal-DiElectron-Ene30.root'}
#       untracked vstring fileNames = {'rfio:/castor/cern.ch/user/b/beaudett/TauEvents-Pythia-CMSSW150.root'}
#       untracked vstring fileNames = {'rfio:/castor/cern.ch/cms//store/RelVal/2007/7/11/RelVal-RelVal160pre4SingleEPt35-1184176348/0000/5EF3794C-7530-DC11-833F-000423D6C8EE.root' }
#	 {'rfio:/castor/cern.ch/cms/store/mc/2007/9/11/RelVal-RelValSingleElectronPt35-1189521644/0000/4299AD63-5661-DC11-800C-001731AF6867.root'}
    }
    untracked PSet maxEvents = {untracked int32 input = 3}
	
	include "Configuration/EventContent/data/EventContent.cff"
    	module FEVT = PoolOutputModule {	
#		using FEVTSIMDIGIEventContent
	        untracked string fileName = 'file:MixTest.root'
               untracked vstring outputCommands = {"keep *"}
	}

    module dump = EventContentAnalyzer {}	
    
    path p = { mix & dump }
        
    endpath outpath = { FEVT }

    service = MessageLogger {
         untracked vstring debugModules = {   "mix"   }
         untracked vstring categories    =    { "DataMixingModule"}

         untracked vstring destinations =  {    "cout"  }
         untracked PSet cout   =  {
                 untracked string threshold = "DEBUG"
                 untracked PSet DEBUG ={untracked int32 limit = 0}
                 untracked PSet MixingModule ={untracked int32 limit = 1000000000000}
         }
      }
#      replace mix.Label="fastSimProducer"
#      replace mix.input.nbPileupEvents = {double averageNumber=1}
#      replace mix.input.type = "fixed"

	schedule = {p, outpath}

}


