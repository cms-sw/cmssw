// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DQMServices/Core/src/ROOTFilePB.proto

#include "DQMServices/Core/interface/ROOTFilePB.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace dqmstorepb {
  constexpr ROOTFilePB_Histo::ROOTFilePB_Histo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
      : full_pathname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string),
        streamed_histo_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string),
        size_(0u),
        flags_(0u) {}
  struct ROOTFilePB_HistoDefaultTypeInternal {
    constexpr ROOTFilePB_HistoDefaultTypeInternal()
        : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
    ~ROOTFilePB_HistoDefaultTypeInternal() {}
    union {
      ROOTFilePB_Histo _instance;
    };
  };
  PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ROOTFilePB_HistoDefaultTypeInternal
      _ROOTFilePB_Histo_default_instance_;
  constexpr ROOTFilePB::ROOTFilePB(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized) : histo_() {}
  struct ROOTFilePBDefaultTypeInternal {
    constexpr ROOTFilePBDefaultTypeInternal() : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
    ~ROOTFilePBDefaultTypeInternal() {}
    union {
      ROOTFilePB _instance;
    };
  };
  PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ROOTFilePBDefaultTypeInternal _ROOTFilePB_default_instance_;
}  // namespace dqmstorepb
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const**
    file_level_enum_descriptors_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const**
    file_level_service_descriptors_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32
    TableStruct_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::dqmstorepb::ROOTFilePB_Histo, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::dqmstorepb::ROOTFilePB_Histo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        PROTOBUF_FIELD_OFFSET(::dqmstorepb::ROOTFilePB_Histo, full_pathname_),
        PROTOBUF_FIELD_OFFSET(::dqmstorepb::ROOTFilePB_Histo, size_),
        PROTOBUF_FIELD_OFFSET(::dqmstorepb::ROOTFilePB_Histo, streamed_histo_),
        PROTOBUF_FIELD_OFFSET(::dqmstorepb::ROOTFilePB_Histo, flags_),
        0,
        2,
        1,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dqmstorepb::ROOTFilePB, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        PROTOBUF_FIELD_OFFSET(::dqmstorepb::ROOTFilePB, histo_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    {0, 9, sizeof(::dqmstorepb::ROOTFilePB_Histo)},
    {13, -1, sizeof(::dqmstorepb::ROOTFilePB)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dqmstorepb::_ROOTFilePB_Histo_default_instance_),
    reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dqmstorepb::_ROOTFilePB_default_instance_),
};

const char descriptor_table_protodef_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) =
    "\n%DQMServices/Core/src/ROOTFilePB.proto\022"
    "\ndqmstorepb\"\216\001\n\nROOTFilePB\022+\n\005histo\030\001 \003("
    "\0132\034.dqmstorepb.ROOTFilePB.Histo\032S\n\005Histo"
    "\022\025\n\rfull_pathname\030\001 \002(\t\022\014\n\004size\030\002 \002(\r\022\026\n"
    "\016streamed_histo\030\003 \002(\014\022\r\n\005flags\030\004 \002(\r";
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto = {
        false,
        false,
        196,
        descriptor_table_protodef_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto,
        "DQMServices/Core/src/ROOTFilePB.proto",
        &descriptor_table_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto_once,
        nullptr,
        0,
        2,
        schemas,
        file_default_instances,
        TableStruct_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto::offsets,
        file_level_metadata_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto,
        file_level_enum_descriptors_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto,
        file_level_service_descriptors_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto);
  return descriptor_table_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner
    dynamic_init_dummy_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto(
        &descriptor_table_DQMServices_2fCore_2fsrc_2fROOTFilePB_2eproto);
namespace dqmstorepb {

  // ===================================================================

  class ROOTFilePB_Histo::_Internal {
  public:
    using HasBits = decltype(std::declval<ROOTFilePB_Histo>()._has_bits_);
    static void set_has_full_pathname(HasBits* has_bits) { (*has_bits)[0] |= 1u; }
    static void set_has_size(HasBits* has_bits) { (*has_bits)[0] |= 4u; }
    static void set_has_streamed_histo(HasBits* has_bits) { (*has_bits)[0] |= 2u; }
    static void set_has_flags(HasBits* has_bits) { (*has_bits)[0] |= 8u; }
    static bool MissingRequiredFields(const HasBits& has_bits) {
      return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
    }
  };

  ROOTFilePB_Histo::ROOTFilePB_Histo(::PROTOBUF_NAMESPACE_ID::Arena* arena) : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
    SharedCtor();
    RegisterArenaDtor(arena);
    // @@protoc_insertion_point(arena_constructor:dqmstorepb.ROOTFilePB.Histo)
  }
  ROOTFilePB_Histo::ROOTFilePB_Histo(const ROOTFilePB_Histo& from)
      : ::PROTOBUF_NAMESPACE_ID::Message(), _has_bits_(from._has_bits_) {
    _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    full_pathname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    if (from._internal_has_full_pathname()) {
      full_pathname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
                         from._internal_full_pathname(),
                         GetArena());
    }
    streamed_histo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    if (from._internal_has_streamed_histo()) {
      streamed_histo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
                          from._internal_streamed_histo(),
                          GetArena());
    }
    ::memcpy(&size_,
             &from.size_,
             static_cast<size_t>(reinterpret_cast<char*>(&flags_) - reinterpret_cast<char*>(&size_)) + sizeof(flags_));
    // @@protoc_insertion_point(copy_constructor:dqmstorepb.ROOTFilePB.Histo)
  }

  void ROOTFilePB_Histo::SharedCtor() {
    full_pathname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    streamed_histo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    ::memset(reinterpret_cast<char*>(this) +
                 static_cast<size_t>(reinterpret_cast<char*>(&size_) - reinterpret_cast<char*>(this)),
             0,
             static_cast<size_t>(reinterpret_cast<char*>(&flags_) - reinterpret_cast<char*>(&size_)) + sizeof(flags_));
  }

  ROOTFilePB_Histo::~ROOTFilePB_Histo() {
    // @@protoc_insertion_point(destructor:dqmstorepb.ROOTFilePB.Histo)
    SharedDtor();
    _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  void ROOTFilePB_Histo::SharedDtor() {
    GOOGLE_DCHECK(GetArena() == nullptr);
    full_pathname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    streamed_histo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }

  void ROOTFilePB_Histo::ArenaDtor(void* object) {
    ROOTFilePB_Histo* _this = reinterpret_cast<ROOTFilePB_Histo*>(object);
    (void)_this;
  }
  void ROOTFilePB_Histo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {}
  void ROOTFilePB_Histo::SetCachedSize(int size) const { _cached_size_.Set(size); }

  void ROOTFilePB_Histo::Clear() {
    // @@protoc_insertion_point(message_clear_start:dqmstorepb.ROOTFilePB.Histo)
    ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    cached_has_bits = _has_bits_[0];
    if (cached_has_bits & 0x00000003u) {
      if (cached_has_bits & 0x00000001u) {
        full_pathname_.ClearNonDefaultToEmpty();
      }
      if (cached_has_bits & 0x00000002u) {
        streamed_histo_.ClearNonDefaultToEmpty();
      }
    }
    if (cached_has_bits & 0x0000000cu) {
      ::memset(
          &size_,
          0,
          static_cast<size_t>(reinterpret_cast<char*>(&flags_) - reinterpret_cast<char*>(&size_)) + sizeof(flags_));
    }
    _has_bits_.Clear();
    _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  const char* ROOTFilePB_Histo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x)                     \
  if (PROTOBUF_PREDICT_FALSE(!(x))) \
  goto failure
    _Internal::HasBits has_bits{};
    while (!ctx->Done(&ptr)) {
      ::PROTOBUF_NAMESPACE_ID::uint32 tag;
      ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
      CHK_(ptr);
      switch (tag >> 3) {
        // required string full_pathname = 1;
        case 1:
          if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
            auto str = _internal_mutable_full_pathname();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
#ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dqmstorepb.ROOTFilePB.Histo.full_pathname");
#endif  // !NDEBUG
            CHK_(ptr);
          } else
            goto handle_unusual;
          continue;
        // required uint32 size = 2;
        case 2:
          if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
            _Internal::set_has_size(&has_bits);
            size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
            CHK_(ptr);
          } else
            goto handle_unusual;
          continue;
        // required bytes streamed_histo = 3;
        case 3:
          if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
            auto str = _internal_mutable_streamed_histo();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
          } else
            goto handle_unusual;
          continue;
        // required uint32 flags = 4;
        case 4:
          if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
            _Internal::set_has_flags(&has_bits);
            flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
            CHK_(ptr);
          } else
            goto handle_unusual;
          continue;
        default: {
        handle_unusual:
          if ((tag & 7) == 4 || tag == 0) {
            ctx->SetLastTag(tag);
            goto success;
          }
          ptr = UnknownFieldParse(
              tag, _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(), ptr, ctx);
          CHK_(ptr != nullptr);
          continue;
        }
      }  // switch
    }    // while
  success:
    _has_bits_.Or(has_bits);
    return ptr;
  failure:
    ptr = nullptr;
    goto success;
#undef CHK_
  }

  ::PROTOBUF_NAMESPACE_ID::uint8* ROOTFilePB_Histo::_InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
    // @@protoc_insertion_point(serialize_to_array_start:dqmstorepb.ROOTFilePB.Histo)
    ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = _has_bits_[0];
    // required string full_pathname = 1;
    if (cached_has_bits & 0x00000001u) {
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
          this->_internal_full_pathname().data(),
          static_cast<int>(this->_internal_full_pathname().length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
          "dqmstorepb.ROOTFilePB.Histo.full_pathname");
      target = stream->WriteStringMaybeAliased(1, this->_internal_full_pathname(), target);
    }

    // required uint32 size = 2;
    if (cached_has_bits & 0x00000004u) {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_size(), target);
    }

    // required bytes streamed_histo = 3;
    if (cached_has_bits & 0x00000002u) {
      target = stream->WriteBytesMaybeAliased(3, this->_internal_streamed_histo(), target);
    }

    // required uint32 flags = 4;
    if (cached_has_bits & 0x00000008u) {
      target = stream->EnsureSpace(target);
      target =
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_flags(), target);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
          _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
              ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance),
          target,
          stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:dqmstorepb.ROOTFilePB.Histo)
    return target;
  }

  size_t ROOTFilePB_Histo::RequiredFieldsByteSizeFallback() const {
    // @@protoc_insertion_point(required_fields_byte_size_fallback_start:dqmstorepb.ROOTFilePB.Histo)
    size_t total_size = 0;

    if (_internal_has_full_pathname()) {
      // required string full_pathname = 1;
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(this->_internal_full_pathname());
    }

    if (_internal_has_streamed_histo()) {
      // required bytes streamed_histo = 3;
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(this->_internal_streamed_histo());
    }

    if (_internal_has_size()) {
      // required uint32 size = 2;
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(this->_internal_size());
    }

    if (_internal_has_flags()) {
      // required uint32 flags = 4;
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(this->_internal_flags());
    }

    return total_size;
  }
  size_t ROOTFilePB_Histo::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:dqmstorepb.ROOTFilePB.Histo)
    size_t total_size = 0;

    if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
      // required string full_pathname = 1;
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(this->_internal_full_pathname());

      // required bytes streamed_histo = 3;
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(this->_internal_streamed_histo());

      // required uint32 size = 2;
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(this->_internal_size());

      // required uint32 flags = 4;
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(this->_internal_flags());

    } else {
      total_size += RequiredFieldsByteSizeFallback();
    }
    ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
      return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
          _internal_metadata_, total_size, &_cached_size_);
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
    SetCachedSize(cached_size);
    return total_size;
  }

  void ROOTFilePB_Histo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:dqmstorepb.ROOTFilePB.Histo)
    GOOGLE_DCHECK_NE(&from, this);
    const ROOTFilePB_Histo* source = ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROOTFilePB_Histo>(&from);
    if (source == nullptr) {
      // @@protoc_insertion_point(generalized_merge_from_cast_fail:dqmstorepb.ROOTFilePB.Histo)
      ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
    } else {
      // @@protoc_insertion_point(generalized_merge_from_cast_success:dqmstorepb.ROOTFilePB.Histo)
      MergeFrom(*source);
    }
  }

  void ROOTFilePB_Histo::MergeFrom(const ROOTFilePB_Histo& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:dqmstorepb.ROOTFilePB.Histo)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = from._has_bits_[0];
    if (cached_has_bits & 0x0000000fu) {
      if (cached_has_bits & 0x00000001u) {
        _internal_set_full_pathname(from._internal_full_pathname());
      }
      if (cached_has_bits & 0x00000002u) {
        _internal_set_streamed_histo(from._internal_streamed_histo());
      }
      if (cached_has_bits & 0x00000004u) {
        size_ = from.size_;
      }
      if (cached_has_bits & 0x00000008u) {
        flags_ = from.flags_;
      }
      _has_bits_[0] |= cached_has_bits;
    }
  }

  void ROOTFilePB_Histo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:dqmstorepb.ROOTFilePB.Histo)
    if (&from == this)
      return;
    Clear();
    MergeFrom(from);
  }

  void ROOTFilePB_Histo::CopyFrom(const ROOTFilePB_Histo& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:dqmstorepb.ROOTFilePB.Histo)
    if (&from == this)
      return;
    Clear();
    MergeFrom(from);
  }

  bool ROOTFilePB_Histo::IsInitialized() const {
    if (_Internal::MissingRequiredFields(_has_bits_))
      return false;
    return true;
  }

  void ROOTFilePB_Histo::InternalSwap(ROOTFilePB_Histo* other) {
    using std::swap;
    _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
    swap(_has_bits_[0], other->_has_bits_[0]);
    full_pathname_.Swap(
        &other->full_pathname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
    streamed_histo_.Swap(
        &other->streamed_histo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
    ::PROTOBUF_NAMESPACE_ID::internal::memswap<PROTOBUF_FIELD_OFFSET(ROOTFilePB_Histo, flags_) +
                                               sizeof(ROOTFilePB_Histo::flags_) -
                                               PROTOBUF_FIELD_OFFSET(ROOTFilePB_Histo, size_)>(
        reinterpret_cast<char*>(&size_), reinterpret_cast<char*>(&other->size_));
  }

  ::PROTOBUF_NAMESPACE_ID::Metadata ROOTFilePB_Histo::GetMetadata() const { return GetMetadataStatic(); }

  // ===================================================================

  class ROOTFilePB::_Internal {
  public:
  };

  ROOTFilePB::ROOTFilePB(::PROTOBUF_NAMESPACE_ID::Arena* arena)
      : ::PROTOBUF_NAMESPACE_ID::Message(arena), histo_(arena) {
    SharedCtor();
    RegisterArenaDtor(arena);
    // @@protoc_insertion_point(arena_constructor:dqmstorepb.ROOTFilePB)
  }
  ROOTFilePB::ROOTFilePB(const ROOTFilePB& from) : ::PROTOBUF_NAMESPACE_ID::Message(), histo_(from.histo_) {
    _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    // @@protoc_insertion_point(copy_constructor:dqmstorepb.ROOTFilePB)
  }

  void ROOTFilePB::SharedCtor() {}

  ROOTFilePB::~ROOTFilePB() {
    // @@protoc_insertion_point(destructor:dqmstorepb.ROOTFilePB)
    SharedDtor();
    _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  void ROOTFilePB::SharedDtor() { GOOGLE_DCHECK(GetArena() == nullptr); }

  void ROOTFilePB::ArenaDtor(void* object) {
    ROOTFilePB* _this = reinterpret_cast<ROOTFilePB*>(object);
    (void)_this;
  }
  void ROOTFilePB::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {}
  void ROOTFilePB::SetCachedSize(int size) const { _cached_size_.Set(size); }

  void ROOTFilePB::Clear() {
    // @@protoc_insertion_point(message_clear_start:dqmstorepb.ROOTFilePB)
    ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    histo_.Clear();
    _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  const char* ROOTFilePB::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x)                     \
  if (PROTOBUF_PREDICT_FALSE(!(x))) \
  goto failure
    while (!ctx->Done(&ptr)) {
      ::PROTOBUF_NAMESPACE_ID::uint32 tag;
      ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
      CHK_(ptr);
      switch (tag >> 3) {
        // repeated .dqmstorepb.ROOTFilePB.Histo histo = 1;
        case 1:
          if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
            ptr -= 1;
            do {
              ptr += 1;
              ptr = ctx->ParseMessage(_internal_add_histo(), ptr);
              CHK_(ptr);
              if (!ctx->DataAvailable(ptr))
                break;
            } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
          } else
            goto handle_unusual;
          continue;
        default: {
        handle_unusual:
          if ((tag & 7) == 4 || tag == 0) {
            ctx->SetLastTag(tag);
            goto success;
          }
          ptr = UnknownFieldParse(
              tag, _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(), ptr, ctx);
          CHK_(ptr != nullptr);
          continue;
        }
      }  // switch
    }    // while
  success:
    return ptr;
  failure:
    ptr = nullptr;
    goto success;
#undef CHK_
  }

  ::PROTOBUF_NAMESPACE_ID::uint8* ROOTFilePB::_InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
    // @@protoc_insertion_point(serialize_to_array_start:dqmstorepb.ROOTFilePB)
    ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated .dqmstorepb.ROOTFilePB.Histo histo = 1;
    for (unsigned int i = 0, n = static_cast<unsigned int>(this->_internal_histo_size()); i < n; i++) {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessage(
          1, this->_internal_histo(i), target, stream);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
          _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
              ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance),
          target,
          stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:dqmstorepb.ROOTFilePB)
    return target;
  }

  size_t ROOTFilePB::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:dqmstorepb.ROOTFilePB)
    size_t total_size = 0;

    ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    // repeated .dqmstorepb.ROOTFilePB.Histo histo = 1;
    total_size += 1UL * this->_internal_histo_size();
    for (const auto& msg : this->histo_) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
      return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
          _internal_metadata_, total_size, &_cached_size_);
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
    SetCachedSize(cached_size);
    return total_size;
  }

  void ROOTFilePB::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:dqmstorepb.ROOTFilePB)
    GOOGLE_DCHECK_NE(&from, this);
    const ROOTFilePB* source = ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROOTFilePB>(&from);
    if (source == nullptr) {
      // @@protoc_insertion_point(generalized_merge_from_cast_fail:dqmstorepb.ROOTFilePB)
      ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
    } else {
      // @@protoc_insertion_point(generalized_merge_from_cast_success:dqmstorepb.ROOTFilePB)
      MergeFrom(*source);
    }
  }

  void ROOTFilePB::MergeFrom(const ROOTFilePB& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:dqmstorepb.ROOTFilePB)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    histo_.MergeFrom(from.histo_);
  }

  void ROOTFilePB::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:dqmstorepb.ROOTFilePB)
    if (&from == this)
      return;
    Clear();
    MergeFrom(from);
  }

  void ROOTFilePB::CopyFrom(const ROOTFilePB& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:dqmstorepb.ROOTFilePB)
    if (&from == this)
      return;
    Clear();
    MergeFrom(from);
  }

  bool ROOTFilePB::IsInitialized() const {
    if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(histo_))
      return false;
    return true;
  }

  void ROOTFilePB::InternalSwap(ROOTFilePB* other) {
    using std::swap;
    _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
    histo_.InternalSwap(&other->histo_);
  }

  ::PROTOBUF_NAMESPACE_ID::Metadata ROOTFilePB::GetMetadata() const { return GetMetadataStatic(); }

  // @@protoc_insertion_point(namespace_scope)
}  // namespace dqmstorepb
PROTOBUF_NAMESPACE_OPEN
template <>
PROTOBUF_NOINLINE ::dqmstorepb::ROOTFilePB_Histo* Arena::CreateMaybeMessage<::dqmstorepb::ROOTFilePB_Histo>(
    Arena* arena) {
  return Arena::CreateMessageInternal<::dqmstorepb::ROOTFilePB_Histo>(arena);
}
template <>
PROTOBUF_NOINLINE ::dqmstorepb::ROOTFilePB* Arena::CreateMaybeMessage<::dqmstorepb::ROOTFilePB>(Arena* arena) {
  return Arena::CreateMessageInternal<::dqmstorepb::ROOTFilePB>(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
