// -*- c++ -*-
#ifndef _MISCALIB_READER_FROM_XML_DOM_UTILS_ICC
#define _MISCALIB_READER_FROM_XML_DOM_UTILS_ICC

//----------------------------------------------------------------------

inline std::string MiscalibReaderFromXMLDomUtils::toString(const XMLCh *str) {
  char *name = XERCES_CPP_NAMESPACE::XMLString::transcode(str);
  std::string retval(name);
  delete[] name;
  return retval;
}

//----------------------------------------------------------------------

inline int MiscalibReaderFromXMLDomUtils::getIntAttribute(XERCES_CPP_NAMESPACE::DOMNamedNodeMap *attributes,
                                                          std::string attr_name,
                                                          bool &well_formed_string) {
  XMLCh *buffer = XERCES_CPP_NAMESPACE::XMLString::transcode(attr_name.c_str());

  // we could also use XMLString::parseInt(...) here..
  char *endptr = nullptr;
  int retval = strtol(toString(attributes->getNamedItem(buffer)->getNodeValue()).c_str(), &endptr, 0);
  if (*endptr != '\0')
    well_formed_string = false;
  else
    well_formed_string = true;

  delete[] buffer;
  // std::cout << "retval=" << retval << std::endl;
  return retval;
}

//----------------------------------------------------------------------

inline double MiscalibReaderFromXMLDomUtils::getFloatAttribute(XERCES_CPP_NAMESPACE::DOMNamedNodeMap *attributes,
                                                               std::string attr_name,
                                                               bool &well_formed_string) {
  XMLCh *buffer = XERCES_CPP_NAMESPACE::XMLString::transcode(attr_name.c_str());

  char *endptr = nullptr;
  double retval = strtod(toString(attributes->getNamedItem(buffer)->getNodeValue()).c_str(), &endptr);
  if (*endptr != '\0')
    well_formed_string = false;
  else
    well_formed_string = true;

  delete[] buffer;
  // std::cout << "retval=" << retval << std::endl;
  return retval;

  return retval;
}

//----------------------------------------------------------------------

inline std::string MiscalibReaderFromXMLDomUtils::getStringAttribute(XERCES_CPP_NAMESPACE::DOMNamedNodeMap *attributes,
                                                                     std::string attr_name) {
  XMLCh *buffer = XERCES_CPP_NAMESPACE::XMLString::transcode(attr_name.c_str());
  std::string retval = toString(attributes->getNamedItem(buffer)->getNodeValue());

  delete[] buffer;
  // std::cout << "retval=" << retval << std::endl;
  return retval;
}

//----------------------------------------------------------------------

inline bool MiscalibReaderFromXMLDomUtils::hasAttribute(XERCES_CPP_NAMESPACE::DOMNamedNodeMap *attributes,
                                                        std::string attr_name) {
  bool retval;
  XMLCh *buffer = XERCES_CPP_NAMESPACE::XMLString::transcode(attr_name.c_str());
  retval = attributes->getNamedItem(buffer) != nullptr;
  delete[] buffer;

  return retval;
}

//----------------------------------------------------------------------

#endif
