#ifdef MPLEX_INTRINSICS

for (int n = 0; n < N; n += MPLEX_INTRINSICS_WIDTH_BYTES / sizeof(T)) {
  IntrVec_t a_0 = LD(a, 0);
  IntrVec_t b_0 = LD(b, 0);
  IntrVec_t c_0 = MUL(a_0, b_0);
  IntrVec_t b_1 = LD(b, 1);
  IntrVec_t c_1 = MUL(a_0, b_1);

  IntrVec_t a_1 = LD(a, 1);
  c_0 = FMA(a_1, b_1, c_0);
  IntrVec_t b_2 = LD(b, 2);
  c_1 = FMA(a_1, b_2, c_1);

  IntrVec_t c_2 = MUL(a_1, b_0);
  IntrVec_t c_3 = MUL(a_1, b_1);
  ST(c, 0, c_0);

  IntrVec_t a_2 = LD(a, 2);
  c_2 = FMA(a_2, b_1, c_2);
  ST(c, 1, c_1);
  c_3 = FMA(a_2, b_2, c_3);

  IntrVec_t a_3 = LD(a, 3);
  IntrVec_t c_4 = MUL(a_3, b_0);
  ST(c, 2, c_2);
  IntrVec_t c_5 = MUL(a_3, b_1);
  ST(c, 3, c_3);

  IntrVec_t a_4 = LD(a, 4);
  c_4 = FMA(a_4, b_1, c_4);
  c_5 = FMA(a_4, b_2, c_5);

  IntrVec_t a_6 = LD(a, 6);
  IntrVec_t c_6 = MUL(a_6, b_0);
  IntrVec_t c_7 = MUL(a_6, b_1);
  ST(c, 4, c_4);
  ST(c, 5, c_5);

  IntrVec_t a_7 = LD(a, 7);
  c_6 = FMA(a_7, b_1, c_6);
  c_7 = FMA(a_7, b_2, c_7);

  IntrVec_t a_10 = LD(a, 10);
  IntrVec_t c_8 = MUL(a_10, b_0);
  IntrVec_t c_9 = MUL(a_10, b_1);
  ST(c, 6, c_6);
  ST(c, 7, c_7);

  IntrVec_t a_11 = LD(a, 11);
  c_8 = FMA(a_11, b_1, c_8);
  c_9 = FMA(a_11, b_2, c_9);

  IntrVec_t a_15 = LD(a, 15);
  IntrVec_t c_10 = MUL(a_15, b_0);
  IntrVec_t c_11 = MUL(a_15, b_1);
  ST(c, 8, c_8);
  ST(c, 9, c_9);

  IntrVec_t a_16 = LD(a, 16);
  c_10 = FMA(a_16, b_1, c_10);
  c_11 = FMA(a_16, b_2, c_11);

  ST(c, 10, c_10);
  ST(c, 11, c_11);
}

#else

#pragma omp simd
for (int n = 0; n < N; ++n) {
  c[0 * N + n] = a[0 * N + n] * b[0 * N + n] + a[1 * N + n] * b[1 * N + n];
  c[1 * N + n] = a[0 * N + n] * b[1 * N + n] + a[1 * N + n] * b[2 * N + n];
  c[2 * N + n] = a[1 * N + n] * b[0 * N + n] + a[2 * N + n] * b[1 * N + n];
  c[3 * N + n] = a[1 * N + n] * b[1 * N + n] + a[2 * N + n] * b[2 * N + n];
  c[4 * N + n] = a[3 * N + n] * b[0 * N + n] + a[4 * N + n] * b[1 * N + n];
  c[5 * N + n] = a[3 * N + n] * b[1 * N + n] + a[4 * N + n] * b[2 * N + n];
  c[6 * N + n] = a[6 * N + n] * b[0 * N + n] + a[7 * N + n] * b[1 * N + n];
  c[7 * N + n] = a[6 * N + n] * b[1 * N + n] + a[7 * N + n] * b[2 * N + n];
  c[8 * N + n] = a[10 * N + n] * b[0 * N + n] + a[11 * N + n] * b[1 * N + n];
  c[9 * N + n] = a[10 * N + n] * b[1 * N + n] + a[11 * N + n] * b[2 * N + n];
  c[10 * N + n] = a[15 * N + n] * b[0 * N + n] + a[16 * N + n] * b[1 * N + n];
  c[11 * N + n] = a[15 * N + n] * b[1 * N + n] + a[16 * N + n] * b[2 * N + n];
}
#endif
