[CRAB]

jobtype = cmssw
scheduler = CAF
### NOTE: just setting the server_name (server_pi, server_lnl etc etc ) 
###       crab will submit the jobs to the server...   
server_name = caf

[CMSSW]


dbs_url = http://cmsdbsprod.cern.ch/cms_dbs_caf_analysis_01/servlet/DBSServlet

no_block_boundary = 1
### The data you want to access (to be found on DBS) 
#datasetpath=/GlobalCruzet1-A/Online-CMSSW_2_0_4/RAW
#datasetpath=/StreamExpress/CRAFT09-MuAlCalIsolatedMu-v1/ALCARECO 
#runselection=112341
datasetpath=DATASETPATHTEMPLATE
runselection=RUNNUMBERTEMPLATE

### The ParameterSet you want to use
pset= DTNoiseAnalyzer_cfg.py

### Splitting parameters

total_number_of_events=100000
number_of_jobs = 1

### The output files (comma separated list)
output_file = noise.db,DTNoiseCalib.root

[USER]

### OUTPUT files Management
##  output back into UI 
return_data = 1

### OUTPUT files INTO A SE
copy_data = 0
storage_element = srm.cern.ch
storage_path = /castor/cern.ch/user/u/user

#if server mode = 1 
#eMail = your@Email.address 
eMail = EMAILTEMPLATE

[GRID]

## RB/WMS management:
rb = CNAF

##  Black and White Lists management:
## By Storage
#se_black_list = 
#se_white_list = 

## By ComputingElement 
#ce_black_list = 
#ce_white_list = 
ce_white_list =CERN 
#[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

#[CAF]
#queue = cmsexpress
