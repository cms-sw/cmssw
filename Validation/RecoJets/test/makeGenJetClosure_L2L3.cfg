$ -- configBlockIO -- $
$=====================================================================
$
$ input/output files
$
$=====================================================================

  histInput    = genJetClosure.hist                                   $ hist file, which contains the names of the 
                                                                      $ histograms to be plottet 
  rootInput    = genJetClosure_L2L3.root                              $ root input file(s) corresponding to samples
                                                                      $ (separated by blanks);
                                                                      $
  inputDirs    = noCalib                                              $ directory in which the histograms are kept
                 jetMetL2                                             $ in within the root file; for edm::Analyzers 
                 jetMetL3                                             $ this  corresponds to the module name of the 
                                                                      $ Analyzer in the cfg file (separated by blanks)
  histFilter   = cal                                                  $ list of filter strings; only histograms con-
                 res                                                  $ taining this stings as substrings are plotted
                 fit                                                  $ (separated by blanks)
                                                                      $
  plotFilter   = cal                                                  $ list of filter strings; only histograms con-
                 res                                                  $ taining this stings as substrings are plotted
                                                                      $ (separated by blanks)
                                                                      $
  filterOption = begins                                               $ histogram filter option ('begins', 'ends' & 
                                                                      $ 'contains' are supported
  rootOutput   =                                                      $ root output file to write histograms to
                                                                      $
  outputDir    =                                                      $ output directory in root output file 
                                                                      $
  outputLabels = noCalib                                              $ output labels for multiple ps/eps files 
                 jetMetL2                                             $ (separated by blanks)
                 jetMetL3                                             $
                                                                      $
  writePlotsTo = .                                                    $ directory to save the plottet histograms to;
                                                                      $ '.' is the working directory
  writePlotsAs = eps                                                  $ decide wether to write histograms to [ps] or 
                                                                      $ [eps] 

$ -- configBlockHist -- $
$=====================================================================
$
$ canvas and histogram steering
$
$=====================================================================

  xLog        =                                                       $ logs can be declared for each histogram 
                                                                      $ individually; per default they are  
  yLog        =                                                       $ switched off
                                                                      $
  xGrid       = 1 1 1 1 1 1 1 1 1 1 1 1 1                             $ grids can be declared for each histogram
                                                                      $ individually; per default they are 
  yGrid       = 1 1 1 1 1 1 1 1 1 1 1 1 1                             $ switched off

  histScale   =                                                       $ histogram scale; can be steered for each 
                                                                      $ histogram individually
  histMaximum = 2.0 1.0 2.0 1.0 2.0 1.0 2.0 1.0 2.0 1.0 2.0 1.0       $ histogram maximum; can be steered for 
                                                                      $ each histogram individually
  histMinimum =   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.      $ histogram minimum; can be steered for 
                                                                      $ each histogram individually
  histErrors  =   1    1    1                                         $ draw histogram errors for each sample?
                                                                      $
  histType    =   1    1    1                                         $ defines wether histogram should be plotted
                                                                      $ as line[0], with poly markers[1] or filled 
                                                                      $ [2]; default is line [0]; can be steered 
                                                                      $ for each sample individually
  histStyle   =   1    1    1                                         $ defines line or fill style for each sample

  histColor   =   2    4    1                                         $ defines line/marker/fill color for each 
                                                                      $ sample
  lineWidth   =   5    5    5                                         $ defines line width for each sample

  markerStyle =  20   21   22                                         $ defines marker style for each sample

  markerSize  = 2.3  2.3  2.3  2.3  2.3  2.3                          $ defines marker size for each sample

                                                                      $ set axes titles of histograms;
  xAxes       = "p_{t}(Jet)^{had} [GeV]";                             $ has to be givin in " and has to end with ;
                "p_{t}(Jet)^{had} [GeV]";
                "#eta(Jet)^{had}";
                "#eta(Jet)^{had}";
                "p_{t}(Jet)^{had}(-3<#eta<-1.4) [GeV]";
                "p_{t}(Jet)^{had}(-3<#eta<-1.4) [GeV]";
                "p_{t}(Jet)^{had}(-1.4<#eta<0) [GeV]";
                "p_{t}(Jet)^{had}(-1.4<#eta<0) [GeV]";
                "p_{t}(Jet)^{had}(0<#eta<1.4) [GeV]";
                "p_{t}(Jet)^{had}(0<#eta<1.4) GeV]";
                "p_{t}(Jet)^{had}(1.4<#eta<3) [GeV]";
                "p_{t}(Jet)^{had}(1.4<#eta<3) [GeV]";

  yAxes       = "#mu (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#sigma_{norm} (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#mu (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#sigma_{norm} (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#mu (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#sigma_{norm} (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#mu (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#sigma_{norm} (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#mu (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#sigma_{norm} (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#mu (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";
                "#sigma_{norm} (p_{t}(Jet)^{rec}/p_{t}(Jet)^{had})";

  legEntries = "uncalibrated";                                        $ should contain a legend entry for each 
               "Factorized(L2)";                                      $ sample in " and separated by ;
               "Factorized(L3)";                                      $
                                                                      $
  legXLeft   = 0.25                                                   $ so far a steering of the legend coord's 
                                                                      $ is only supported globally
  legXRight  = 0.95                                                   $
                                                                      $
  legYLower  = 0.70

  legYUpper  = 0.95


$ -- configBlockFit -- $
$=====================================================================
$
$ fit steering steering
$
$=====================================================================

  evalType         = 0                                                $ mean/sigma evaluation type; 
                                                                      $ 0 is StabilizedGuass
                                                                      $ 1 is HistogramMean
                                                                      $ 2 is MaximalValue
                                                                      $ 3 is Quantile
  targetLabel      = cal res                                          $ contains a list of prefixes of target 
                                                                      $ histograms to write the fit results to
  fitFunctionName  = func                                             $ fit function name
                                                                      $
  fitFunctionTitle = Fit(Gauss)                                       $ title of the fit function to be shown in 
                                                                      $ the legend e.g.
  fitFunctionType  = 0                                                $ fit function type; 0 is stable fitted sngl
                                                                      $ gauss
  fitLowerBound    = 0.                                               $ lower boundary of fit range; to be adjusted 
                                                                      $ for ratio and difference
  fitUpperBound    = 2.                                               $ upper boundary of fit range; to be adjusted
                                                                      $ for ratio and difference
  xAxesFit         = "(p_{t}^{smp}-p_{t}^{ref})/p_{t}^{ref}(incl)";         $ axes labels for fit histograms; keep dif-
                     "(p_{t}^{smp}-p_{t}^{ref})/p_{t}^{ref}(incl)";         $ ferent labels here to adress them in the 
                     "(p_{t}^{smp}-p_{t}^{ref})/p_{t}^{ref}(-3<#eta<-1.4)"; $ following variable (titleIndex), should be  
                     "(p_{t}^{smp}-p_{t}^{ref})/p_{t}^{ref}(-1.4<#eta<0)";  $ in " and end with ;
                     "(p_{t}^{smp}-p_{t}^{ref})/p_{t}^{ref}(0<#eta<-1.4)";  $
                     "(p_{t}^{smp}-p_{t}^{ref})/p_{t}^{ref}(1.4<#eta<3)";   $
                                                                      $
  yAxesFit         =                                                  $ following variable (titleIndex), should be 
                                                                      $ in " and end with ;
  titleIndex       = 0 0 0 0 0 0 0 0                                  $ titleIndex of x/yAxesFit for each if the 
                     1 1 1 1                                          $ the fit histograms
                     2 2 2 2 2 2 2 2                                  $
                     3 3 3 3 3 3 3 3                                  $
                     4 4 4 4 4 4 4 4 
                     5 5 5 5 5 5 5 5

$ -- configBlockSpecific -- $
$=====================================================================
$
$ macro specific steerables
$
$=====================================================================

  corrHistNames    = val_recVsRef                                     $ contains list of histogram names for 
                                                                      $
  corrAxesLabels   = "log_{10}(p_{t}(Jet)^{%s})";                     $ list of axes labels for correlation  
                                                                      $ plots
                                                                      $
  effHistNames     = match_effPt_0  match_effPt_1                     $ contains list of histogram names for
                     match_effEta_0 match_effEta_1                    $ match efficiency plots; obey order of
                                                                      $ histograms in the sense of (reference 
                                                                      $ first sample next)
  effAxesLabels    = "p_{t} (%s) [GeV]";                              $ list of axes labels for matching 
                     "#eta (%s)";                                     $ efficiency plots
                                                                      $
  cmpObjectLabels  = RecoJet GenJet                                   $ contains a list of prefixes of target 
