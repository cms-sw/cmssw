#include "TrackingTools/GsfTools/interface/CloseComponentsMerger.h"
#include "TrackingTools/GsfTools/interface/DistanceBetweenComponents.h"

#include "FWCore/Framework/interface/EventSetup.h"
#include "FWCore/Framework/interface/ESHandle.h"
#include "FWCore/Framework/interface/ModuleFactory.h"
#include "FWCore/Framework/interface/ESProducer.h"

#include <string>
#include <memory>

#include <iostream>

// #include "TrackingTools/GsfTools/interface/MultiGaussianState.h"
// #include "TrackingTools/GsfTools/interface/SingleGaussianState.h"
// #include "TrackingTools/GsfTools/interface/SingleGaussianState.h"

template <unsigned int N>
CloseComponentsMergerESProducer<N>::CloseComponentsMergerESProducer(const edm::ParameterSet& p)
    : maxComp_(p.getParameter<int>("MaxComponents")),
      distToken_(setWhatProduced(this, p.getParameter<std::string>("ComponentName"))
                     .consumes(edm::ESInputTag("", p.getParameter<std::string>("DistanceMeasure")))) {}

template <unsigned int N>
CloseComponentsMergerESProducer<N>::~CloseComponentsMergerESProducer() {
  //   std::cout << "MultiGaussianState: "
  // 	    << MultiGaussianState<5>::instances_ << " "
  // 	    << MultiGaussianState<5>::maxInstances_ << " "
  // 	    << MultiGaussianState<5>::constructsCombinedState_ << std::endl;
  //   std::cout << "SingleGaussianState: "
  // 	    << SingleGaussianState<5>::instances_ << " "
  // 	    << SingleGaussianState<5>::maxInstances_ << " "
  // 	    << SingleGaussianState<5>::constructsWeightMatrix_ << std::endl;
  //   std::cout << "SingleGaussianState: "
  // 	    << SingleGaussianState<5>::instances_ << " "
  // 	    << SingleGaussianState<5>::maxInstances_ << " "
  // 	    << SingleGaussianState<5>::constructsWeightMatrix_ << std::endl;
  //   std::cout << "CloseComponentsMergerESProducer deleted" << std::endl;
}

template <unsigned int N>
typename std::unique_ptr<MultiGaussianStateMerger<N> > CloseComponentsMergerESProducer<N>::produce(
    const TrackingComponentsRecord& iRecord) {
  return std::unique_ptr<MultiGaussianStateMerger<N> >(
      new CloseComponentsMerger<N>(maxComp_, &iRecord.get(distToken_)));
}

template <unsigned int N>
void CloseComponentsMergerESProducer<N>::fillDescriptions(edm::ConfigurationDescriptions& descriptions) {
  edm::ParameterSetDescription desc;
  desc.add<std::string>("ComponentName");
  desc.add<int>("MaxComponents");
  desc.add<std::string>("DistanceMeasure");

  descriptions.addDefault(desc);
}
